version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Run lint
          command: yarn lint
      - run:
           name: Build
           command: yarn build
      - run:
          name: Run unit tests
          command: yarn test --coverage
      - store_test_results:
          path: coverage
      - run:
          name: Install Docker Compose
          command: ./scripts/circleci/install_docker_compose.sh
      - setup_remote_docker
      - run:
          name: Run integration tests
          command: ./scripts/circleci/run_automation_test.sh -t integration
  publish:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Package
          command: |
            npm install cpx
            npx lerna exec -- 'cpx package.json build/'
            npx lerna exec -- 'cpx README.md build/'
            npx lerna exec -- 'cpx ../../LICENSE build/'
      - run:
          name: Publish
          command: |
            echo "//registry.npmjs.org/:_authToken=${NPM_KEY}" > ~/.npmrc
            echo 'Publishing to npmjs.org'
            npx lerna exec -- 'cd build && npm publish --access public'
workflows:
  version: 2
  run-build:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - /^[0-9]+[.][0-9]+[.][0-9](-[a-zA-Z].+)?$/
