name: PR builder

on:
  pull_request:
    branches:
    - develop
    - master
  push:
    branches:
    - develop
    - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/setup-node@v1
      with:
        node-version: '15.3'
    - name: cache node modules
      id: cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('yarn.lock') }}
    - name: install
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn
    - name: lint
      run: yarn lint
    - name: build
      run: yarn build
    - name: unit tests
      run: yarn test --coverage
  e2e:
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-suite:
          # grouped test runs
          - "v36-compat"
          - "create|call|queries"
          - tx
          - attestation.*
          - cennzx.*
          - nft.*
          - staking
          - rpc.decodeResponse
          - send
          - getMetadata
          - governance
          - ethBridge
    steps:
    - name: start local Eth node setup
      uses: actions/checkout@v2
      with:
        repository: cennznet/bridge-contracts
        ref: main
    - name: install
      run: yarn
    - name: build
      env:
        ACCOUNT_KEY: ${{ secrets.ACCOUNT_KEY }}
        ROPSTEN_INFURA_API_KEY: ${{ secrets.ROPSTEN_INFURA_API_KEY }}
      run: yarn build
    - name: start local Eth node
      run: |
        docker run --dns=127.0.0.1 -d --name ethNode -p 8545:8545 -p 30303:30303  ethereumoptimism/hardhat
        docker container ls -a
    - name: Deploy contract and deposit
      env:
        ACCOUNT_KEY: ${{ secrets.ACCOUNT_KEY }}
        ROPSTEN_INFURA_API_KEY: ${{ secrets.ROPSTEN_INFURA_API_KEY }}
      run: yarn deploy
    - uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '10.19'
    - name: cache node modules
      id: cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('yarn.lock') }}
    - name: install
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn
    - name: start v36 test node
      if: contains(${{ matrix['test-suite'] }}, 'v36')
      run: |
        docker run --network=host -d cennznet/cennznet:1.1.1 --dev --ws-external --ws-port=9945 --no-mdns
    - name: start latest test node and list all docker container
      run: |
        docker network create my-bridge-net
        docker run --pull=always --network=my-bridge-net --name testnet_node_alice -p 9944:9944 -d cennznet/cennznet:2.0.0-rc3 --dev --tmp --unsafe-ws-external --unsafe-rpc-external --eth-http=http://ethNode:8545 --no-mdns
        docker network connect my-bridge-net ethNode
        docker exec testnet_node_alice curl ethNode:8545
    - name: test
      env:
        TEST_TYPE: integration
        # arbitrary value to disable internal API logging in test output
        NODE_ENV: disable-logging
        API_KEY_1: ${{ secrets.API_KEY_1 }}
      run: |
        npx jest -c jest/integration.config.js "${{ matrix['test-suite'] }}" --bail  --forceExit --detectOpenHandles --runInBand
  subscribe:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '15.3'
    - name: start latest test node
      run: |
        docker run --pull=always --network=host -d cennznet/cennznet:2.0.0-rc3 --dev --tmp --ws-external --rpc-external --no-mdns
    - name: run subscriber script at polkadot/rpc-provider version (2.7.1)
      working-directory: ./test
      run: |
        yarn
        yarn start
