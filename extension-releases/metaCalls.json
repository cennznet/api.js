{"metaCalls":{"0x0df7f6bcfeeb5ae809bb6a425d1b8155ff92d48322870c7d2f2f87cec379801d-57":"","0x0d0971c150a9741b8719b3c6c9c2e96ec5b2e3fb83641af868e6650f3e263ef0-57":"","0x4d9337089848aa1aac7f6db23118c3844cfd99972c394521f62341ef1b657612-57":"","0x6f2ca0f5c770a9212d30b49604b2e45e2d3c949a3a940bfe908d68dbc4a0415e-57":"bWV0YQ4hBwAMHHNwX2NvcmUYY3J5cHRvLEFjY291bnRJZDMyAAAEAAQBIFt1ODsgMzJdAAAEAAADIAAAAAgACAAABQMADAgwZnJhbWVfc3lzdGVtLEFjY291bnRJbmZvCBRJbmRleAEQLEFjY291bnREYXRhARQAFAEUbm9uY2UQARRJbmRleAABJGNvbnN1bWVycxgBIFJlZkNvdW50AAEkcHJvdmlkZXJzGAEgUmVmQ291bnQAASxzdWZmaWNpZW50cxgBIFJlZkNvdW50AAEQZGF0YRQBLEFjY291bnREYXRhAAAQAAAFBgAUAAAEAAAYAAAFBQAcDDRmcmFtZV9zdXBwb3J0HHdlaWdodHNAUGVyRGlzcGF0Y2hDbGFzcwQEVAEQAAwBGG5vcm1hbBABBFQAASxvcGVyYXRpb25hbBABBFQAASRtYW5kYXRvcnkQAQRUAAAgCDxwcmltaXRpdmVfdHlwZXMQSDI1NgAABAAEASBbdTg7IDMyXQAAJAAAAggAKBAoc3BfcnVudGltZRxnZW5lcmljGGRpZ2VzdBhEaWdlc3QAAAQBEGxvZ3MsATxWZWM8RGlnZXN0SXRlbT4AACwAAAIwADAQKHNwX3J1bnRpbWUcZ2VuZXJpYxhkaWdlc3QoRGlnZXN0SXRlbQABFChQcmVSdW50aW1lCAA0AURDb25zZW5zdXNFbmdpbmVJZAAAJAEcVmVjPHU4PgAGACRDb25zZW5zdXMIADQBRENvbnNlbnN1c0VuZ2luZUlkAAAkARxWZWM8dTg+AAQAEFNlYWwIADQBRENvbnNlbnN1c0VuZ2luZUlkAAAkARxWZWM8dTg+AAUAFE90aGVyBAAkARxWZWM8dTg+AAAAZFJ1bnRpbWVFbnZpcm9ubWVudFVwZGF0ZWQACAAANAAAAwQAAAAIADgAAAI8ADwIMGZyYW1lX3N5c3RlbSxFdmVudFJlY29yZAgERQFABFQBIAAMARRwaGFzZV0BARRQaGFzZQABFGV2ZW50QAEERQABGHRvcGljc00BARhWZWM8VD4AAEAIQGNlbm56bmV0X3J1bnRpbWUURXZlbnQAAVgYU3lzdGVtBABEAXBmcmFtZV9zeXN0ZW06OkV2ZW50PFJ1bnRpbWU+AAAAJFNjaGVkdWxlcgQAYAGAcGFsbGV0X3NjaGVkdWxlcjo6RXZlbnQ8UnVudGltZT4AAQAwR2VuZXJpY0Fzc2V0BABwAYhjcm1sX2dlbmVyaWNfYXNzZXQ6OkV2ZW50PFJ1bnRpbWU+AAQAHFN0YWtpbmcEAIwBcGNybWxfc3Rha2luZzo6RXZlbnQ8UnVudGltZT4ABgAgT2ZmZW5jZXMEAJwBWHBhbGxldF9vZmZlbmNlczo6RXZlbnQABwAcU2Vzc2lvbgQApAFUcGFsbGV0X3Nlc3Npb246OkV2ZW50AAgAHEdyYW5kcGEEAKgBVHBhbGxldF9ncmFuZHBhOjpFdmVudAAJACBJbU9ubGluZQQAvAGAcGFsbGV0X2ltX29ubGluZTo6RXZlbnQ8UnVudGltZT4ACgAQU3VkbwQA3AFscGFsbGV0X3N1ZG86OkV2ZW50PFJ1bnRpbWU+AAwAIFRyZWFzdXJ5BADgAXxwYWxsZXRfdHJlYXN1cnk6OkV2ZW50PFJ1bnRpbWU+AA0AHFV0aWxpdHkEAOQBVHBhbGxldF91dGlsaXR5OjpFdmVudAAOACBJZGVudGl0eQQA6AF8cGFsbGV0X2lkZW50aXR5OjpFdmVudDxSdW50aW1lPgAPABhDZW5uengEAOwBbGNybWxfY2Vubnp4OjpFdmVudDxSdW50aW1lPgASABxSZXdhcmRzBADwAZBjcm1sX3N0YWtpbmdfcmV3YXJkczo6RXZlbnQ8UnVudGltZT4AEwAMTmZ0BAD0AWBjcm1sX25mdDo6RXZlbnQ8UnVudGltZT4AFAAoR292ZXJuYW5jZQQACQEBWGNybWxfZ292ZXJuYW5jZTo6RXZlbnQAFQAkRXRoQnJpZGdlBAARAQFYY3JtbF9ldGhfYnJpZGdlOjpFdmVudAAWACBFcmMyMFBlZwQAFQEBeGNybWxfZXJjMjBfcGVnOjpFdmVudDxSdW50aW1lPgAXACRFdGhXYWxsZXQEACEBAXxjcm1sX2V0aF93YWxsZXQ6OkV2ZW50PFJ1bnRpbWU+ABgAIEV0aGVyZXVtBAAlAQFYcGFsbGV0X2V0aGVyZXVtOjpFdmVudAAZAAxFVk0EAEUBAWhwYWxsZXRfZXZtOjpFdmVudDxSdW50aW1lPgAaABxCYXNlRmVlBABZAQFYcGFsbGV0X2Jhc2VfZmVlOjpFdmVudAAbAABEDDBmcmFtZV9zeXN0ZW0YcGFsbGV0FEV2ZW50BARUAAEYQEV4dHJpbnNpY1N1Y2Nlc3MEATRkaXNwYXRjaF9pbmZvSAEwRGlzcGF0Y2hJbmZvAAAEkEFuIGV4dHJpbnNpYyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LjxFeHRyaW5zaWNGYWlsZWQIAThkaXNwYXRjaF9lcnJvclQBNERpc3BhdGNoRXJyb3IAATRkaXNwYXRjaF9pbmZvSAEwRGlzcGF0Y2hJbmZvAAEEUEFuIGV4dHJpbnNpYyBmYWlsZWQuLENvZGVVcGRhdGVkAAIEUGA6Y29kZWAgd2FzIHVwZGF0ZWQuKE5ld0FjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAMEaEEgbmV3IGFjY291bnQgd2FzIGNyZWF0ZWQuNEtpbGxlZEFjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAQEWEFuIGFjY291bnQgd2FzIHJlYXBlZC4gUmVtYXJrZWQIARhzZW5kZXIAATBUOjpBY2NvdW50SWQAARBoYXNoIAEcVDo6SGFzaAAFBHBPbiBvbi1jaGFpbiByZW1hcmsgaGFwcGVuZWQuBHBFdmVudCBmb3IgdGhlIFN5c3RlbSBwYWxsZXQuSAw0ZnJhbWVfc3VwcG9ydBx3ZWlnaHRzMERpc3BhdGNoSW5mbwAADAEYd2VpZ2h0EAEYV2VpZ2h0AAEUY2xhc3NMATREaXNwYXRjaENsYXNzAAEgcGF5c19mZWVQARBQYXlzAABMDDRmcmFtZV9zdXBwb3J0HHdlaWdodHM0RGlzcGF0Y2hDbGFzcwABDBhOb3JtYWwAAAAsT3BlcmF0aW9uYWwAAQAkTWFuZGF0b3J5AAIAAFAMNGZyYW1lX3N1cHBvcnQcd2VpZ2h0cxBQYXlzAAEIDFllcwAAAAhObwABAABUCChzcF9ydW50aW1lNERpc3BhdGNoRXJyb3IAASAUT3RoZXIAAAAwQ2Fubm90TG9va3VwAAEAJEJhZE9yaWdpbgACABhNb2R1bGUIARRpbmRleAgBCHU4AAEUZXJyb3IIAQh1OAADAERDb25zdW1lclJlbWFpbmluZwAEACxOb1Byb3ZpZGVycwAFABRUb2tlbgQAWAEoVG9rZW5FcnJvcgAGAChBcml0aG1ldGljBABcATxBcml0aG1ldGljRXJyb3IABwAAWAgoc3BfcnVudGltZShUb2tlbkVycm9yAAEcHE5vRnVuZHMAAAAgV291bGREaWUAAQAwQmVsb3dNaW5pbXVtAAIAMENhbm5vdENyZWF0ZQADADBVbmtub3duQXNzZXQABAAYRnJvemVuAAUALFVuc3VwcG9ydGVkAAYAAFwIKHNwX3J1bnRpbWU8QXJpdGhtZXRpY0Vycm9yAAEMJFVuZGVyZmxvdwAAACBPdmVyZmxvdwABADhEaXZpc2lvbkJ5WmVybwACAABgDEBwYWxsZXRfc2NoZWR1bGVyGHBhbGxldBRFdmVudAQEVAABDCRTY2hlZHVsZWQIARB3aGVuGAE4VDo6QmxvY2tOdW1iZXIAARRpbmRleBgBDHUzMgAABFBTY2hlZHVsZWQgc29tZSB0YXNrLiBDYW5jZWxlZAgBEHdoZW4YAThUOjpCbG9ja051bWJlcgABFGluZGV4GAEMdTMyAAEETENhbmNlbGVkIHNvbWUgdGFzay4oRGlzcGF0Y2hlZAwBEHRhc2tkAWxUYXNrQWRkcmVzczxUOjpCbG9ja051bWJlcj4AAQhpZGgBPE9wdGlvbjxWZWM8dTg+PgABGHJlc3VsdGwBOERpc3BhdGNoUmVzdWx0AAIEVERpc3BhdGNoZWQgc29tZSB0YXNrLgQwRXZlbnRzIHR5cGUuZAAABAgYGABoBBhPcHRpb24EBFQBJAEIEE5vbmUAAAAQU29tZQQAJAAAAQAAbAQYUmVzdWx0CARUARQERQFUAQgIT2sEABQAAAAADEVycgQAVAAAAQAAcAhIY3JtbF9nZW5lcmljX2Fzc2V0IFJhd0V2ZW50ECRBY2NvdW50SWQBABxBc3NldElkARgcQmFsYW5jZQF0MEFzc2V0T3B0aW9ucwF4ARwcQ3JlYXRlZAwAGAEcQXNzZXRJZAAAAAEkQWNjb3VudElkAAB4ATBBc3NldE9wdGlvbnMAAATEQXNzZXQgY3JlYXRlZCAoYXNzZXRfaWQsIGNyZWF0b3IsIGFzc2V0X29wdGlvbnMpLixUcmFuc2ZlcnJlZBAAGAEcQXNzZXRJZAAAAAEkQWNjb3VudElkAAAAASRBY2NvdW50SWQAAHQBHEJhbGFuY2UAAQTYQXNzZXQgdHJhbnNmZXIgc3VjY2VlZGVkIChhc3NldF9pZCwgZnJvbSwgdG8sIGFtb3VudCkuRFBlcm1pc3Npb25VcGRhdGVkCAAYARxBc3NldElkAACAAWxQZXJtaXNzaW9uTGF0ZXN0PEFjY291bnRJZD4AAgTUQXNzZXQgcGVybWlzc2lvbiB1cGRhdGVkIChhc3NldF9pZCwgbmV3X3Blcm1pc3Npb25zKS5AQXNzZXRJbmZvVXBkYXRlZAgAGAEcQXNzZXRJZAAAiAEkQXNzZXRJbmZvAAMEqEFzc2V0IGluZm8gdXBkYXRlZCAoYXNzZXRfaWQsIGFzc2V0X2luZm8pLhhNaW50ZWQMABgBHEFzc2V0SWQAAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAEBLROZXcgYXNzZXQgbWludGVkIChhc3NldF9pZCwgYWNjb3VudCwgYW1vdW50KS4YQnVybmVkDAAYARxBc3NldElkAAAAASRBY2NvdW50SWQAAHQBHEJhbGFuY2UABQSkQXNzZXQgYnVybmVkIChhc3NldF9pZCwgYWNjb3VudCwgYW1vdW50KS40RHVzdFJlY2xhaW1lZAwAGAEcQXNzZXRJZAAAAAEkQWNjb3VudElkAAB0ARxCYWxhbmNlAAYEVQFBc3NldCBiYWxhbmNlIHN0b3JhZ2UgaGFzIGJlZW4gcmVjbGFpbWVkIGR1ZSB0byBmYWxsaW5nIGJlbG93IHRoZSBleGlzdGVudGlhbCBkZXBvc2l0BFxFdmVudHMgZm9yIHRoaXMgbW9kdWxlLnQAAAUHAHgMSGNybWxfZ2VuZXJpY19hc3NldBR0eXBlczBBc3NldE9wdGlvbnMIHEJhbGFuY2UBdCRBY2NvdW50SWQBAAAIAUBpbml0aWFsX2lzc3VhbmNlfAEcQmFsYW5jZQABLHBlcm1pc3Npb25zgAFsUGVybWlzc2lvbkxhdGVzdDxBY2NvdW50SWQ+AAB8AAAGdACADEhjcm1sX2dlbmVyaWNfYXNzZXQUdHlwZXM0UGVybWlzc2lvbnNWMQQkQWNjb3VudElkAQAADAEYdXBkYXRlhAFAT3duZXI8QWNjb3VudElkPgABEG1pbnSEAUBPd25lcjxBY2NvdW50SWQ+AAEQYnVyboQBQE93bmVyPEFjY291bnRJZD4AAIQMSGNybWxfZ2VuZXJpY19hc3NldBR0eXBlcxRPd25lcgQkQWNjb3VudElkAQABCBBOb25lAAAAHEFkZHJlc3MEAAABJEFjY291bnRJZAABAACIDEhjcm1sX2dlbmVyaWNfYXNzZXQUdHlwZXMkQXNzZXRJbmZvAAAMARhzeW1ib2wkARxWZWM8dTg+AAE4ZGVjaW1hbF9wbGFjZXMIAQh1OAABTGV4aXN0ZW50aWFsX2RlcG9zaXQQAQx1NjQAAIwIMGNybWxfc3Rha2luZyBSYXdFdmVudAgcQmFsYW5jZQF0JEFjY291bnRJZAEAASwUU2xhc2gIAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAABCEBT25lIHZhbGlkYXRvciAoYW5kIGl0cyBub21pbmF0b3JzKSBoYXMgYmVlbiBzbGFzaGVkIGJ5IHRoZSBnaXZlbiBhbW91bnQuWEludnVsbmVyYWJsZU5vdFNsYXNoZWQIAAABJEFjY291bnRJZAAAkAEcUGVyYmlsbAABBOhUaGUgdmFsaWRhdG9yIGlzIGludnVsbmVyYWJsZSwgc28gaXQgaGFzIE5PVCBiZWVuIHNsYXNoZWQuOFNldE1pbmltdW1Cb25kBAB0ARxCYWxhbmNlAAIEfE1pbmltdW0gYm9uZCBhbW91bnQgaXMgY2hhbmdlZC5oT2xkU2xhc2hpbmdSZXBvcnREaXNjYXJkZWQEABgBMFNlc3Npb25JbmRleAADCBkBQW4gb2xkIHNsYXNoaW5nIHJlcG9ydCBmcm9tIGEgcHJpb3IgZXJhIHdhcyBkaXNjYXJkZWQgYmVjYXVzZSBpdCBjb3VsZERub3QgYmUgcHJvY2Vzc2VkLjxTdGFraW5nRWxlY3Rpb24EAJQBPEVsZWN0aW9uQ29tcHV0ZQAEBPBBIG5ldyBzZXQgb2Ygc3Rha2VycyB3YXMgZWxlY3RlZCB3aXRoIHRoZSBnaXZlbiBcW2NvbXB1dGVcXS44U29sdXRpb25TdG9yZWQEAJQBPEVsZWN0aW9uQ29tcHV0ZQAFBBUBQSBuZXcgc29sdXRpb24gZm9yIHRoZSB1cGNvbWluZyBlbGVjdGlvbiBoYXMgYmVlbiBzdG9yZWQuIFxbY29tcHV0ZVxdQFNldEludnVsbmVyYWJsZXMEAJgBOFZlYzxBY2NvdW50SWQ+AAYE1EEgbmV3IHNldCBvZiB2YWxpZGF0b3JzIGFyZSBtYXJrZWQgdG8gYmUgaW52dWxuZXJhYmxlGEJvbmRlZAgAAAEkQWNjb3VudElkAAB0ARxCYWxhbmNlAAcQ0EFuIGFjY291bnQgaGFzIGJvbmRlZCB0aGlzIGFtb3VudC4gXFtzdGFzaCwgYW1vdW50XF0ATQFOT1RFOiBUaGlzIGV2ZW50IGlzIG9ubHkgZW1pdHRlZCB3aGVuIGZ1bmRzIGFyZSBib25kZWQgdmlhIGEgZGlzcGF0Y2hhYmxlLiBOb3RhYmx5LCEBaXQgd2lsbCBub3QgYmUgZW1pdHRlZCBmb3Igc3Rha2luZyByZXdhcmRzIHdoZW4gdGhleSBhcmUgYWRkZWQgdG8gc3Rha2UuIFVuYm9uZGVkCAAAASRBY2NvdW50SWQAAHQBHEJhbGFuY2UACATYQW4gYWNjb3VudCBoYXMgdW5ib25kZWQgdGhpcyBhbW91bnQuIFxbc3Rhc2gsIGFtb3VudFxdJFdpdGhkcmF3bggAAAEkQWNjb3VudElkAAB0ARxCYWxhbmNlAAkIWQFBbiBhY2NvdW50IGhhcyBjYWxsZWQgYHdpdGhkcmF3X3VuYm9uZGVkYCBhbmQgcmVtb3ZlZCB1bmJvbmRpbmcgY2h1bmtzIHdvcnRoIGBCYWxhbmNlYKxmcm9tIHRoZSB1bmxvY2tpbmcgcXVldWUuIFxbc3Rhc2gsIGFtb3VudFxdHFNsYXNoZWQIAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAKCCEBT25lIHZhbGlkYXRvciAoYW5kIGl0cyBub21pbmF0b3JzKSBoYXMgYmVlbiBzbGFzaGVkIGJ5IHRoZSBnaXZlbiBhbW91bnQuVFxbdmFsaWRhdG9yLCBhbW91bnRcXQRcRXZlbnRzIGZvciB0aGlzIG1vZHVsZS6QDDRzcF9hcml0aG1ldGljKHBlcl90aGluZ3McUGVyYmlsbAAABAAYAQx1MzIAAJQIMGNybWxfc3Rha2luZzxFbGVjdGlvbkNvbXB1dGUAAQwcT25DaGFpbgAAABhTaWduZWQAAQAgVW5zaWduZWQAAgAAmAAAAgAAnAw8cGFsbGV0X29mZmVuY2VzGHBhbGxldBRFdmVudAABBBxPZmZlbmNlCAEQa2luZKABEEtpbmQAASB0aW1lc2xvdCQBOE9wYXF1ZVRpbWVTbG90AAAMUQFUaGVyZSBpcyBhbiBvZmZlbmNlIHJlcG9ydGVkIG9mIHRoZSBnaXZlbiBga2luZGAgaGFwcGVuZWQgYXQgdGhlIGBzZXNzaW9uX2luZGV4YCBhbmQ1AShraW5kLXNwZWNpZmljKSB0aW1lIHNsb3QuIFRoaXMgZXZlbnQgaXMgbm90IGRlcG9zaXRlZCBmb3IgZHVwbGljYXRlIHNsYXNoZXMuTFxba2luZCwgdGltZXNsb3RcXS4EMEV2ZW50cyB0eXBlLqAAAAMQAAAACACkDDhwYWxsZXRfc2Vzc2lvbhhwYWxsZXQURXZlbnQAAQQoTmV3U2Vzc2lvbgQBNHNlc3Npb25faW5kZXgYATBTZXNzaW9uSW5kZXgAAAg5AU5ldyBzZXNzaW9uIGhhcyBoYXBwZW5lZC4gTm90ZSB0aGF0IHRoZSBhcmd1bWVudCBpcyB0aGUgc2Vzc2lvbiBpbmRleCwgbm90IHRoZZxibG9jayBudW1iZXIgYXMgdGhlIHR5cGUgbWlnaHQgc3VnZ2VzdC4EeQFUaGUgW2V2ZW50XShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpIGVtaXR0ZWQKCQkJYnkgdGhpcyBwYWxsZXQuqAw4cGFsbGV0X2dyYW5kcGEYcGFsbGV0FEV2ZW50AAEMOE5ld0F1dGhvcml0aWVzBAE0YXV0aG9yaXR5X3NldKwBNEF1dGhvcml0eUxpc3QAAASMTmV3IGF1dGhvcml0eSBzZXQgaGFzIGJlZW4gYXBwbGllZC4YUGF1c2VkAAEEmEN1cnJlbnQgYXV0aG9yaXR5IHNldCBoYXMgYmVlbiBwYXVzZWQuHFJlc3VtZWQAAgScQ3VycmVudCBhdXRob3JpdHkgc2V0IGhhcyBiZWVuIHJlc3VtZWQuBHkBVGhlIFtldmVudF0oaHR0cHM6Ly9kb2NzLnN1YnN0cmF0ZS5pby92My9ydW50aW1lL2V2ZW50cy1hbmQtZXJyb3JzKSBlbWl0dGVkCgkJCWJ5IHRoaXMgcGFsbGV0LqwAAAKwALAAAAQItBAAtAxMc3BfZmluYWxpdHlfZ3JhbmRwYQxhcHAYUHVibGljAAAEALgBPGVkMjU1MTk6OlB1YmxpYwAAuAwcc3BfY29yZRxlZDI1NTE5GFB1YmxpYwAABAAEASBbdTg7IDMyXQAAvAxAcGFsbGV0X2ltX29ubGluZRhwYWxsZXQURXZlbnQEBFQAAQxESGVhcnRiZWF0UmVjZWl2ZWQEATBhdXRob3JpdHlfaWTAAThUOjpBdXRob3JpdHlJZAAABMBBIG5ldyBoZWFydGJlYXQgd2FzIHJlY2VpdmVkIGZyb20gYEF1dGhvcml0eUlkYC4cQWxsR29vZAABBNBBdCB0aGUgZW5kIG9mIHRoZSBzZXNzaW9uLCBubyBvZmZlbmNlIHdhcyBjb21taXR0ZWQuLFNvbWVPZmZsaW5lBAEcb2ZmbGluZcgBbFZlYzxJZGVudGlmaWNhdGlvblR1cGxlPFQ+PgACBCkBQXQgdGhlIGVuZCBvZiB0aGUgc2Vzc2lvbiwgYXQgbGVhc3Qgb25lIHZhbGlkYXRvciB3YXMgZm91bmQgdG8gYmUgb2ZmbGluZS4EeQFUaGUgW2V2ZW50XShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpIGVtaXR0ZWQKCQkJYnkgdGhpcyBwYWxsZXQuwBBAcGFsbGV0X2ltX29ubGluZRxzcjI1NTE5LGFwcF9zcjI1NTE5GFB1YmxpYwAABADEATxzcjI1NTE5OjpQdWJsaWMAAMQMHHNwX2NvcmUcc3IyNTUxORhQdWJsaWMAAAQABAEgW3U4OyAzMl0AAMgAAALMAMwAAAQIANAA0AgwY3JtbF9zdGFraW5nIEV4cG9zdXJlCCRBY2NvdW50SWQBABxCYWxhbmNlAXQADAEUdG90YWx8ARxCYWxhbmNlAAEMb3dufAEcQmFsYW5jZQABGG90aGVyc9QBrFZlYzxJbmRpdmlkdWFsRXhwb3N1cmU8QWNjb3VudElkLCBCYWxhbmNlPj4AANQAAALYANgIMGNybWxfc3Rha2luZ0hJbmRpdmlkdWFsRXhwb3N1cmUIJEFjY291bnRJZAEAHEJhbGFuY2UBdAAIAQx3aG8AASRBY2NvdW50SWQAARR2YWx1ZXwBHEJhbGFuY2UAANwMLHBhbGxldF9zdWRvGHBhbGxldBRFdmVudAQEVAABDBRTdWRpZAQBLHN1ZG9fcmVzdWx0bAE4RGlzcGF0Y2hSZXN1bHQAAASIQSBzdWRvIGp1c3QgdG9vayBwbGFjZS4gXFtyZXN1bHRcXShLZXlDaGFuZ2VkBAEobmV3X3N1ZG9lcgABMFQ6OkFjY291bnRJZAABBPxUaGUgXFtzdWRvZXJcXSBqdXN0IHN3aXRjaGVkIGlkZW50aXR5OyB0aGUgb2xkIGtleSBpcyBzdXBwbGllZC4oU3Vkb0FzRG9uZQQBLHN1ZG9fcmVzdWx0bAE4RGlzcGF0Y2hSZXN1bHQAAgSIQSBzdWRvIGp1c3QgdG9vayBwbGFjZS4gXFtyZXN1bHRcXQR5AVRoZSBbZXZlbnRdKGh0dHBzOi8vZG9jcy5zdWJzdHJhdGUuaW8vdjMvcnVudGltZS9ldmVudHMtYW5kLWVycm9ycykgZW1pdHRlZAoJCQlieSB0aGlzIHBhbGxldC7gDDxwYWxsZXRfdHJlYXN1cnkYcGFsbGV0FEV2ZW50CARUAARJAAEcIFByb3Bvc2VkBAE4cHJvcG9zYWxfaW5kZXgYATRQcm9wb3NhbEluZGV4AAAENE5ldyBwcm9wb3NhbC4gU3BlbmRpbmcEAUBidWRnZXRfcmVtYWluaW5ndAE8QmFsYW5jZU9mPFQsIEk+AAEE5FdlIGhhdmUgZW5kZWQgYSBzcGVuZCBwZXJpb2QgYW5kIHdpbGwgbm93IGFsbG9jYXRlIGZ1bmRzLhxBd2FyZGVkDAE4cHJvcG9zYWxfaW5kZXgYATRQcm9wb3NhbEluZGV4AAEUYXdhcmR0ATxCYWxhbmNlT2Y8VCwgST4AARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAIEfFNvbWUgZnVuZHMgaGF2ZSBiZWVuIGFsbG9jYXRlZC4gUmVqZWN0ZWQIAThwcm9wb3NhbF9pbmRleBgBNFByb3Bvc2FsSW5kZXgAARxzbGFzaGVkdAE8QmFsYW5jZU9mPFQsIEk+AAMEsEEgcHJvcG9zYWwgd2FzIHJlamVjdGVkOyBmdW5kcyB3ZXJlIHNsYXNoZWQuFEJ1cm50BAEsYnVybnRfZnVuZHN0ATxCYWxhbmNlT2Y8VCwgST4ABASIU29tZSBvZiBvdXIgZnVuZHMgaGF2ZSBiZWVuIGJ1cm50LiBSb2xsb3ZlcgQBQHJvbGxvdmVyX2JhbGFuY2V0ATxCYWxhbmNlT2Y8VCwgST4ABQQtAVNwZW5kaW5nIGhhcyBmaW5pc2hlZDsgdGhpcyBpcyB0aGUgYW1vdW50IHRoYXQgcm9sbHMgb3ZlciB1bnRpbCBuZXh0IHNwZW5kLhxEZXBvc2l0BAEUdmFsdWV0ATxCYWxhbmNlT2Y8VCwgST4ABgR8U29tZSBmdW5kcyBoYXZlIGJlZW4gZGVwb3NpdGVkLgR5AVRoZSBbZXZlbnRdKGh0dHBzOi8vZG9jcy5zdWJzdHJhdGUuaW8vdjMvcnVudGltZS9ldmVudHMtYW5kLWVycm9ycykgZW1pdHRlZAoJCQlieSB0aGlzIHBhbGxldC7kDDhwYWxsZXRfdXRpbGl0eRhwYWxsZXQURXZlbnQAARBAQmF0Y2hJbnRlcnJ1cHRlZAgBFGluZGV4GAEMdTMyAAEUZXJyb3JUATREaXNwYXRjaEVycm9yAAAIVQFCYXRjaCBvZiBkaXNwYXRjaGVzIGRpZCBub3QgY29tcGxldGUgZnVsbHkuIEluZGV4IG9mIGZpcnN0IGZhaWxpbmcgZGlzcGF0Y2ggZ2l2ZW4sIGFzSHdlbGwgYXMgdGhlIGVycm9yLjhCYXRjaENvbXBsZXRlZAABBMhCYXRjaCBvZiBkaXNwYXRjaGVzIGNvbXBsZXRlZCBmdWxseSB3aXRoIG5vIGVycm9yLjRJdGVtQ29tcGxldGVkAAIEHQFBIHNpbmdsZSBpdGVtIHdpdGhpbiBhIEJhdGNoIG9mIGRpc3BhdGNoZXMgaGFzIGNvbXBsZXRlZCB3aXRoIG5vIGVycm9yLjBEaXNwYXRjaGVkQXMEARhyZXN1bHRsAThEaXNwYXRjaFJlc3VsdAADBFhBIGNhbGwgd2FzIGRpc3BhdGNoZWQuBHkBVGhlIFtldmVudF0oaHR0cHM6Ly9kb2NzLnN1YnN0cmF0ZS5pby92My9ydW50aW1lL2V2ZW50cy1hbmQtZXJyb3JzKSBlbWl0dGVkCgkJCWJ5IHRoaXMgcGFsbGV0LugMPHBhbGxldF9pZGVudGl0eRhwYWxsZXQURXZlbnQEBFQAASgsSWRlbnRpdHlTZXQEAQx3aG8AATBUOjpBY2NvdW50SWQAAATsQSBuYW1lIHdhcyBzZXQgb3IgcmVzZXQgKHdoaWNoIHdpbGwgcmVtb3ZlIGFsbCBqdWRnZW1lbnRzKS48SWRlbnRpdHlDbGVhcmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdHQBMEJhbGFuY2VPZjxUPgABBMxBIG5hbWUgd2FzIGNsZWFyZWQsIGFuZCB0aGUgZ2l2ZW4gYmFsYW5jZSByZXR1cm5lZC44SWRlbnRpdHlLaWxsZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARxkZXBvc2l0dAEwQmFsYW5jZU9mPFQ+AAIExEEgbmFtZSB3YXMgcmVtb3ZlZCBhbmQgdGhlIGdpdmVuIGJhbGFuY2Ugc2xhc2hlZC5ISnVkZ2VtZW50UmVxdWVzdGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAE8cmVnaXN0cmFyX2luZGV4GAE4UmVnaXN0cmFySW5kZXgAAwScQSBqdWRnZW1lbnQgd2FzIGFza2VkIGZyb20gYSByZWdpc3RyYXIuUEp1ZGdlbWVudFVucmVxdWVzdGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAE8cmVnaXN0cmFyX2luZGV4GAE4UmVnaXN0cmFySW5kZXgABASIQSBqdWRnZW1lbnQgcmVxdWVzdCB3YXMgcmV0cmFjdGVkLjhKdWRnZW1lbnRHaXZlbggBGHRhcmdldAABMFQ6OkFjY291bnRJZAABPHJlZ2lzdHJhcl9pbmRleBgBOFJlZ2lzdHJhckluZGV4AAUElEEganVkZ2VtZW50IHdhcyBnaXZlbiBieSBhIHJlZ2lzdHJhci44UmVnaXN0cmFyQWRkZWQEATxyZWdpc3RyYXJfaW5kZXgYAThSZWdpc3RyYXJJbmRleAAGBFhBIHJlZ2lzdHJhciB3YXMgYWRkZWQuQFN1YklkZW50aXR5QWRkZWQMAQxzdWIAATBUOjpBY2NvdW50SWQAARBtYWluAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdHQBMEJhbGFuY2VPZjxUPgAHBPRBIHN1Yi1pZGVudGl0eSB3YXMgYWRkZWQgdG8gYW4gaWRlbnRpdHkgYW5kIHRoZSBkZXBvc2l0IHBhaWQuSFN1YklkZW50aXR5UmVtb3ZlZAwBDHN1YgABMFQ6OkFjY291bnRJZAABEG1haW4AATBUOjpBY2NvdW50SWQAARxkZXBvc2l0dAEwQmFsYW5jZU9mPFQ+AAgECQFBIHN1Yi1pZGVudGl0eSB3YXMgcmVtb3ZlZCBmcm9tIGFuIGlkZW50aXR5IGFuZCB0aGUgZGVwb3NpdCBmcmVlZC5IU3ViSWRlbnRpdHlSZXZva2VkDAEMc3ViAAEwVDo6QWNjb3VudElkAAEQbWFpbgABMFQ6OkFjY291bnRJZAABHGRlcG9zaXR0ATBCYWxhbmNlT2Y8VD4ACQgZAUEgc3ViLWlkZW50aXR5IHdhcyBjbGVhcmVkLCBhbmQgdGhlIGdpdmVuIGRlcG9zaXQgcmVwYXRyaWF0ZWQgZnJvbSB0aGXIbWFpbiBpZGVudGl0eSBhY2NvdW50IHRvIHRoZSBzdWItaWRlbnRpdHkgYWNjb3VudC4EeQFUaGUgW2V2ZW50XShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpIGVtaXR0ZWQKCQkJYnkgdGhpcyBwYWxsZXQu7AgsY3JtbF9jZW5uenggUmF3RXZlbnQMJEFjY291bnRJZAEAHEFzc2V0SWQBGBxCYWxhbmNlAXQBEDBBZGRMaXF1aWRpdHkQAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAAGAEcQXNzZXRJZAAAdAEcQmFsYW5jZQAABPxQcm92aWRlciwgY29yZSBhc3NldCBhbW91bnQsIHRyYWRlIGFzc2V0IGlkLCB0cmFkZSBhc3NldCBhbW91bnQ8UmVtb3ZlTGlxdWlkaXR5EAAAASRBY2NvdW50SWQAAHQBHEJhbGFuY2UAABgBHEFzc2V0SWQAAHQBHEJhbGFuY2UAAQT8UHJvdmlkZXIsIGNvcmUgYXNzZXQgYW1vdW50LCB0cmFkZSBhc3NldCBpZCwgdHJhZGUgYXNzZXQgYW1vdW50LEFzc2V0Qm91Z2h0FAAYARxBc3NldElkAAAYARxBc3NldElkAAAAASRBY2NvdW50SWQAAHQBHEJhbGFuY2UAAHQBHEJhbGFuY2UAAgTcQXNzZXRTb2xkLCBBc3NldEJvdWdodCwgQnV5ZXIsIFNvbGRBbW91bnQsIEJvdWdodEFtb3VudCRBc3NldFNvbGQUABgBHEFzc2V0SWQAABgBHEFzc2V0SWQAAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAAdAEcQmFsYW5jZQADBNxBc3NldFNvbGQsIEFzc2V0Qm91Z2h0LCBCdXllciwgU29sZEFtb3VudCwgQm91Z2h0QW1vdW50BFxFdmVudHMgZm9yIHRoaXMgbW9kdWxlLvAMMGNybWxfc3Rha2luZxxyZXdhcmRzIFJhd0V2ZW50CBxCYWxhbmNlAXQkQWNjb3VudElkAQABEDxFcmFTdGFrZXJQYXlvdXQIAAABJEFjY291bnRJZAAAdAEcQmFsYW5jZQAABMxTdGFrZXIgcGF5b3V0IChub21pbmF0b3IvdmFsaWRhdG9yIGFjY291bnQsIGFtb3VudCkkRXJhUGF5b3V0CAB0ARxCYWxhbmNlAAB0ARxCYWxhbmNlAAEEDQFFcmEgcmV3YXJkIHBheW91dCB0aGUgdG90YWwgKGFtb3VudCB0byB0cmVhc3VyeSwgYW1vdW50IHRvIHN0YWtlcnMpREVyYVBheW91dERlZmVycmVkBAB0ARxCYWxhbmNlAAIEjQFFcmEgZW5kZWQgYWJydXB0bHkgZS5nLiBkdWUgdG8gZWFybHkgcmUtZWxlY3Rpb24sIHRoaXMgYW1vdW50IHdpbGwgYmUgZGVmZXJyZWQgdG8gdGhlIG5leHQgZnVsbCBlcmEwTmV3RmlzY2FsRXJhBAB0ARxCYWxhbmNlAAMEMQFBIGZpc2NhbCBlcmEgaGFzIGJlZ3VuIHdpdGggdGhlIHBhcmFtZXRlciAodGFyZ2V0X2luZmxhdGlvbl9wZXJfc3Rha2luZ19lcmEpBFxFdmVudHMgZm9yIHRoaXMgbW9kdWxlLvQIIGNybWxfbmZ0IFJhd0V2ZW50LDBDb2xsZWN0aW9uSWQBGCRBY2NvdW50SWQBABxBc3NldElkARgcQmFsYW5jZQF0GFJlYXNvbgH4IFNlcmllc0lkARgwU2VyaWFsTnVtYmVyARgoVG9rZW5Db3VudAEYSENvbGxlY3Rpb25OYW1lVHlwZQEkHFBlcm1pbGwB/DRNYXJrZXRwbGFjZUlkARgBOEBDcmVhdGVDb2xsZWN0aW9uDAAYATBDb2xsZWN0aW9uSWQAACQBSENvbGxlY3Rpb25OYW1lVHlwZQAAAAEkQWNjb3VudElkAAAE8EEgbmV3IHRva2VuIGNvbGxlY3Rpb24gd2FzIGNyZWF0ZWQgKGNvbGxlY3Rpb24sIG5hbWUsIG93bmVyKTBDcmVhdGVTZXJpZXMQABgBMENvbGxlY3Rpb25JZAAAGAEgU2VyaWVzSWQAABgBKFRva2VuQ291bnQAAAABJEFjY291bnRJZAABBC0BQSBuZXcgc2VyaWVzIG9mIHRva2VucyB3YXMgY3JlYXRlZCAoY29sbGVjdGlvbiwgc2VyaWVzIGlkLCBxdWFudGl0eSwgb3duZXIpMENyZWF0ZVRva2VucxAAGAEwQ29sbGVjdGlvbklkAAAYASBTZXJpZXNJZAAAGAEoVG9rZW5Db3VudAAAAAEkQWNjb3VudElkAAIE+FRva2VuKHMpIHdlcmUgY3JlYXRlZCAoY29sbGVjdGlvbiwgc2VyaWVzIGlkLCBxdWFudGl0eSwgb3duZXIpIFRyYW5zZmVyFAAAASRBY2NvdW50SWQAABgBMENvbGxlY3Rpb25JZAAAGAEgU2VyaWVzSWQAAAEBAURWZWM8U2VyaWFsTnVtYmVyPgAAAAEkQWNjb3VudElkAAMEAQFUb2tlbihzKSB3ZXJlIHRyYW5zZmVycmVkIChwcmV2aW91cyBvd25lciwgdG9rZW4gSWRzLCBuZXcgb3duZXIpEEJ1cm4MABgBMENvbGxlY3Rpb25JZAAAGAEgU2VyaWVzSWQAAAEBAURWZWM8U2VyaWFsTnVtYmVyPgAEBOhUb2tlbnMgd2VyZSBidXJuZWQgKGNvbGxlY3Rpb24sIHNlcmllcyBpZCwgc2VyaWFsIG51bWJlcnMpUEZpeGVkUHJpY2VTYWxlTGlzdGVkDAAYATBDb2xsZWN0aW9uSWQAAHQBJExpc3RpbmdJZAAABQEBVE9wdGlvbjxNYXJrZXRwbGFjZUlkPgAFBCEBQSBmaXhlZCBwcmljZSBzYWxlIGhhcyBiZWVuIGxpc3RlZCAoY29sbGVjdGlvbiwgbGlzdGluZywgbWFya2V0cGxhY2VfaWQpWEZpeGVkUHJpY2VTYWxlQ29tcGxldGUMABgBMENvbGxlY3Rpb25JZAAAdAEkTGlzdGluZ0lkAAAAASRBY2NvdW50SWQABgT4QSBmaXhlZCBwcmljZSBzYWxlIGhhcyBjb21wbGV0ZWQgKGNvbGxlY3Rpb24sIGxpc3RpbmcsIGJ1eWVyKSlQRml4ZWRQcmljZVNhbGVDbG9zZWQIABgBMENvbGxlY3Rpb25JZAAAdAEkTGlzdGluZ0lkAAcEDQFBIGZpeGVkIHByaWNlIHNhbGUgaGFzIGNsb3NlZCB3aXRob3V0IHNlbGxpbmcgKGNvbGxlY3Rpb24sIGxpc3RpbmcpaEZpeGVkUHJpY2VTYWxlUHJpY2VVcGRhdGVkCAAYATBDb2xsZWN0aW9uSWQAAHQBJExpc3RpbmdJZAAIBAkBQSBmaXhlZCBwcmljZSBzYWxlIGhhcyBoYWQgaXRzIHByaWNlIHVwZGF0ZWQgKGNvbGxlY3Rpb24sIGxpc3RpbmcpLEF1Y3Rpb25PcGVuDAAYATBDb2xsZWN0aW9uSWQAAHQBJExpc3RpbmdJZAAABQEBVE9wdGlvbjxNYXJrZXRwbGFjZUlkPgAJBOxBbiBhdWN0aW9uIGhhcyBvcGVuZWQgKGNvbGxlY3Rpb24sIGxpc3RpbmcsIG1hcmtldHBsYWNlX2lkKSxBdWN0aW9uU29sZBQAGAEwQ29sbGVjdGlvbklkAAB0ASRMaXN0aW5nSWQAABgBHEFzc2V0SWQAAHQBHEJhbGFuY2UAAAABJEFjY291bnRJZAAKBCEBQW4gYXVjdGlvbiBoYXMgc29sZCAoY29sbGVjdGlvbiwgbGlzdGluZywgcGF5bWVudCBhc3NldCwgYmlkLCBuZXcgb3duZXIpNEF1Y3Rpb25DbG9zZWQMABgBMENvbGxlY3Rpb25JZAAAdAEkTGlzdGluZ0lkAAD4ARhSZWFzb24ACwQNAUFuIGF1Y3Rpb24gaGFzIGNsb3NlZCB3aXRob3V0IHNlbGxpbmcgKGNvbGxlY3Rpb24sIGxpc3RpbmcsIHJlYXNvbikMQmlkDAAYATBDb2xsZWN0aW9uSWQAAHQBJExpc3RpbmdJZAAAdAEcQmFsYW5jZQAMBOhBIG5ldyBoaWdoZXN0IGJpZCB3YXMgcGxhY2VkIChjb2xsZWN0aW9uLCBsaXN0aW5nLCBhbW91bnQpVFJlZ2lzdGVyZWRNYXJrZXRwbGFjZQwAAAEkQWNjb3VudElkAAD8ARxQZXJtaWxsAAAYATRNYXJrZXRwbGFjZUlkAA0EWQFBbiBhY2NvdW50IGhhcyBiZWVuIHJlZ2lzdGVyZWQgYXMgYSBtYXJrZXRwbGFjZSAoYWNjb3VudCwgZW50aXRsZW1lbnQsIG1hcmtldHBsYWNlX2lkKQRcRXZlbnRzIGZvciB0aGlzIG1vZHVsZS74DCBjcm1sX25mdBR0eXBlc1BBdWN0aW9uQ2xvc3VyZVJlYXNvbgABDDRFeHBpcmVkTm9CaWRzAAAAQFNldHRsZW1lbnRGYWlsZWQAAQA8VmVuZG9yQ2FuY2VsbGVkAAIAAPwMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxxQZXJtaWxsAAAEABgBDHUzMgAAAQEAAAIYAAUBBBhPcHRpb24EBFQBGAEIEE5vbmUAAAAQU29tZQQAGAAAAQAACQEIPGNybWxfZ292ZXJuYW5jZRRFdmVudAABGDhTdWJtaXRQcm9wb3NhbAQAEAEoUHJvcG9zYWxJZAAABGBBIHByb3Bvc2FsIHdhcyBzdWJtaXR0ZWQ8RW5hY3RSZWZlcmVuZHVtCAAQAShQcm9wb3NhbElkAAANAQEQYm9vbAABBHxBIHByb3Bvc2FsIHdhcyBlbmFjdGVkLCBzdWNjZXNzMFByb3Bvc2FsVmV0bwQAEAEoUHJvcG9zYWxJZAACBJBBIHByb3Bvc2FsIHdhcyB2ZXRvZWQgYnkgdGhlIGNvdW5jaWw4UmVmZXJlbmR1bVZldG8EABABKFByb3Bvc2FsSWQAAwR8QSByZWZlcmVuZHVtIHdhcyB2ZXRvZWQgYnkgdm90ZURSZWZlcmVuZHVtQ3JlYXRlZAQAEAEoUHJvcG9zYWxJZAAEBBEBQSBwcm9wb3NhbCB3YXMgYXBwcm92ZWQgYnkgY291bmNpbCBhbmQgYSByZWZlcmVuZHVtIGhhcyBiZWVuIGNyZWF0ZWRIUmVmZXJlbmR1bUFwcHJvdmVkBAAQAShQcm9wb3NhbElkAAUE4EEgcmVmZXJlbmR1bSBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXMgYXdhaXRpbmcgZW5hY3RtZW50BFxFdmVudHMgZm9yIHRoaXMgbW9kdWxlLg0BAAAFAAARAQg8Y3JtbF9ldGhfYnJpZGdlFEV2ZW50AAEMIFZlcmlmaWVkBAAQATBFdmVudENsYWltSWQAAARwVmVyaWZ5aW5nIGFuIGV2ZW50IHN1Y2NlZWRlZBxJbnZhbGlkBAAQATBFdmVudENsYWltSWQAAQRkVmVyaWZ5aW5nIGFuIGV2ZW50IGZhaWxlZEhBdXRob3JpdHlTZXRDaGFuZ2UIABABMEV2ZW50UHJvb2ZJZAAAEAEMdTY0AAIINQFBIG5vdGFyeSAodmFsaWRhdG9yKSBzZXQgY2hhbmdlIGlzIGluIG1vdGlvbiAoZXZlbnRfaWQsIG5ld192YWxpZGF0b3Jfc2V0X2lkKQkBQSBwcm9vZiBmb3IgdGhlIGNoYW5nZSB3aWxsIGJlIGdlbmVyYXRlZCB3aXRoIHRoZSBnaXZlbiBgZXZlbnRfaWRgBFxFdmVudHMgZm9yIHRoaXMgbW9kdWxlLhUBCDhjcm1sX2VyYzIwX3BlZyBSYXdFdmVudAQkQWNjb3VudElkAQABGChFcmMyMENsYWltCAAQAQx1NjQAAAABJEFjY291bnRJZAAABOBBbiBlcmMyMCBkZXBvc2l0IGNsYWltIGhhcyBzdGFydGVkLiAoZGVwb3NpdCBJZCwgc2VuZGVyKTBFcmMyMERlcG9zaXQQABABDHU2NAAAGAEcQXNzZXRJZAAAdAEcQmFsYW5jZQAAAAEkQWNjb3VudElkAAEEKQFBIGJyaWRnZWQgZXJjMjAgZGVwb3NpdCBzdWNjZWVkZWQuKGRlcG9zaXQgSWQsIGFzc2V0LCBhbW91bnQsIGJlbmVmaWNpYXJ5KTRFcmMyMFdpdGhkcmF3EAAQAQx1NjQAABgBHEFzc2V0SWQAAHQBHEJhbGFuY2UAABkBAShFdGhBZGRyZXNzAAIEiQFUb2tlbnMgd2VyZSBidXJudCBmb3Igd2l0aGRyYXdhbCBvbiBFdGhlcmV1bSBhcyBFUkMyMHMgKHdpdGhkcmF3YWwgSWQsIGFzc2V0LCBhbW91bnQsIGJlbmVmaWNpYXJ5KUBFcmMyMERlcG9zaXRGYWlsBAAQAQx1NjQAAwSsQSBicmlkZ2VkIGVyYzIwIGRlcG9zaXQgZmFpbGVkLihkZXBvc2l0IElkKUhTZXRDb250cmFjdEFkZHJlc3MEABkBAShFdGhBZGRyZXNzAAQElFRoZSBwZWcgY29udHJhY3QgYWRkcmVzcyBoYXMgYmVlbiBzZXRMQ0VOTlpEZXBvc2l0c0FjdGl2ZQAFBHhFUkMyMCBDRU5OWiBkZXBvc2l0cyBhY3RpdmF0ZWQEXEV2ZW50cyBmb3IgdGhpcyBtb2R1bGUuGQEIPHByaW1pdGl2ZV90eXBlcxBIMTYwAAAEAB0BASBbdTg7IDIwXQAAHQEAAAMUAAAACAAhAQg8Y3JtbF9ldGhfd2FsbGV0IFJhd0V2ZW50BCRBY2NvdW50SWQBAAEEHEV4ZWN1dGUMABkBAShFdGhBZGRyZXNzAAAAASRBY2NvdW50SWQAAGwBOERpc3BhdGNoUmVzdWx0AAAECQFBIGNhbGwganVzdCBleGVjdXRlZC4gKEV0aGVyZXVtIEFkZHJlc3MsIENFTk5abmV0IEFkZHJlc3MsIFJlc3VsdCkEXEV2ZW50cyBmb3IgdGhpcyBtb2R1bGUuJQEMPHBhbGxldF9ldGhlcmV1bRhwYWxsZXQURXZlbnQAAQQgRXhlY3V0ZWQQABkBARBIMTYwAAAZAQEQSDE2MAAAIAEQSDI1NgAAKQEBKEV4aXRSZWFzb24AAAS1AUFuIGV0aGVyZXVtIHRyYW5zYWN0aW9uIHdhcyBzdWNjZXNzZnVsbHkgZXhlY3V0ZWQuIFtmcm9tLCB0by9jb250cmFjdF9hZGRyZXNzLCB0cmFuc2FjdGlvbl9oYXNoLCBleGl0X3JlYXNvbl0EeQFUaGUgW2V2ZW50XShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpIGVtaXR0ZWQKCQkJYnkgdGhpcyBwYWxsZXQuKQEMIGV2bV9jb3JlFGVycm9yKEV4aXRSZWFzb24AARAcU3VjY2VlZAQALQEBLEV4aXRTdWNjZWVkAAAAFEVycm9yBAAxAQEkRXhpdEVycm9yAAEAGFJldmVydAQAPQEBKEV4aXRSZXZlcnQAAgAURmF0YWwEAEEBASRFeGl0RmF0YWwAAwAALQEMIGV2bV9jb3JlFGVycm9yLEV4aXRTdWNjZWVkAAEMHFN0b3BwZWQAAAAgUmV0dXJuZWQAAQAgU3VpY2lkZWQAAgAAMQEMIGV2bV9jb3JlFGVycm9yJEV4aXRFcnJvcgABPDhTdGFja1VuZGVyZmxvdwAAADRTdGFja092ZXJmbG93AAEALEludmFsaWRKdW1wAAIAMEludmFsaWRSYW5nZQADAEREZXNpZ25hdGVkSW52YWxpZAAEACxDYWxsVG9vRGVlcAAFADxDcmVhdGVDb2xsaXNpb24ABgBMQ3JlYXRlQ29udHJhY3RMaW1pdAAHACxJbnZhbGlkQ29kZQAIACxPdXRPZk9mZnNldAAJACBPdXRPZkdhcwAKACRPdXRPZkZ1bmQACwAsUENVbmRlcmZsb3cADAAsQ3JlYXRlRW1wdHkADQAUT3RoZXIEADUBAURDb3c8J3N0YXRpYywgc3RyPgAOAAA1AQQMQ293BARUATkBAAQAOQEAAAA5AQAABQIAPQEMIGV2bV9jb3JlFGVycm9yKEV4aXRSZXZlcnQAAQQgUmV2ZXJ0ZWQAAAAAQQEMIGV2bV9jb3JlFGVycm9yJEV4aXRGYXRhbAABEDBOb3RTdXBwb3J0ZWQAAABIVW5oYW5kbGVkSW50ZXJydXB0AAEAQENhbGxFcnJvckFzRmF0YWwEADEBASRFeGl0RXJyb3IAAgAUT3RoZXIEADUBAURDb3c8J3N0YXRpYywgc3RyPgADAABFAQwocGFsbGV0X2V2bRhwYWxsZXQURXZlbnQEBFQAARwMTG9nBABJAQEMTG9nAAAEfEV0aGVyZXVtIGV2ZW50cyBmcm9tIGNvbnRyYWN0cy4cQ3JlYXRlZAQAGQEBEEgxNjAAAQTEQSBjb250cmFjdCBoYXMgYmVlbiBjcmVhdGVkIGF0IGdpdmVuIFxbYWRkcmVzc1xdLjRDcmVhdGVkRmFpbGVkBAAZAQEQSDE2MAACBBUBQSBcW2NvbnRyYWN0XF0gd2FzIGF0dGVtcHRlZCB0byBiZSBjcmVhdGVkLCBidXQgdGhlIGV4ZWN1dGlvbiBmYWlsZWQuIEV4ZWN1dGVkBAAZAQEQSDE2MAADBAkBQSBcW2NvbnRyYWN0XF0gaGFzIGJlZW4gZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5IHdpdGggc3RhdGVzIGFwcGxpZWQuOEV4ZWN1dGVkRmFpbGVkBAAZAQEQSDE2MAAEBHUBQSBcW2NvbnRyYWN0XF0gaGFzIGJlZW4gZXhlY3V0ZWQgd2l0aCBlcnJvcnMuIFN0YXRlcyBhcmUgcmV2ZXJ0ZWQgd2l0aCBvbmx5IGdhcyBmZWVzIGFwcGxpZWQuOEJhbGFuY2VEZXBvc2l0DAAAATBUOjpBY2NvdW50SWQAABkBARBIMTYwAABRAQEQVTI1NgAFBBkBQSBkZXBvc2l0IGhhcyBiZWVuIG1hZGUgYXQgYSBnaXZlbiBhZGRyZXNzLiBcW3NlbmRlciwgYWRkcmVzcywgdmFsdWVcXTxCYWxhbmNlV2l0aGRyYXcMAAABMFQ6OkFjY291bnRJZAAAGQEBEEgxNjAAAFEBARBVMjU2AAYELQFBIHdpdGhkcmF3YWwgaGFzIGJlZW4gbWFkZSBmcm9tIGEgZ2l2ZW4gYWRkcmVzcy4gXFtzZW5kZXIsIGFkZHJlc3MsIHZhbHVlXF0EeQFUaGUgW2V2ZW50XShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpIGVtaXR0ZWQKCQkJYnkgdGhpcyBwYWxsZXQuSQEMIGV0aGVyZXVtDGxvZwxMb2cAAAwBHGFkZHJlc3MZAQEQSDE2MAABGHRvcGljc00BASRWZWM8SDI1Nj4AARBkYXRhJAEUQnl0ZXMAAE0BAAACIABRAQg8cHJpbWl0aXZlX3R5cGVzEFUyNTYAAAQAVQEBIFt1NjQ7IDRdAABVAQAAAwQAAAAQAFkBDDxwYWxsZXRfYmFzZV9mZWUYcGFsbGV0FEV2ZW50AAEQQE5ld0Jhc2VGZWVQZXJHYXMEAFEBARBVMjU2AAAAPEJhc2VGZWVPdmVyZmxvdwABACBJc0FjdGl2ZQQADQEBEGJvb2wAAgA0TmV3RWxhc3RpY2l0eQQA/AEcUGVybWlsbAADAAR5AVRoZSBbZXZlbnRdKGh0dHBzOi8vZG9jcy5zdWJzdHJhdGUuaW8vdjMvcnVudGltZS9ldmVudHMtYW5kLWVycm9ycykgZW1pdHRlZAoJCQlieSB0aGlzIHBhbGxldC5dAQgwZnJhbWVfc3lzdGVtFFBoYXNlAAEMOEFwcGx5RXh0cmluc2ljBAAYAQx1MzIAAAAwRmluYWxpemF0aW9uAAEAOEluaXRpYWxpemF0aW9uAAIAAGEBAAACZABlAQgwZnJhbWVfc3lzdGVtWExhc3RSdW50aW1lVXBncmFkZUluZm8AAAgBMHNwZWNfdmVyc2lvbmkBAUxjb2RlYzo6Q29tcGFjdDx1MzI+AAEkc3BlY19uYW1lOQEBZHNwX3J1bnRpbWU6OlJ1bnRpbWVTdHJpbmcAAGkBAAAGGABtAQwwZnJhbWVfc3lzdGVtGHBhbGxldBBDYWxsBARUAAEkKGZpbGxfYmxvY2sEARRyYXRpb5ABHFBlcmJpbGwAAAQFAUEgZGlzcGF0Y2ggdGhhdCB3aWxsIGZpbGwgdGhlIGJsb2NrIHdlaWdodCB1cCB0byB0aGUgZ2l2ZW4gcmF0aW8uGHJlbWFyawQBGHJlbWFyayQBHFZlYzx1OD4AARRoTWFrZSBzb21lIG9uLWNoYWluIHJlbWFyay4AKCMgPHdlaWdodD4gLSBgTygxKWAsIyA8L3dlaWdodD44c2V0X2hlYXBfcGFnZXMEARRwYWdlcxABDHU2NAACBPhTZXQgdGhlIG51bWJlciBvZiBwYWdlcyBpbiB0aGUgV2ViQXNzZW1ibHkgZW52aXJvbm1lbnQncyBoZWFwLiBzZXRfY29kZQQBEGNvZGUkARxWZWM8dTg+AAMwZFNldCB0aGUgbmV3IHJ1bnRpbWUgY29kZS4AKCMgPHdlaWdodD4xAS0gYE8oQyArIFMpYCB3aGVyZSBgQ2AgbGVuZ3RoIG9mIGBjb2RlYCBhbmQgYFNgIGNvbXBsZXhpdHkgb2YgYGNhbl9zZXRfY29kZWBFAS0gMSBjYWxsIHRvIGBjYW5fc2V0X2NvZGVgOiBgTyhTKWAgKGNhbGxzIGBzcF9pbzo6bWlzYzo6cnVudGltZV92ZXJzaW9uYCB3aGljaCBpczQgIGV4cGVuc2l2ZSkuhC0gMSBzdG9yYWdlIHdyaXRlIChjb2RlYyBgTyhDKWApLkAtIDEgZGlnZXN0IGl0ZW0uKC0gMSBldmVudC5NAVRoZSB3ZWlnaHQgb2YgdGhpcyBmdW5jdGlvbiBpcyBkZXBlbmRlbnQgb24gdGhlIHJ1bnRpbWUsIGJ1dCBnZW5lcmFsbHkgdGhpcyBpcyB2ZXJ5uGV4cGVuc2l2ZS4gV2Ugd2lsbCB0cmVhdCB0aGlzIGFzIGEgZnVsbCBibG9jay4sIyA8L3dlaWdodD5cc2V0X2NvZGVfd2l0aG91dF9jaGVja3MEARBjb2RlJAEcVmVjPHU4PgAEJBkBU2V0IHRoZSBuZXcgcnVudGltZSBjb2RlIHdpdGhvdXQgZG9pbmcgYW55IGNoZWNrcyBvZiB0aGUgZ2l2ZW4gYGNvZGVgLgAoIyA8d2VpZ2h0PowtIGBPKEMpYCB3aGVyZSBgQ2AgbGVuZ3RoIG9mIGBjb2RlYIQtIDEgc3RvcmFnZSB3cml0ZSAoY29kZWMgYE8oQylgKS5ALSAxIGRpZ2VzdCBpdGVtLigtIDEgZXZlbnQuVQFUaGUgd2VpZ2h0IG9mIHRoaXMgZnVuY3Rpb24gaXMgZGVwZW5kZW50IG9uIHRoZSBydW50aW1lLiBXZSB3aWxsIHRyZWF0IHRoaXMgYXMgYSBmdWxsSGJsb2NrLiAjIDwvd2VpZ2h0PixzZXRfc3RvcmFnZQQBFGl0ZW1zcQEBNFZlYzxLZXlWYWx1ZT4ABQRoU2V0IHNvbWUgaXRlbXMgb2Ygc3RvcmFnZS4wa2lsbF9zdG9yYWdlBAEQa2V5c3kBASBWZWM8S2V5PgAGBHRLaWxsIHNvbWUgaXRlbXMgZnJvbSBzdG9yYWdlLixraWxsX3ByZWZpeAgBGHByZWZpeCQBDEtleQABHHN1YmtleXMYAQx1MzIABxARAUtpbGwgYWxsIHN0b3JhZ2UgaXRlbXMgd2l0aCBhIGtleSB0aGF0IHN0YXJ0cyB3aXRoIHRoZSBnaXZlbiBwcmVmaXguADkBKipOT1RFOioqIFdlIHJlbHkgb24gdGhlIFJvb3Qgb3JpZ2luIHRvIHByb3ZpZGUgdXMgdGhlIG51bWJlciBvZiBzdWJrZXlzIHVuZGVyPQF0aGUgcHJlZml4IHdlIGFyZSByZW1vdmluZyB0byBhY2N1cmF0ZWx5IGNhbGN1bGF0ZSB0aGUgd2VpZ2h0IG9mIHRoaXMgZnVuY3Rpb24uRHJlbWFya193aXRoX2V2ZW50BAEYcmVtYXJrJAEcVmVjPHU4PgAIGKRNYWtlIHNvbWUgb24tY2hhaW4gcmVtYXJrIGFuZCBlbWl0IGV2ZW50LgAoIyA8d2VpZ2h0PrQtIGBPKGIpYCB3aGVyZSBiIGlzIHRoZSBsZW5ndGggb2YgdGhlIHJlbWFyay4oLSAxIGV2ZW50LiwjIDwvd2VpZ2h0PgQlAUNvbnRhaW5zIG9uZSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgdGhhdCBjYW4gYmUgY2FsbGVkIGJ5IGFuIGV4dHJpbnNpYy5xAQAAAnUBAHUBAAAECCQkAHkBAAACJAB9AQwwZnJhbWVfc3lzdGVtGGxpbWl0czBCbG9ja1dlaWdodHMAAAwBKGJhc2VfYmxvY2sQARhXZWlnaHQAASRtYXhfYmxvY2sQARhXZWlnaHQAASRwZXJfY2xhc3OBAQGEUGVyRGlzcGF0Y2hDbGFzczxXZWlnaHRzUGVyQ2xhc3M+AACBAQw0ZnJhbWVfc3VwcG9ydBx3ZWlnaHRzQFBlckRpc3BhdGNoQ2xhc3MEBFQBhQEADAEYbm9ybWFshQEBBFQAASxvcGVyYXRpb25hbIUBAQRUAAEkbWFuZGF0b3J5hQEBBFQAAIUBDDBmcmFtZV9zeXN0ZW0YbGltaXRzPFdlaWdodHNQZXJDbGFzcwAAEAE4YmFzZV9leHRyaW5zaWMQARhXZWlnaHQAATRtYXhfZXh0cmluc2ljiQEBOE9wdGlvbjxXZWlnaHQ+AAEkbWF4X3RvdGFsiQEBOE9wdGlvbjxXZWlnaHQ+AAEgcmVzZXJ2ZWSJAQE4T3B0aW9uPFdlaWdodD4AAIkBBBhPcHRpb24EBFQBEAEIEE5vbmUAAAAQU29tZQQAEAAAAQAAjQEMMGZyYW1lX3N5c3RlbRhsaW1pdHMsQmxvY2tMZW5ndGgAAAQBDG1heJEBAVRQZXJEaXNwYXRjaENsYXNzPHUzMj4AAJEBDDRmcmFtZV9zdXBwb3J0HHdlaWdodHNAUGVyRGlzcGF0Y2hDbGFzcwQEVAEYAAwBGG5vcm1hbBgBBFQAASxvcGVyYXRpb25hbBgBBFQAASRtYW5kYXRvcnkYAQRUAACVAQw0ZnJhbWVfc3VwcG9ydBx3ZWlnaHRzPFJ1bnRpbWVEYldlaWdodAAACAEQcmVhZBABGFdlaWdodAABFHdyaXRlEAEYV2VpZ2h0AACZAQgoc3BfdmVyc2lvbjhSdW50aW1lVmVyc2lvbgAAHAEkc3BlY19uYW1lOQEBNFJ1bnRpbWVTdHJpbmcAASRpbXBsX25hbWU5AQE0UnVudGltZVN0cmluZwABRGF1dGhvcmluZ192ZXJzaW9uGAEMdTMyAAEwc3BlY192ZXJzaW9uGAEMdTMyAAEwaW1wbF92ZXJzaW9uGAEMdTMyAAEQYXBpc50BARxBcGlzVmVjAAFMdHJhbnNhY3Rpb25fdmVyc2lvbhgBDHUzMgAAnQEEDENvdwQEVAGhAQAEAKEBAAAAoQEAAAKlAQClAQAABAipARgAqQEAAAMIAAAACACtAQAABQQAsQEMMGZyYW1lX3N5c3RlbRhwYWxsZXQURXJyb3IEBFQAARg8SW52YWxpZFNwZWNOYW1lAAAIEQFUaGUgbmFtZSBvZiBzcGVjaWZpY2F0aW9uIGRvZXMgbm90IG1hdGNoIGJldHdlZW4gdGhlIGN1cnJlbnQgcnVudGltZVBhbmQgdGhlIG5ldyBydW50aW1lLmhTcGVjVmVyc2lvbk5lZWRzVG9JbmNyZWFzZQABCEEBVGhlIHNwZWNpZmljYXRpb24gdmVyc2lvbiBpcyBub3QgYWxsb3dlZCB0byBkZWNyZWFzZSBiZXR3ZWVuIHRoZSBjdXJyZW50IHJ1bnRpbWVQYW5kIHRoZSBuZXcgcnVudGltZS50RmFpbGVkVG9FeHRyYWN0UnVudGltZVZlcnNpb24AAgzsRmFpbGVkIHRvIGV4dHJhY3QgdGhlIHJ1bnRpbWUgdmVyc2lvbiBmcm9tIHRoZSBuZXcgcnVudGltZS4ACQFFaXRoZXIgY2FsbGluZyBgQ29yZV92ZXJzaW9uYCBvciBkZWNvZGluZyBgUnVudGltZVZlcnNpb25gIGZhaWxlZC5MTm9uRGVmYXVsdENvbXBvc2l0ZQADBPxTdWljaWRlIGNhbGxlZCB3aGVuIHRoZSBhY2NvdW50IGhhcyBub24tZGVmYXVsdCBjb21wb3NpdGUgZGF0YS48Tm9uWmVyb1JlZkNvdW50AAQENQFUaGVyZSBpcyBhIG5vbi16ZXJvIHJlZmVyZW5jZSBjb3VudCBwcmV2ZW50aW5nIHRoZSBhY2NvdW50IGZyb20gYmVpbmcgcHVyZ2VkLjBDYWxsRmlsdGVyZWQABQTQVGhlIG9yaWdpbiBmaWx0ZXIgcHJldmVudCB0aGUgY2FsbCB0byBiZSBkaXNwYXRjaGVkLgRsRXJyb3IgZm9yIHRoZSBTeXN0ZW0gcGFsbGV0tQEAAAK5AQC5AQQYT3B0aW9uBARUAb0BAQgQTm9uZQAAABBTb21lBAC9AQAAAQAAvQEIQHBhbGxldF9zY2hlZHVsZXIsU2NoZWR1bGVkVjIQEENhbGwBwQEsQmxvY2tOdW1iZXIBGDRQYWxsZXRzT3JpZ2luAWkDJEFjY291bnRJZAEAABQBIG1heWJlX2lkaAE8T3B0aW9uPFZlYzx1OD4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxswQEBEENhbGwAAThtYXliZV9wZXJpb2RpY8kBAZRPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlcj4+AAEYb3JpZ2luaQMBNFBhbGxldHNPcmlnaW4AAMEBCEBjZW5uem5ldF9ydW50aW1lEENhbGwAAWQYU3lzdGVtBABtAQGtAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTeXN0ZW0sIFJ1bnRpbWU+AAAAJFNjaGVkdWxlcgQAxQEBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U2NoZWR1bGVyLCBSdW50aW1lPgABABBCYWJlBADNAQGlAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxCYWJlLCBSdW50aW1lPgACACRUaW1lc3RhbXAEAPUBAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFRpbWVzdGFtcCwgUnVudGltZT4AAwAwR2VuZXJpY0Fzc2V0BAD9AQHFAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxHZW5lcmljQXNzZXQsIFJ1bnRpbWU+AAQAKEF1dGhvcnNoaXAEAAECAb0Bc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEF1dGhvcnNoaXAsIFJ1bnRpbWU+AAUAHFN0YWtpbmcEAAkCAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFN0YWtpbmcsIFJ1bnRpbWU+AAYAHFNlc3Npb24EAPECAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFNlc3Npb24sIFJ1bnRpbWU+AAgAHEdyYW5kcGEEAAkDAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEdyYW5kcGEsIFJ1bnRpbWU+AAkAIEltT25saW5lBAA5AwG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxJbU9ubGluZSwgUnVudGltZT4ACgAQU3VkbwQAWQMBpQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U3VkbywgUnVudGltZT4ADAAgVHJlYXN1cnkEAF0DAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFRyZWFzdXJ5LCBSdW50aW1lPgANABxVdGlsaXR5BABhAwGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxVdGlsaXR5LCBSdW50aW1lPgAOACBJZGVudGl0eQQAeQMBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8SWRlbnRpdHksIFJ1bnRpbWU+AA8AGENlbm56eAQAGQQBrQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Q2Vubnp4LCBSdW50aW1lPgASABxSZXdhcmRzBAApBAGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxSZXdhcmRzLCBSdW50aW1lPgATAAxOZnQEAC0EAaEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE5mdCwgUnVudGltZT4AFAAoR292ZXJuYW5jZQQATQQBvQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8R292ZXJuYW5jZSwgUnVudGltZT4AFQAkRXRoQnJpZGdlBABRBAG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFdGhCcmlkZ2UsIFJ1bnRpbWU+ABYAIEVyYzIwUGVnBABpBAG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFcmMyMFBlZywgUnVudGltZT4AFwAkRXRoV2FsbGV0BAB5BAG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFdGhXYWxsZXQsIFJ1bnRpbWU+ABgAIEV0aGVyZXVtBACBBAG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFdGhlcmV1bSwgUnVudGltZT4AGQAMRVZNBACpBAGhAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxFVk0sIFJ1bnRpbWU+ABoAHEJhc2VGZWUEALkEAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEJhc2VGZWUsIFJ1bnRpbWU+ABsAOFRva2VuQXBwcm92YWxzBAC9BAHNAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxUb2tlbkFwcHJvdmFscywgUnVudGltZT4AHAAAxQEMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0EENhbGwEBFQAARggc2NoZWR1bGUQARB3aGVuGAE4VDo6QmxvY2tOdW1iZXIAAThtYXliZV9wZXJpb2RpY8kBAaBPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxUOjpCbG9ja051bWJlcj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxswQEBYEJveDw8VCBhcyBDb25maWc+OjpDYWxsPgAABHBBbm9ueW1vdXNseSBzY2hlZHVsZSBhIHRhc2suGGNhbmNlbAgBEHdoZW4YAThUOjpCbG9ja051bWJlcgABFGluZGV4GAEMdTMyAAEElENhbmNlbCBhbiBhbm9ueW1vdXNseSBzY2hlZHVsZWQgdGFzay44c2NoZWR1bGVfbmFtZWQUAQhpZCQBHFZlYzx1OD4AARB3aGVuGAE4VDo6QmxvY2tOdW1iZXIAAThtYXliZV9wZXJpb2RpY8kBAaBPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxUOjpCbG9ja051bWJlcj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxswQEBYEJveDw8VCBhcyBDb25maWc+OjpDYWxsPgACBFhTY2hlZHVsZSBhIG5hbWVkIHRhc2suMGNhbmNlbF9uYW1lZAQBCGlkJAEcVmVjPHU4PgADBHhDYW5jZWwgYSBuYW1lZCBzY2hlZHVsZWQgdGFzay44c2NoZWR1bGVfYWZ0ZXIQARRhZnRlchgBOFQ6OkJsb2NrTnVtYmVyAAE4bWF5YmVfcGVyaW9kaWPJAQGgT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8VDo6QmxvY2tOdW1iZXI+PgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbMEBAWBCb3g8PFQgYXMgQ29uZmlnPjo6Q2FsbD4ABBSoQW5vbnltb3VzbHkgc2NoZWR1bGUgYSB0YXNrIGFmdGVyIGEgZGVsYXkuACgjIDx3ZWlnaHQ+VFNhbWUgYXMgW2BzY2hlZHVsZWBdLiwjIDwvd2VpZ2h0PlBzY2hlZHVsZV9uYW1lZF9hZnRlchQBCGlkJAEcVmVjPHU4PgABFGFmdGVyGAE4VDo6QmxvY2tOdW1iZXIAAThtYXliZV9wZXJpb2RpY8kBAaBPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxUOjpCbG9ja051bWJlcj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxswQEBYEJveDw8VCBhcyBDb25maWc+OjpDYWxsPgAFFJBTY2hlZHVsZSBhIG5hbWVkIHRhc2sgYWZ0ZXIgYSBkZWxheS4AKCMgPHdlaWdodD7EU2FtZSBhcyBbYHNjaGVkdWxlX25hbWVkYF0oU2VsZjo6c2NoZWR1bGVfbmFtZWQpLiwjIDwvd2VpZ2h0PgQlAUNvbnRhaW5zIG9uZSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgdGhhdCBjYW4gYmUgY2FsbGVkIGJ5IGFuIGV4dHJpbnNpYy7JAQQYT3B0aW9uBARUAWQBCBBOb25lAAAAEFNvbWUEAGQAAAEAAM0BDCxwYWxsZXRfYmFiZRhwYWxsZXQQQ2FsbAQEVAABDExyZXBvcnRfZXF1aXZvY2F0aW9uCAFIZXF1aXZvY2F0aW9uX3Byb29m0QEBhEJveDxFcXVpdm9jYXRpb25Qcm9vZjxUOjpIZWFkZXI+PgABPGtleV9vd25lcl9wcm9vZuUBAUBUOjpLZXlPd25lclByb29mAAAQCQFSZXBvcnQgYXV0aG9yaXR5IGVxdWl2b2NhdGlvbi9taXNiZWhhdmlvci4gVGhpcyBtZXRob2Qgd2lsbCB2ZXJpZnkFAXRoZSBlcXVpdm9jYXRpb24gcHJvb2YgYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29mDQFhZ2FpbnN0IHRoZSBleHRyYWN0ZWQgb2ZmZW5kZXIuIElmIGJvdGggYXJlIHZhbGlkLCB0aGUgb2ZmZW5jZSB3aWxsMGJlIHJlcG9ydGVkLnByZXBvcnRfZXF1aXZvY2F0aW9uX3Vuc2lnbmVkCAFIZXF1aXZvY2F0aW9uX3Byb29m0QEBhEJveDxFcXVpdm9jYXRpb25Qcm9vZjxUOjpIZWFkZXI+PgABPGtleV9vd25lcl9wcm9vZuUBAUBUOjpLZXlPd25lclByb29mAAEgCQFSZXBvcnQgYXV0aG9yaXR5IGVxdWl2b2NhdGlvbi9taXNiZWhhdmlvci4gVGhpcyBtZXRob2Qgd2lsbCB2ZXJpZnkFAXRoZSBlcXVpdm9jYXRpb24gcHJvb2YgYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29mDQFhZ2FpbnN0IHRoZSBleHRyYWN0ZWQgb2ZmZW5kZXIuIElmIGJvdGggYXJlIHZhbGlkLCB0aGUgb2ZmZW5jZSB3aWxsMGJlIHJlcG9ydGVkLg0BVGhpcyBleHRyaW5zaWMgbXVzdCBiZSBjYWxsZWQgdW5zaWduZWQgYW5kIGl0IGlzIGV4cGVjdGVkIHRoYXQgb25seRUBYmxvY2sgYXV0aG9ycyB3aWxsIGNhbGwgaXQgKHZhbGlkYXRlZCBpbiBgVmFsaWRhdGVVbnNpZ25lZGApLCBhcyBzdWNoFQFpZiB0aGUgYmxvY2sgYXV0aG9yIGlzIGRlZmluZWQgaXQgd2lsbCBiZSBkZWZpbmVkIGFzIHRoZSBlcXVpdm9jYXRpb24kcmVwb3J0ZXIuSHBsYW5fY29uZmlnX2NoYW5nZQQBGGNvbmZpZ+kBAVBOZXh0Q29uZmlnRGVzY3JpcHRvcgACEF0BUGxhbiBhbiBlcG9jaCBjb25maWcgY2hhbmdlLiBUaGUgZXBvY2ggY29uZmlnIGNoYW5nZSBpcyByZWNvcmRlZCBhbmQgd2lsbCBiZSBlbmFjdGVkIG9uUQF0aGUgbmV4dCBjYWxsIHRvIGBlbmFjdF9lcG9jaF9jaGFuZ2VgLiBUaGUgY29uZmlnIHdpbGwgYmUgYWN0aXZhdGVkIG9uZSBlcG9jaCBhZnRlci5ZAU11bHRpcGxlIGNhbGxzIHRvIHRoaXMgbWV0aG9kIHdpbGwgcmVwbGFjZSBhbnkgZXhpc3RpbmcgcGxhbm5lZCBjb25maWcgY2hhbmdlIHRoYXQgaGFkVG5vdCBiZWVuIGVuYWN0ZWQgeWV0LgQlAUNvbnRhaW5zIG9uZSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgdGhhdCBjYW4gYmUgY2FsbGVkIGJ5IGFuIGV4dHJpbnNpYy7RAQhIc3BfY29uc2Vuc3VzX3Nsb3RzREVxdWl2b2NhdGlvblByb29mCBhIZWFkZXIB1QEISWQB3QEAEAEgb2ZmZW5kZXLdAQEISWQAARBzbG904QEBEFNsb3QAATBmaXJzdF9oZWFkZXLVAQEYSGVhZGVyAAE0c2Vjb25kX2hlYWRlctUBARhIZWFkZXIAANUBEChzcF9ydW50aW1lHGdlbmVyaWMYaGVhZGVyGEhlYWRlcggYTnVtYmVyARgQSGFzaAHZAQAUASxwYXJlbnRfaGFzaCABMEhhc2g6Ok91dHB1dAABGG51bWJlcmkBARhOdW1iZXIAAShzdGF0ZV9yb290IAEwSGFzaDo6T3V0cHV0AAE8ZXh0cmluc2ljc19yb290IAEwSGFzaDo6T3V0cHV0AAEYZGlnZXN0KAEYRGlnZXN0AADZAQwoc3BfcnVudGltZRh0cmFpdHMsQmxha2VUd28yNTYAAAAA3QEMRHNwX2NvbnNlbnN1c19iYWJlDGFwcBhQdWJsaWMAAAQAxAE8c3IyNTUxOTo6UHVibGljAADhAQhIc3BfY29uc2Vuc3VzX3Nsb3RzEFNsb3QAAAQAEAEMdTY0AADlAQgoc3Bfc2Vzc2lvbjxNZW1iZXJzaGlwUHJvb2YAAAwBHHNlc3Npb24YATBTZXNzaW9uSW5kZXgAASh0cmllX25vZGVzeQEBMFZlYzxWZWM8dTg+PgABPHZhbGlkYXRvcl9jb3VudBgBOFZhbGlkYXRvckNvdW50AADpAQxEc3BfY29uc2Vuc3VzX2JhYmUcZGlnZXN0c1BOZXh0Q29uZmlnRGVzY3JpcHRvcgABBAhWMQgBBGPtAQEoKHU2NCwgdTY0KQABNGFsbG93ZWRfc2xvdHPxAQEwQWxsb3dlZFNsb3RzAAEAAO0BAAAECBAQAPEBCERzcF9jb25zZW5zdXNfYmFiZTBBbGxvd2VkU2xvdHMAAQwwUHJpbWFyeVNsb3RzAAAAdFByaW1hcnlBbmRTZWNvbmRhcnlQbGFpblNsb3RzAAEAbFByaW1hcnlBbmRTZWNvbmRhcnlWUkZTbG90cwACAAD1AQxAcGFsbGV0X3RpbWVzdGFtcBhwYWxsZXQQQ2FsbAQEVAABBAxzZXQEAQxub3f5AQEkVDo6TW9tZW50AABAVFNldCB0aGUgY3VycmVudCB0aW1lLgBVAVRoaXMgY2FsbCBzaG91bGQgYmUgaW52b2tlZCBleGFjdGx5IG9uY2UgcGVyIGJsb2NrLiBJdCB3aWxsIHBhbmljIGF0IHRoZSBmaW5hbGl6YXRpb27UcGhhc2UsIGlmIHRoaXMgY2FsbCBoYXNuJ3QgYmVlbiBpbnZva2VkIGJ5IHRoYXQgdGltZS4AQQFUaGUgdGltZXN0YW1wIHNob3VsZCBiZSBncmVhdGVyIHRoYW4gdGhlIHByZXZpb3VzIG9uZSBieSB0aGUgYW1vdW50IHNwZWNpZmllZCBieUBgTWluaW11bVBlcmlvZGAuANRUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBgSW5oZXJlbnRgLgAoIyA8d2VpZ2h0PjEBLSBgTygxKWAgKE5vdGUgdGhhdCBpbXBsZW1lbnRhdGlvbnMgb2YgYE9uVGltZXN0YW1wU2V0YCBtdXN0IGFsc28gYmUgYE8oMSlgKWEBLSAxIHN0b3JhZ2UgcmVhZCBhbmQgMSBzdG9yYWdlIG11dGF0aW9uIChjb2RlYyBgTygxKWApLiAoYmVjYXVzZSBvZiBgRGlkVXBkYXRlOjp0YWtlYCBpbkAgIGBvbl9maW5hbGl6ZWAp1C0gMSBldmVudCBoYW5kbGVyIGBvbl90aW1lc3RhbXBfc2V0YC4gTXVzdCBiZSBgTygxKWAuLCMgPC93ZWlnaHQ+BCUBQ29udGFpbnMgb25lIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSB0aGF0IGNhbiBiZSBjYWxsZWQgYnkgYW4gZXh0cmluc2ljLvkBAAAGEAD9AQhIY3JtbF9nZW5lcmljX2Fzc2V0EENhbGwEBFQAASAYY3JlYXRlDAEUb3duZXIAATBUOjpBY2NvdW50SWQAARxvcHRpb25zeAGYQXNzZXRPcHRpb25zPFQ6OkJhbGFuY2UsIFQ6OkFjY291bnRJZD4AARBpbmZviAEkQXNzZXRJbmZvAAAgBQFDcmVhdGUgYSBuZXcga2luZCBvZiBhc3NldCBhbmQgbm9taW5hdGVzIHRoZSBvd25lciBvZiB0aGlzIGFzc2V0LsRUaGUgYXNzZXRfaWQgd2lsbCBiZSB0aGUgbmV4dCB1bm9jY3VwaWVkIGFzc2V0X2lkhQFBY2NvdW50cyB3aG8gd2lsbCBoYXZlIHRoZSBwZXJtaXNzaW9ucyB0byBtaW50L2J1cm4vY2hhbmdlIHBlcm1pc3Npb24gYXJlIHBhc3NlZCBpbiB2aWEgJ29wdGlvbnMnhG9yaWdpbiBvZiB0aGlzIGNhbGwgbXVzdCBiZSByb290LgAgV2VpZ2h0czqcTygxKSBMaW1pdGVkIG51bWJlciBvZiByZWFkIGFuZCB3cml0ZXMubFNob3VsZCBub3QgYmUgY2FsbGVkIG9mdGVuLiB0cmFuc2ZlcgwBIGFzc2V0X2lkaQEBKFQ6OkFzc2V0SWQAAQh0bwABMFQ6OkFjY291bnRJZAABGGFtb3VudHwBKFQ6OkJhbGFuY2UAATzUVHJhbnNmZXIgc29tZSBsaXF1aWQgZnJlZSBiYWxhbmNlIHRvIGFub3RoZXIgYWNjb3VudC4ABQFgdHJhbnNmZXJgIHdpbGwgc2V0IHRoZSBgRnJlZUJhbGFuY2VgIG9mIHRoZSBzZW5kZXIgYW5kIHJlY2VpdmVyLh0BSXQgd2lsbCBkZWNyZWFzZSB0aGUgdG90YWwgaXNzdWFuY2Ugb2YgdGhlIHN5c3RlbSBieSB0aGUgYFRyYW5zZmVyRmVlYC4RAUlmIHRoZSBzZW5kZXIncyBhY2NvdW50IGlzIGJlbG93IHRoZSBleGlzdGVudGlhbCBkZXBvc2l0IGFzIGEgcmVzdWx0sG9mIHRoZSB0cmFuc2ZlciwgdGhlIGFjY291bnQgd2lsbCBiZSByZWFwZWQuABUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgYFNpZ25lZGAgYnkgdGhlIHRyYW5zYWN0b3IuACgjIDx3ZWlnaHQ+LQEtIERlcGVuZGVudCBvbiBhcmd1bWVudHMgYnV0IG5vdCBjcml0aWNhbCwgZ2l2ZW4gcHJvcGVyIGltcGxlbWVudGF0aW9ucyBmb3LIICBpbnB1dCBjb25maWcgdHlwZXMuIFNlZSByZWxhdGVkIGZ1bmN0aW9ucyBiZWxvdy5lAS0gSXQgY29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcyBhbmQgd3JpdGVzIGludGVybmFsbHkgYW5kIG5vIGNvbXBsZXggY29tcHV0YXRpb24uACwjIDwvd2VpZ2h0PjB0cmFuc2Zlcl9hbGwIASBhc3NldF9pZGkBAShUOjpBc3NldElkAAEIdG8AATBUOjpBY2NvdW50SWQAAgQJAVRyYW5zZmVyIGFsbCBvZiB0aGUgZnJlZSBiYWxhbmNlIG9mIGBhc3NldF9pZGAgdG8gYW5vdGhlciBhY2NvdW50LkR1cGRhdGVfcGVybWlzc2lvbggBIGFzc2V0X2lkaQEBKFQ6OkFzc2V0SWQAAThuZXdfcGVybWlzc2lvboABeFBlcm1pc3Npb25MYXRlc3Q8VDo6QWNjb3VudElkPgADHF0BVXBkYXRlcyBwZXJtaXNzaW9ucyhtaW50L2J1cm4vY2hhbmdlIHBlcm1pc3Npb24pIGZvciBhIGdpdmVuIGBhc3NldF9pZGAgYW5kIGFuIGFjY291bnQuAKxUaGUgYG9yaWdpbmAgbXVzdCBoYXZlIGB1cGRhdGVgIHBlcm1pc3Npb24uACB3ZWlnaHRzOphPKDEpIGxpbWl0ZWQgbnVtYmVyIG9mIHJlYWQgYW5kIHdyaXRlc5BFeHBlY3RlZCB0byBub3QgYmUgY2FsbGVkIGZyZXF1ZW50bHlEdXBkYXRlX2Fzc2V0X2luZm8IASBhc3NldF9pZGkBAShUOjpBc3NldElkAAEQaW5mb4gBJEFzc2V0SW5mbwAEHKhVcGRhdGVzIGFzc2V0IGluZm8gZm9yIGEgZ2l2ZW4gYGFzc2V0X2lkYC4ArFRoZSBgb3JpZ2luYCBtdXN0IGhhdmUgYHVwZGF0ZWAgcGVybWlzc2lvbi4AIHdlaWdodHM6mE8oMSkgbGltaXRlZCBudW1iZXIgb2YgcmVhZCBhbmQgd3JpdGVzkEV4cGVjdGVkIHRvIG5vdCBiZSBjYWxsZWQgZnJlcXVlbnRseRBtaW50DAEgYXNzZXRfaWRpAQEoVDo6QXNzZXRJZAABCHRvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50dAEoVDo6QmFsYW5jZQAFFJEBTWludHMgYW4gYXNzZXQsIGluY3JlYXNlcyBpdHMgdG90YWwgaXNzdWFuY2UuIERlcG9zaXRzIHRoZSBuZXdseSBtaW50ZWQgY3VycmVuY3kgaW50byB0YXJnZXQgYWNjb3VudKBUaGUgb3JpZ2luIG11c3QgaGF2ZSBgbWludGAgcGVybWlzc2lvbnMuACBXZWlnaHRzOohPKDEpIGxpbWl0ZWQgbnVtYmVyIG9mIHJlYWQvd3JpdGVzEGJ1cm4MASBhc3NldF9pZGkBAShUOjpBc3NldElkAAEYdGFyZ2V0AAEwVDo6QWNjb3VudElkAAEYYW1vdW50dAEoVDo6QmFsYW5jZQAGFEkBQnVybnMgYW4gYXNzZXQsIGRlY3JlYXNlcyBpdHMgdG90YWwgaXNzdWFuY2UuIERlZHVjdCB0aGUgbW9uZXkgZnJvbSB0YXJnZXQgYWNjb3VudKhUaGUgYG9yaWdpbmAgbXVzdCBoYXZlIGBidXJuYCBwZXJtaXNzaW9ucy4AIFdlaWdodHM6kE8oMSkgTGltaXRlZCBudW1iZXIgb2YgcmVhZHMvd3JpdGVzLjxjcmVhdGVfcmVzZXJ2ZWQMASBhc3NldF9pZBgBKFQ6OkFzc2V0SWQAARxvcHRpb25zeAGYQXNzZXRPcHRpb25zPFQ6OkJhbGFuY2UsIFQ6OkFjY291bnRJZD4AARBpbmZviAEkQXNzZXRJbmZvAAcYqENyZWF0ZSBhIG5ldyBhc3NldCB3aXRoIHJlc2VydmVkIGFzc2V0X2lkLrhJbnRlcm5hbGx5IGNhbGxzIGNyZWF0ZV9hc3NldCB3aXRoIGFuIGFzc2V0X2lkTFJlcXVpcmVzIFJvb3QgY2FsbC4AIFdlaWdodHM6YE8oMSkgTGltaXRlZCByZWFkL3dyaXRlcwRMRGlzcGF0Y2hhYmxlIGNhbGxzLgECDERwYWxsZXRfYXV0aG9yc2hpcBhwYWxsZXQQQ2FsbAQEVAABBChzZXRfdW5jbGVzBAEobmV3X3VuY2xlcwUCAThWZWM8VDo6SGVhZGVyPgAABGBQcm92aWRlIGEgc2V0IG9mIHVuY2xlcy4EJQFDb250YWlucyBvbmUgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIHRoYXQgY2FuIGJlIGNhbGxlZCBieSBhbiBleHRyaW5zaWMuBQIAAALVAQAJAggwY3JtbF9zdGFraW5nEENhbGwEBFQAAVwQYm9uZAwBKGNvbnRyb2xsZXIAATBUOjpBY2NvdW50SWQAARR2YWx1ZXwBMEJhbGFuY2VPZjxUPgABFHBheWVlDQIBfFJld2FyZERlc3RpbmF0aW9uPFQ6OkFjY291bnRJZD4AAFhhAVRha2UgdGhlIG9yaWdpbiBhY2NvdW50IGFzIGEgc3Rhc2ggYW5kIGxvY2sgdXAgYHZhbHVlYCBvZiBpdHMgYmFsYW5jZS4gYGNvbnRyb2xsZXJgIHdpbGyAYmUgdGhlIGFjY291bnQgdGhhdCBjb250cm9scyBpdC4AJQFgdmFsdWVgIG11c3QgYmUgbW9yZSB0aGFuIHRoZSBgbWluaW11bV9ib25kYCBzcGVjaWZpZWQgaW4gZ2VuZXNpcyBjb25maWcuACEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIHN0YXNoIGFjY291bnQuADxFbWl0cyBgQm9uZGVkYC4AKCMgPHdlaWdodD7QLSBJbmRlcGVuZGVudCBvZiB0aGUgYXJndW1lbnRzLiBNb2RlcmF0ZSBjb21wbGV4aXR5LhwtIE8oMSkuZC0gVGhyZWUgZXh0cmEgREIgZW50cmllcy4ATQFOT1RFOiBUd28gb2YgdGhlIHN0b3JhZ2Ugd3JpdGVzIChgU2VsZjo6Ym9uZGVkYCwgYFNlbGY6OnBheWVlYCkgYXJlIF9uZXZlcl8gY2xlYW5lZD0BdW5sZXNzIHRoZSBgb3JpZ2luYCBmYWxscyBiZWxvdyBfZXhpc3RlbnRpYWwgZGVwb3NpdF8gYW5kIGdldHMgcmVtb3ZlZCBhcyBkdXN0LkgtLS0tLS0tLS0tLS0tLS0tLS0wV2VpZ2h0OiBPKDEpKERCIFdlaWdodDq8LSBSZWFkOiBCb25kZWQsIExlZGdlciwgW09yaWdpbiBBY2NvdW50XSwgTG9ja3PcLSBXcml0ZTogQm9uZGVkLCBQYXllZSwgW09yaWdpbiBBY2NvdW50XSwgTG9ja3MsIExlZGdlciwjIDwvd2VpZ2h0Pihib25kX2V4dHJhBAE4bWF4X2FkZGl0aW9uYWx8ATBCYWxhbmNlT2Y8VD4AAVRhAUFkZCBzb21lIGV4dHJhIGFtb3VudCB0aGF0IGhhdmUgYXBwZWFyZWQgaW4gdGhlIHN0YXNoIGBmcmVlX2JhbGFuY2VgIGludG8gdGhlIGJhbGFuY2UgdXAwZm9yIHN0YWtpbmcuAE0BVXNlIHRoaXMgaWYgdGhlcmUgYXJlIGFkZGl0aW9uYWwgZnVuZHMgaW4geW91ciBzdGFzaCBhY2NvdW50IHRoYXQgeW91IHdpc2ggdG8gYm9uZC5hAVVubGlrZSBbYGJvbmRgXSBvciBbYHVuYm9uZGBdIHRoaXMgZnVuY3Rpb24gZG9lcyBub3QgaW1wb3NlIGFueSBsaW1pdGF0aW9uIG9uIHRoZSBhbW91bnRIdGhhdCBjYW4gYmUgYWRkZWQuAF0BVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIHN0YXNoLCBub3QgdGhlIGNvbnRyb2xsZXIgYW5k9Gl0IGNhbiBiZSBvbmx5IGNhbGxlZCB3aGVuIFtgRXJhRWxlY3Rpb25TdGF0dXNgXSBpcyBgQ2xvc2VkYC4APEVtaXRzIGBCb25kZWRgLgAoIyA8d2VpZ2h0PuQtIEluZGVwZW5kZW50IG9mIHRoZSBhcmd1bWVudHMuIEluc2lnbmlmaWNhbnQgY29tcGxleGl0eS4cLSBPKDEpLjwtIE9uZSBEQiBlbnRyeS4wLS0tLS0tLS0tLS0tKERCIFdlaWdodDoRAS0gUmVhZDogRXJhIEVsZWN0aW9uIFN0YXR1cywgQm9uZGVkLCBMZWRnZXIsIFtPcmlnaW4gQWNjb3VudF0sIExvY2tzoC0gV3JpdGU6IFtPcmlnaW4gQWNjb3VudF0sIExvY2tzLCBMZWRnZXIsIyA8L3dlaWdodD4YdW5ib25kBAEUdmFsdWV8ATBCYWxhbmNlT2Y8VD4AAoBRAVNjaGVkdWxlIGEgcG9ydGlvbiBvZiB0aGUgc3Rhc2ggdG8gYmUgdW5sb2NrZWQgcmVhZHkgZm9yIHRyYW5zZmVyIG91dCBhZnRlciB0aGUgYm9uZPxwZXJpb2QgZW5kcy4gSWYgdGhpcyBsZWF2ZXMgYW4gYW1vdW50IGFjdGl2ZWx5IGJvbmRlZCBsZXNzIHRoYW4hAVQ6OkN1cnJlbmN5OjptaW5pbXVtX2JhbGFuY2UoKSwgdGhlbiBpdCBpcyBpbmNyZWFzZWQgdG8gdGhlIGZ1bGwgYW1vdW50LgBFAU9uY2UgdGhlIHVubG9jayBwZXJpb2QgaXMgZG9uZSwgeW91IGNhbiBjYWxsIGB3aXRoZHJhd191bmJvbmRlZGAgdG8gYWN0dWFsbHkgbW92Zbx0aGUgZnVuZHMgb3V0IG9mIG1hbmFnZW1lbnQgcmVhZHkgZm9yIHRyYW5zZmVyLgA5AU5vIG1vcmUgdGhhbiBhIGxpbWl0ZWQgbnVtYmVyIG9mIHVubG9ja2luZyBjaHVua3MgKHNlZSBgTUFYX1VOTE9DS0lOR19DSFVOS1NgKTkBY2FuIGNvLWV4aXN0cyBhdCB0aGUgc2FtZSB0aW1lLiBJbiB0aGF0IGNhc2UsIFtgQ2FsbDo6d2l0aGRyYXdfdW5ib25kZWRgXSBuZWVk+HRvIGJlIGNhbGxlZCBmaXJzdCB0byByZW1vdmUgc29tZSBvZiB0aGUgY2h1bmtzIChpZiBwb3NzaWJsZSkuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIGNvbnRyb2xsZXIsIG5vdCB0aGUgc3Rhc2guCQFBbmQsIGl0IGNhbiBiZSBvbmx5IGNhbGxlZCB3aGVuIFtgRXJhRWxlY3Rpb25TdGF0dXNgXSBpcyBgQ2xvc2VkYC4AREVtaXRzIGBVbmJvbmRlZGAuAJRTZWUgYWxzbyBbYENhbGw6OndpdGhkcmF3X3VuYm9uZGVkYF0uACgjIDx3ZWlnaHQ+PQEtIEluZGVwZW5kZW50IG9mIHRoZSBhcmd1bWVudHMuIExpbWl0ZWQgYnV0IHBvdGVudGlhbGx5IGV4cGxvaXRhYmxlIGNvbXBsZXhpdHkulC0gQ29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcy5hAS0gRWFjaCBjYWxsIChyZXF1aXJlcyB0aGUgcmVtYWluZGVyIG9mIHRoZSBib25kZWQgYmFsYW5jZSB0byBiZSBhYm92ZSBgbWluaW11bV9iYWxhbmNlYCltASAgd2lsbCBjYXVzZSBhIG5ldyBlbnRyeSB0byBiZSBpbnNlcnRlZCBpbnRvIGEgdmVjdG9yIChgTGVkZ2VyLnVubG9ja2luZ2ApIGtlcHQgaW4gc3RvcmFnZS5NASAgVGhlIG9ubHkgd2F5IHRvIGNsZWFuIHRoZSBhZm9yZW1lbnRpb25lZCBzdG9yYWdlIGl0ZW0gaXMgYWxzbyB1c2VyLWNvbnRyb2xsZWQgdmlhWCAgYHdpdGhkcmF3X3VuYm9uZGVkYC48LSBPbmUgREIgZW50cnkuKC0tLS0tLS0tLS0wV2VpZ2h0OiBPKDEpKERCIFdlaWdodDoZAS0gUmVhZDogRXJhRWxlY3Rpb25TdGF0dXMsIExlZGdlciwgQ3VycmVudEVyYSwgTG9ja3MsIEJhbGFuY2VPZiBTdGFzaCygLSBXcml0ZTogTG9ja3MsIExlZGdlciwgQmFsYW5jZU9mIFN0YXNoLCQ8L3dlaWdodD5Ed2l0aGRyYXdfdW5ib25kZWQAA3wpAVJlbW92ZSBhbnkgdW5sb2NrZWQgY2h1bmtzIGZyb20gdGhlIGB1bmxvY2tpbmdgIHF1ZXVlIGZyb20gb3VyIG1hbmFnZW1lbnQuADEBVGhpcyBlc3NlbnRpYWxseSBmcmVlcyB1cCB0aGF0IGJhbGFuY2UgdG8gYmUgdXNlZCBieSB0aGUgc3Rhc2ggYWNjb3VudCB0byBkb0h3aGF0ZXZlciBpdCB3YW50cy4AUQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgY29udHJvbGxlciwgbm90IHRoZSBzdGFzaC4JAUFuZCwgaXQgY2FuIGJlIG9ubHkgY2FsbGVkIHdoZW4gW2BFcmFFbGVjdGlvblN0YXR1c2BdIGlzIGBDbG9zZWRgLgBIRW1pdHMgYFdpdGhkcmF3bmAuAGhTZWUgYWxzbyBbYENhbGw6OnVuYm9uZGBdLgAoIyA8d2VpZ2h0PlEBLSBDb3VsZCBiZSBkZXBlbmRlbnQgb24gdGhlIGBvcmlnaW5gIGFyZ3VtZW50IGFuZCBob3cgbXVjaCBgdW5sb2NraW5nYCBjaHVua3MgZXhpc3QuQQEgSXQgaW1wbGllcyBgY29uc29saWRhdGVfdW5sb2NrZWRgIHdoaWNoIGxvb3BzIG92ZXIgYExlZGdlci51bmxvY2tpbmdgLCB3aGljaCBpc/AgaW5kaXJlY3RseSB1c2VyLWNvbnRyb2xsZWQuIFNlZSBbYHVuYm9uZGBdIGZvciBtb3JlIGRldGFpbC51AS0gQ29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcywgeWV0IHRoZSBzaXplIG9mIHdoaWNoIGNvdWxkIGJlIGxhcmdlIGJhc2VkIG9uIGBsZWRnZXJgLsQtIFdyaXRlcyBhcmUgbGltaXRlZCB0byB0aGUgYG9yaWdpbmAgYWNjb3VudCBrZXkuPC0tLS0tLS0tLS0tLS0tLQUBQ29tcGxleGl0eSBPKFMpIHdoZXJlIFMgaXMgdGhlIG51bWJlciBvZiBzbGFzaGluZyBzcGFucyB0byByZW1vdmUcVXBkYXRlOiEBLSBSZWFkczogRXJhRWxlY3Rpb25TdGF0dXMsIExlZGdlciwgQ3VycmVudCBFcmEsIExvY2tzLCBbT3JpZ2luIEFjY291bnRdpC0gV3JpdGVzOiBbT3JpZ2luIEFjY291bnRdLCBMb2NrcywgTGVkZ2VyFEtpbGw6QQEtIFJlYWRzOiBFcmFFbGVjdGlvblN0YXR1cywgTGVkZ2VyLCBDdXJyZW50IEVyYSwgQm9uZGVkLCBTbGFzaGluZyBTcGFucywgW09yaWdpboggIEFjY291bnRdLCBMb2NrcywgQmFsYW5jZU9mIHN0YXNoTQEtIFdyaXRlczogQm9uZGVkLCBTbGFzaGluZyBTcGFucyAoaWYgUyA+IDApLCBMZWRnZXIsIFBheWVlLCBWYWxpZGF0b3JzLCBOb21pbmF0b3JzLKwgIFtPcmlnaW4gQWNjb3VudF0sIExvY2tzLCBCYWxhbmNlT2Ygc3Rhc2gucC0gV3JpdGVzIEVhY2g6IFNwYW5TbGFzaCAqIFMJAU5PVEU6IFdlaWdodCBhbm5vdGF0aW9uIGlzIHRoZSBraWxsIHNjZW5hcmlvLCB3ZSByZWZ1bmQgb3RoZXJ3aXNlLiwjIDwvd2VpZ2h0PiB2YWxpZGF0ZQQBFHByZWZzEQIBOFZhbGlkYXRvclByZWZzAARE5ERlY2xhcmUgdGhlIGRlc2lyZSB0byB2YWxpZGF0ZSBmb3IgdGhlIG9yaWdpbiBjb250cm9sbGVyLgDYRWZmZWN0cyB3aWxsIGJlIGZlbHQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBlcmEuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYnkgdGhlIGNvbnRyb2xsZXIsIG5vdCB0aGUgc3Rhc2guCQFBbmQsIGl0IGNhbiBiZSBvbmx5IGNhbGxlZCB3aGVuIFtgRXJhRWxlY3Rpb25TdGF0dXNgXSBpcyBgQ2xvc2VkYC4AKCMgPHdlaWdodD7kLSBJbmRlcGVuZGVudCBvZiB0aGUgYXJndW1lbnRzLiBJbnNpZ25pZmljYW50IGNvbXBsZXhpdHkulC0gQ29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcy7ELSBXcml0ZXMgYXJlIGxpbWl0ZWQgdG8gdGhlIGBvcmlnaW5gIGFjY291bnQga2V5LiwtLS0tLS0tLS0tLTBXZWlnaHQ6IE8oMSkoREIgV2VpZ2h0OowtIFJlYWQ6IEVyYSBFbGVjdGlvbiBTdGF0dXMsIExlZGdlcnwtIFdyaXRlOiBOb21pbmF0b3JzLCBWYWxpZGF0b3JzLCMgPC93ZWlnaHQ+IG5vbWluYXRlBAEcdGFyZ2V0c5gBRFZlYzxUOjpBY2NvdW50SWQ+AAVMDQFEZWNsYXJlIHRoZSBkZXNpcmUgdG8gbm9taW5hdGUgYHRhcmdldHNgIGZvciB0aGUgb3JpZ2luIGNvbnRyb2xsZXIuAE0BRWZmZWN0cyB3aWxsIGJlIGZlbHQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBlcmEuIFRoaXMgY2FuIG9ubHkgYmUgY2FsbGVkIHdoZW6IW2BFcmFFbGVjdGlvblN0YXR1c2BdIGlzIGBDbG9zZWRgLgBRAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGJ5IHRoZSBjb250cm9sbGVyLCBub3QgdGhlIHN0YXNoLgkBQW5kLCBpdCBjYW4gYmUgb25seSBjYWxsZWQgd2hlbiBbYEVyYUVsZWN0aW9uU3RhdHVzYF0gaXMgYENsb3NlZGAuACgjIDx3ZWlnaHQ+LQEtIFRoZSB0cmFuc2FjdGlvbidzIGNvbXBsZXhpdHkgaXMgcHJvcG9ydGlvbmFsIHRvIHRoZSBzaXplIG9mIGB0YXJnZXRzYCAoTin8d2hpY2ggaXMgY2FwcGVkIGF0IENvbXBhY3RBc3NpZ25tZW50czo6TElNSVQgKE1BWF9OT01JTkFUSU9OUyku1C0gQm90aCB0aGUgcmVhZHMgYW5kIHdyaXRlcyBmb2xsb3cgYSBzaW1pbGFyIHBhdHRlcm4uJC0tLS0tLS0tLTBXZWlnaHQ6IE8oTimAd2hlcmUgTiBpcyB0aGUgbnVtYmVyIG9mIHRhcmdldHMoREIgV2VpZ2h0OsQtIFJlYWRzOiBFcmEgRWxlY3Rpb24gU3RhdHVzLCBMZWRnZXIsIEN1cnJlbnQgRXJhgC0gV3JpdGVzOiBWYWxpZGF0b3JzLCBOb21pbmF0b3JzLCMgPC93ZWlnaHQ+FGNoaWxsAAZExERlY2xhcmUgbm8gZGVzaXJlIHRvIGVpdGhlciB2YWxpZGF0ZSBvciBub21pbmF0ZS4A2EVmZmVjdHMgd2lsbCBiZSBmZWx0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5leHQgZXJhLgBRAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGJ5IHRoZSBjb250cm9sbGVyLCBub3QgdGhlIHN0YXNoLgkBQW5kLCBpdCBjYW4gYmUgb25seSBjYWxsZWQgd2hlbiBbYEVyYUVsZWN0aW9uU3RhdHVzYF0gaXMgYENsb3NlZGAuACgjIDx3ZWlnaHQ+5C0gSW5kZXBlbmRlbnQgb2YgdGhlIGFyZ3VtZW50cy4gSW5zaWduaWZpY2FudCBjb21wbGV4aXR5LlAtIENvbnRhaW5zIG9uZSByZWFkLsQtIFdyaXRlcyBhcmUgbGltaXRlZCB0byB0aGUgYG9yaWdpbmAgYWNjb3VudCBrZXkuIC0tLS0tLS0tMFdlaWdodDogTygxKShEQiBXZWlnaHQ6hC0gUmVhZDogRXJhRWxlY3Rpb25TdGF0dXMsIExlZGdlcnwtIFdyaXRlOiBWYWxpZGF0b3JzLCBOb21pbmF0b3JzLCMgPC93ZWlnaHQ+JHNldF9wYXllZQQBFHBheWVlDQIBfFJld2FyZERlc3RpbmF0aW9uPFQ6OkFjY291bnRJZD4AB0C0KFJlLSlzZXQgdGhlIHBheW1lbnQgdGFyZ2V0IGZvciBhIGNvbnRyb2xsZXIuANhFZmZlY3RzIHdpbGwgYmUgZmVsdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0IGVyYS4AUQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgY29udHJvbGxlciwgbm90IHRoZSBzdGFzaC4AKCMgPHdlaWdodD7kLSBJbmRlcGVuZGVudCBvZiB0aGUgYXJndW1lbnRzLiBJbnNpZ25pZmljYW50IGNvbXBsZXhpdHkulC0gQ29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcy7ELSBXcml0ZXMgYXJlIGxpbWl0ZWQgdG8gdGhlIGBvcmlnaW5gIGFjY291bnQga2V5LiQtLS0tLS0tLS04LSBXZWlnaHQ6IE8oMSkwLSBEQiBXZWlnaHQ6SCAgICAtIFJlYWQ6IExlZGdlckggICAgLSBXcml0ZTogUGF5ZWUsIyA8L3dlaWdodD44c2V0X2NvbnRyb2xsZXIEAShjb250cm9sbGVyAAEwVDo6QWNjb3VudElkAAgsjChSZS0pc2V0IHRoZSBjb250cm9sbGVyIG9mIGEgc3Rhc2guANhFZmZlY3RzIHdpbGwgYmUgZmVsdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0IGVyYS4AUQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBieSB0aGUgc3Rhc2gsIG5vdCB0aGUgY29udHJvbGxlci4AKCMgPHdlaWdodD7kLSBJbmRlcGVuZGVudCBvZiB0aGUgYXJndW1lbnRzLiBJbnNpZ25pZmljYW50IGNvbXBsZXhpdHkulC0gQ29udGFpbnMgYSBsaW1pdGVkIG51bWJlciBvZiByZWFkcy7ELSBXcml0ZXMgYXJlIGxpbWl0ZWQgdG8gdGhlIGBvcmlnaW5gIGFjY291bnQga2V5LiwjIDwvd2VpZ2h0PkxzZXRfdmFsaWRhdG9yX2NvdW50BAEMbmV3aQEBDHUzMgAJIJBTZXRzIHRoZSBpZGVhbCBudW1iZXIgb2YgdmFsaWRhdG9ycy4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgAoIyA8d2VpZ2h0PjBXZWlnaHQ6IE8oMSlYV3JpdGU6IFZhbGlkYXRvciBDb3VudCwjIDwvd2VpZ2h0PmBpbmNyZWFzZV92YWxpZGF0b3JfY291bnQEAShhZGRpdGlvbmFsaQEBDHUzMgAKHKhJbmNyZW1lbnRzIHRoZSBpZGVhbCBudW1iZXIgb2YgdmFsaWRhdG9ycy4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgAoIyA8d2VpZ2h0PoBTYW1lIGFzIFtgc2V0X3ZhbGlkYXRvcl9jb3VudGBdLiwjIDwvd2VpZ2h0PjRmb3JjZV9ub19lcmFzAAsUrEZvcmNlIHRoZXJlIHRvIGJlIG5vIG5ldyBlcmFzIGluZGVmaW5pdGVseS4AKCMgPHdlaWdodD48LSBObyBhcmd1bWVudHMuLCMgPC93ZWlnaHQ+NGZvcmNlX25ld19lcmEADBhJAUZvcmNlIHRoZXJlIHRvIGJlIGEgbmV3IGVyYSBhdCB0aGUgZW5kIG9mIHRoZSBuZXh0IHNlc3Npb24uIEFmdGVyIHRoaXMsIGl0IHdpbGwgYmWccmVzZXQgdG8gbm9ybWFsIChub24tZm9yY2VkKSBiZWhhdmlvdXIuACgjIDx3ZWlnaHQ+PC0gTm8gYXJndW1lbnRzLiwjIDwvd2VpZ2h0PkBzZXRfbWluaW11bV9ib25kBAEUdmFsdWV0ATBCYWxhbmNlT2Y8VD4ADQRwU2V0IHRoZSBtaW5pbXVtIGJvbmQgYW1vdW50LkRzZXRfaW52dWxuZXJhYmxlcwQBKHZhbGlkYXRvcnOYAURWZWM8VDo6QWNjb3VudElkPgAOBMhTZXQgdGhlIHZhbGlkYXRvcnMgd2hvIGNhbm5vdCBiZSBzbGFzaGVkIChpZiBhbnkpLjRmb3JjZV91bnN0YWtlBAEUc3Rhc2gAATBUOjpBY2NvdW50SWQADygJAUZvcmNlIGEgY3VycmVudCBzdGFrZXIgdG8gYmVjb21lIGNvbXBsZXRlbHkgdW5zdGFrZWQsIGltbWVkaWF0ZWx5LgCEVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIFJvb3QuACgjIDx3ZWlnaHQ+6E8oUykgd2hlcmUgUyBpcyB0aGUgbnVtYmVyIG9mIHNsYXNoaW5nIHNwYW5zIHRvIGJlIHJlbW92ZWS0UmVhZHM6IEJvbmRlZCwgU2xhc2hpbmcgU3BhbnMsIEFjY291bnQsIExvY2tzgQFXcml0ZXM6IEJvbmRlZCwgU2xhc2hpbmcgU3BhbnMgKGlmIFMgPiAwKSwgTGVkZ2VyLCBQYXllZSwgVmFsaWRhdG9ycywgTm9taW5hdG9ycywgQWNjb3VudCwgTG9ja3NoV3JpdGVzIEVhY2g6IFNwYW5TbGFzaCAqIFMsIyA8L3dlaWdodD5QZm9yY2VfbmV3X2VyYV9hbHdheXMAECABAUZvcmNlIHRoZXJlIHRvIGJlIGEgbmV3IGVyYSBhdCB0aGUgZW5kIG9mIHNlc3Npb25zIGluZGVmaW5pdGVseS4AhFRoZSBkaXNwYXRjaCBvcmlnaW4gbXVzdCBiZSBSb290LgAoIyA8d2VpZ2h0PjgtIFdlaWdodDogTygxKUQtIFdyaXRlOiBGb3JjZUVyYSwjIDwvd2VpZ2h0PlRjYW5jZWxfZGVmZXJyZWRfc2xhc2gIAQxlcmEYASBFcmFJbmRleAABNHNsYXNoX2luZGljZXMBAQEgVmVjPHUzMj4AESyUQ2FuY2VsIGVuYWN0bWVudCBvZiBhIGRlZmVycmVkIHNsYXNoLgABAVBhcmFtZXRlcnM6IGVyYSBhbmQgaW5kaWNlcyBvZiB0aGUgc2xhc2hlcyBmb3IgdGhhdCBlcmEgdG8ga2lsbC4AKCMgPHdlaWdodD5QQ29tcGxleGl0eTogTyhVICsgUym0d2l0aCBVIHVuYXBwbGllZCBzbGFzaGVzIHdlaWdodGVkIHdpdGggVT0xMDAw0GFuZCBTIGlzIHRoZSBudW1iZXIgb2Ygc2xhc2ggaW5kaWNlcyB0byBiZSBjYW5jZWxlZC5kLSBSZWFkOiBVbmFwcGxpZWQgU2xhc2hlc2gtIFdyaXRlOiBVbmFwcGxpZWQgU2xhc2hlcywjIDwvd2VpZ2h0PhhyZWJvbmQEARR2YWx1ZXwBMEJhbGFuY2VPZjxUPgASONxSZWJvbmQgYSBwb3J0aW9uIG9mIHRoZSBzdGFzaCBzY2hlZHVsZWQgdG8gYmUgdW5sb2NrZWQuAFEBVGhlIGRpc3BhdGNoIG9yaWdpbiBtdXN0IGJlIHNpZ25lZCBieSB0aGUgY29udHJvbGxlciwgYW5kIGl0IGNhbiBiZSBvbmx5IGNhbGxlZCB3aGVuiFtgRXJhRWxlY3Rpb25TdGF0dXNgXSBpcyBgQ2xvc2VkYC4AKCMgPHdlaWdodD7QLSBUaW1lIGNvbXBsZXhpdHk6IE8oTCksIHdoZXJlIEwgaXMgdW5sb2NraW5nIGNodW5rc5AtIEJvdW5kZWQgYnkgYE1BWF9VTkxPQ0tJTkdfQ0hVTktTYC7wLSBTdG9yYWdlIGNoYW5nZXM6IENhbid0IGluY3JlYXNlIHN0b3JhZ2UsIG9ubHkgZGVjcmVhc2UgaXQuPC0tLS0tLS0tLS0tLS0tLTAtIERCIFdlaWdodDr8ICAgIC0gUmVhZHM6IEVyYUVsZWN0aW9uU3RhdHVzLCBMZWRnZXIsIExvY2tzLCBbT3JpZ2luIEFjY291bnRdtCAgICAtIFdyaXRlczogW09yaWdpbiBBY2NvdW50XSwgTG9ja3MsIExlZGdlciwjIDwvd2VpZ2h0PkRzZXRfaGlzdG9yeV9kZXB0aAgBRG5ld19oaXN0b3J5X2RlcHRoaQEBIEVyYUluZGV4AAFIX2VyYV9pdGVtc19kZWxldGVkaQEBDHUzMgATVC0BU2V0IGBIaXN0b3J5RGVwdGhgIHZhbHVlLiBUaGlzIGZ1bmN0aW9uIHdpbGwgZGVsZXRlIGFueSBoaXN0b3J5IGluZm9ybWF0aW9ufHdoZW4gYEhpc3RvcnlEZXB0aGAgaXMgcmVkdWNlZC4ALFBhcmFtZXRlcnM6DQEtIGBuZXdfaGlzdG9yeV9kZXB0aGA6IFRoZSBuZXcgaGlzdG9yeSBkZXB0aCB5b3Ugd291bGQgbGlrZSB0byBzZXQuRQEtIGBlcmFfaXRlbXNfZGVsZXRlZGA6IFRoZSBudW1iZXIgb2YgaXRlbXMgdGhhdCB3aWxsIGJlIGRlbGV0ZWQgYnkgdGhpcyBkaXNwYXRjaC5BASAgIFRoaXMgc2hvdWxkIHJlcG9ydCBhbGwgdGhlIHN0b3JhZ2UgaXRlbXMgdGhhdCB3aWxsIGJlIGRlbGV0ZWQgYnkgY2xlYXJpbmcgb2xkQQEgICBlcmEgaGlzdG9yeS4gTmVlZGVkIHRvIHJlcG9ydCBhbiBhY2N1cmF0ZSB3ZWlnaHQgZm9yIHRoZSBkaXNwYXRjaC4gVHJ1c3RlZCBieZwgICBgUm9vdGAgdG8gcmVwb3J0IGFuIGFjY3VyYXRlIG51bWJlci4AUE9yaWdpbiBtdXN0IGJlIHJvb3QuACgjIDx3ZWlnaHQ+3C0gRTogTnVtYmVyIG9mIGhpc3RvcnkgZGVwdGhzIHJlbW92ZWQsIGkuZS4gMTAgLT4gNyA9IDM4LSBXZWlnaHQ6IE8oRSkwLSBEQiBXZWlnaHQ6nCAgICAtIFJlYWRzOiBDdXJyZW50IEVyYSwgSGlzdG9yeSBEZXB0aGwgICAgLSBXcml0ZXM6IEhpc3RvcnkgRGVwdGgtASAgICAtIENsZWFyIFByZWZpeCBFYWNoOiBFcmEgU3Rha2VycywgRXJhU3Rha2Vyc0NsaXBwZWQsIEVyYXNWYWxpZGF0b3JQcmVmc+AgICAgLSBXcml0ZXMgRWFjaDogRXJhc1RvdGFsU3Rha2UsIEVyYXNTdGFydFNlc3Npb25JbmRleCwjIDwvd2VpZ2h0PihyZWFwX3N0YXNoBAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAFDw1AVJlbW92ZSBhbGwgZGF0YSBzdHJ1Y3R1cmUgY29uY2VybmluZyBhIHN0YWtlci9zdGFzaCBvbmNlIGl0cyBiYWxhbmNlIGlzIHplcm8uXQFUaGlzIGlzIGVzc2VudGlhbGx5IGVxdWl2YWxlbnQgdG8gYHdpdGhkcmF3X3VuYm9uZGVkYCBleGNlcHQgaXQgY2FuIGJlIGNhbGxlZCBieSBhbnlvbmW8YW5kIHRoZSB0YXJnZXQgYHN0YXNoYCBtdXN0IGhhdmUgbm8gZnVuZHMgbGVmdC4AjFRoaXMgY2FuIGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4uAPwtIGBzdGFzaGA6IFRoZSBzdGFzaCBhY2NvdW50IHRvIHJlYXAuIEl0cyBiYWxhbmNlIG11c3QgYmUgemVyby4AKCMgPHdlaWdodD4hAUNvbXBsZXhpdHk6IE8oUykgd2hlcmUgUyBpcyB0aGUgbnVtYmVyIG9mIHNsYXNoaW5nIHNwYW5zIG9uIHRoZSBhY2NvdW50LihEQiBXZWlnaHQ61C0gUmVhZHM6IFN0YXNoIEFjY291bnQsIEJvbmRlZCwgU2xhc2hpbmcgU3BhbnMsIExvY2tzoQEtIFdyaXRlczogQm9uZGVkLCBTbGFzaGluZyBTcGFucyAoaWYgUyA+IDApLCBMZWRnZXIsIFBheWVlLCBWYWxpZGF0b3JzLCBOb21pbmF0b3JzLCBTdGFzaCBBY2NvdW50LCBMb2Nrc3AtIFdyaXRlcyBFYWNoOiBTcGFuU2xhc2ggKiBTLCMgPC93ZWlnaHQ+YHN1Ym1pdF9lbGVjdGlvbl9zb2x1dGlvbhQBHHdpbm5lcnMZAgFMVmVjPFZhbGlkYXRvckluZGV4PgABHGNvbXBhY3QdAgFIQ29tcGFjdEFzc2lnbm1lbnRzAAEUc2NvcmXpAgE0RWxlY3Rpb25TY29yZQABDGVyYRgBIEVyYUluZGV4AAEQc2l6Ze0CATBFbGVjdGlvblNpemUAFcTgU3VibWl0IGFuIGVsZWN0aW9uIHJlc3VsdCB0byB0aGUgY2hhaW4uIElmIHRoZSBzb2x1dGlvbjoAMDEuIGlzIHZhbGlkLhEBMi4gaGFzIGEgYmV0dGVyIHNjb3JlIHRoYW4gYSBwb3RlbnRpYWxseSBleGlzdGluZyBzb2x1dGlvbiBvbiBjaGFpbi4AgHRoZW4sIGl0IHdpbGwgYmUgX3B1dF8gb24gY2hhaW4uAKhBIHNvbHV0aW9uIGNvbnNpc3RzIG9mIHR3byBwaWVjZXMgb2YgZGF0YToA8DEuIGB3aW5uZXJzYDogYSBmbGF0IHZlY3RvciBvZiBhbGwgdGhlIHdpbm5lcnMgb2YgdGhlIHJvdW5kLk0BMi4gYGFzc2lnbm1lbnRzYDogdGhlIGNvbXBhY3QgdmVyc2lvbiBvZiBhbiBhc3NpZ25tZW50IHZlY3RvciB0aGF0IGVuY29kZXMgdGhlIGVkZ2UsICAgd2VpZ2h0cy4AHQFCb3RoIG9mIHdoaWNoIG1heSBiZSBjb21wdXRlZCB1c2luZyBfcGhyYWdtZW5fLCBvciBhbnkgb3RoZXIgYWxnb3JpdGhtLgCkQWRkaXRpb25hbGx5LCB0aGUgc3VibWl0dGVyIG11c3QgcHJvdmlkZToAxC0gVGhlIGBzY29yZWAgdGhhdCB0aGV5IGNsYWltIHRoZWlyIHNvbHV0aW9uIGhhcy4ASQFCb3RoIHZhbGlkYXRvcnMgYW5kIG5vbWluYXRvcnMgd2lsbCBiZSByZXByZXNlbnRlZCBieSBpbmRpY2VzIGluIHRoZSBzb2x1dGlvbi4gVGhlGQFpbmRpY2VzIHNob3VsZCByZXNwZWN0IHRoZSBjb3JyZXNwb25kaW5nIHR5cGVzIChbYFZhbGlkYXRvckluZGV4YF0gYW5kLQFbYE5vbWluYXRvckluZGV4YF0pLiBNb3Jlb3ZlciwgdGhleSBzaG91bGQgYmUgdmFsaWQgd2hlbiB1c2VkIHRvIGluZGV4IGludG9NAVtgU25hcHNob3RWYWxpZGF0b3JzYF0gYW5kIFtgU25hcHNob3ROb21pbmF0b3JzYF0uIEFueSBpbnZhbGlkIGluZGV4IHdpbGwgY2F1c2UgdGhlXQFzb2x1dGlvbiB0byBiZSByZWplY3RlZC4gVGhlc2UgdHdvIHN0b3JhZ2UgaXRlbXMgYXJlIHNldCBkdXJpbmcgdGhlIGVsZWN0aW9uIHdpbmRvdyBhbmSUbWF5IGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBpbmRpY2VzLgBcQSBzb2x1dGlvbiBpcyB2YWxpZCBpZjoA4DAuIEl0IGlzIHN1Ym1pdHRlZCB3aGVuIFtgRXJhRWxlY3Rpb25TdGF0dXNgXSBpcyBgT3BlbmAu9DEuIEl0cyBjbGFpbWVkIHNjb3JlIGlzIGVxdWFsIHRvIHRoZSBzY29yZSBjb21wdXRlZCBvbi1jaGFpbi6oMi4gUHJlc2VudHMgdGhlIGNvcnJlY3QgbnVtYmVyIG9mIHdpbm5lcnMuUQEzLiBBbGwgaW5kZXhlcyBtdXN0IGJlIHZhbHVlIGFjY29yZGluZyB0byB0aGUgc25hcHNob3QgdmVjdG9ycy4gQWxsIGVkZ2UgdmFsdWVzIG11c3RZASAgIGFsc28gYmUgY29ycmVjdCBhbmQgc2hvdWxkIG5vdCBvdmVyZmxvdyB0aGUgZ3JhbnVsYXJpdHkgb2YgdGhlIHJhdGlvIHR5cGUgKGkuZS4gMjU2PCAgIG9yIGJpbGxpb24pLgkBNC4gRm9yIGVhY2ggZWRnZSwgYWxsIHRhcmdldHMgYXJlIGFjdHVhbGx5IG5vbWluYXRlZCBieSB0aGUgdm90ZXIuaDUuIEhhcyBjb3JyZWN0IHNlbGYtdm90ZXMuALxBIHNvbHV0aW9ucyBzY29yZSBpcyBjb25zaXN0ZWQgb2YgMyBwYXJhbWV0ZXJzOgBhATEuIGBtaW4geyBzdXBwb3J0LnRvdGFsIH1gIGZvciBlYWNoIHN1cHBvcnQgb2YgYSB3aW5uZXIuIFRoaXMgdmFsdWUgc2hvdWxkIGJlIG1heGltaXplZC5hATIuIGBzdW0geyBzdXBwb3J0LnRvdGFsIH1gIGZvciBlYWNoIHN1cHBvcnQgb2YgYSB3aW5uZXIuIFRoaXMgdmFsdWUgc2hvdWxkIGJlIG1pbmltaXplZC49ATMuIGBzdW0geyBzdXBwb3J0LnRvdGFsXjIgfWAgZm9yIGVhY2ggc3VwcG9ydCBvZiBhIHdpbm5lci4gVGhpcyB2YWx1ZSBzaG91bGQgYmWYICAgbWluaW1pemVkICh0byBlbnN1cmUgbGVzcyB2YXJpYW5jZSkAKCMgPHdlaWdodD4VAVRoZSB0cmFuc2FjdGlvbiBpcyBhc3N1bWVkIHRvIGJlIHRoZSBsb25nZXN0IHBhdGgsIGEgYmV0dGVyIHNvbHV0aW9uLqAgIC0gSW5pdGlhbCBzb2x1dGlvbiBpcyBhbG1vc3QgdGhlIHNhbWUuQQEgIC0gV29yc2Ugc29sdXRpb24gaXMgcmV0cmFjZWQgaW4gcHJlLWRpc3BhdGNoLWNoZWNrcyB3aGljaCBzZXRzIGl0cyBvd24gd2VpZ2h0LiwjIDwvd2VpZ2h0PoRzdWJtaXRfZWxlY3Rpb25fc29sdXRpb25fdW5zaWduZWQUARx3aW5uZXJzGQIBTFZlYzxWYWxpZGF0b3JJbmRleD4AARxjb21wYWN0HQIBSENvbXBhY3RBc3NpZ25tZW50cwABFHNjb3Jl6QIBNEVsZWN0aW9uU2NvcmUAAQxlcmEYASBFcmFJbmRleAABEHNpemXtAgEwRWxlY3Rpb25TaXplABYkvFVuc2lnbmVkIHZlcnNpb24gb2YgYHN1Ym1pdF9lbGVjdGlvbl9zb2x1dGlvbmAuAFkBTm90ZSB0aGF0IHRoaXMgbXVzdCBwYXNzIHRoZSBbYFZhbGlkYXRlVW5zaWduZWRgXSBjaGVjayB3aGljaCBvbmx5IGFsbG93cyB0cmFuc2FjdGlvbnNdAWZyb20gdGhlIGxvY2FsIG5vZGUgdG8gYmUgaW5jbHVkZWQuIEluIG90aGVyIHdvcmRzLCBvbmx5IHRoZSBibG9jayBhdXRob3IgY2FuIGluY2x1ZGUgYWR0cmFuc2FjdGlvbiBpbiB0aGUgYmxvY2suACgjIDx3ZWlnaHQ+bFNlZSBgY3JhdGU6OndlaWdodGAgbW9kdWxlLiwjIDwvd2VpZ2h0PgRMRGlzcGF0Y2hhYmxlIGNhbGxzLg0CCDBjcm1sX3N0YWtpbmdEUmV3YXJkRGVzdGluYXRpb24EJEFjY291bnRJZAEAAQwUU3Rhc2gAAAAoQ29udHJvbGxlcgABABxBY2NvdW50BAAAASRBY2NvdW50SWQAAgAAEQIIMGNybWxfc3Rha2luZzhWYWxpZGF0b3JQcmVmcwAABAEoY29tbWlzc2lvbhUCARxQZXJiaWxsAAAVAgAABpAAGQIAAAKtAQAdAggwY3JtbF9zdGFraW5nSENvbXBhY3RBc3NpZ25tZW50cwAAQAEYdm90ZXMxIQIAAAEYdm90ZXMyLQIAAAEYdm90ZXMzQQIAAAEYdm90ZXM0TQIAAAEYdm90ZXM1WQIAAAEYdm90ZXM2ZQIAAAEYdm90ZXM3cQIAAAEYdm90ZXM4fQIAAAEYdm90ZXM5iQIAAAEcdm90ZXMxMJUCAAABHHZvdGVzMTGhAgAAARx2b3RlczEyrQIAAAEcdm90ZXMxM7kCAAABHHZvdGVzMTTFAgAAARx2b3RlczE10QIAAAEcdm90ZXMxNt0CAAAAIQIAAAIlAgAlAgAABAhpASkCACkCAAAGrQEALQIAAAIxAgAxAgAABAxpATUCKQIANQIAAAQIKQI5AgA5AgAABj0CAD0CDDRzcF9hcml0aG1ldGljKHBlcl90aGluZ3MYUGVyVTE2AAAEAK0BAQx1MTYAAEECAAACRQIARQIAAAQMaQFJAikCAEkCAAADAgAAADUCAE0CAAACUQIAUQIAAAQMaQFVAikCAFUCAAADAwAAADUCAFkCAAACXQIAXQIAAAQMaQFhAikCAGECAAADBAAAADUCAGUCAAACaQIAaQIAAAQMaQFtAikCAG0CAAADBQAAADUCAHECAAACdQIAdQIAAAQMaQF5AikCAHkCAAADBgAAADUCAH0CAAACgQIAgQIAAAQMaQGFAikCAIUCAAADBwAAADUCAIkCAAACjQIAjQIAAAQMaQGRAikCAJECAAADCAAAADUCAJUCAAACmQIAmQIAAAQMaQGdAikCAJ0CAAADCQAAADUCAKECAAACpQIApQIAAAQMaQGpAikCAKkCAAADCgAAADUCAK0CAAACsQIAsQIAAAQMaQG1AikCALUCAAADCwAAADUCALkCAAACvQIAvQIAAAQMaQHBAikCAMECAAADDAAAADUCAMUCAAACyQIAyQIAAAQMaQHNAikCAM0CAAADDQAAADUCANECAAAC1QIA1QIAAAQMaQHZAikCANkCAAADDgAAADUCAN0CAAAC4QIA4QIAAAQMaQHlAikCAOUCAAADDwAAADUCAOkCAAADAwAAAHQA7QIIMGNybWxfc3Rha2luZzBFbGVjdGlvblNpemUAAAgBKHZhbGlkYXRvcnMpAgE4VmFsaWRhdG9ySW5kZXgAAShub21pbmF0b3JzaQEBOE5vbWluYXRvckluZGV4AADxAgw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0EENhbGwEBFQAAQggc2V0X2tleXMIARBrZXlz9QIBHFQ6OktleXMAARRwcm9vZiQBHFZlYzx1OD4AADjkU2V0cyB0aGUgc2Vzc2lvbiBrZXkocykgb2YgdGhlIGZ1bmN0aW9uIGNhbGxlciB0byBga2V5c2AuHQFBbGxvd3MgYW4gYWNjb3VudCB0byBzZXQgaXRzIHNlc3Npb24ga2V5IHByaW9yIHRvIGJlY29taW5nIGEgdmFsaWRhdG9yLsBUaGlzIGRvZXNuJ3QgdGFrZSBlZmZlY3QgdW50aWwgdGhlIG5leHQgc2Vzc2lvbi4A0FRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBmdW5jdGlvbiBtdXN0IGJlIHNpZ25lZC4AKCMgPHdlaWdodD4RAS0gQ29tcGxleGl0eTogYE8oMSlgLiBBY3R1YWwgY29zdCBkZXBlbmRzIG9uIHRoZSBudW1iZXIgb2YgbGVuZ3RoIG9mmCAgYFQ6OktleXM6OmtleV9pZHMoKWAgd2hpY2ggaXMgZml4ZWQu7C0gRGJSZWFkczogYG9yaWdpbiBhY2NvdW50YCwgYFQ6OlZhbGlkYXRvcklkT2ZgLCBgTmV4dEtleXNgoC0gRGJXcml0ZXM6IGBvcmlnaW4gYWNjb3VudGAsIGBOZXh0S2V5c2CALSBEYlJlYWRzIHBlciBrZXkgaWQ6IGBLZXlPd25lcmCELSBEYldyaXRlcyBwZXIga2V5IGlkOiBgS2V5T3duZXJgLCMgPC93ZWlnaHQ+KHB1cmdlX2tleXMAAUDIUmVtb3ZlcyBhbnkgc2Vzc2lvbiBrZXkocykgb2YgdGhlIGZ1bmN0aW9uIGNhbGxlci4AwFRoaXMgZG9lc24ndCB0YWtlIGVmZmVjdCB1bnRpbCB0aGUgbmV4dCBzZXNzaW9uLgBVAVRoZSBkaXNwYXRjaCBvcmlnaW4gb2YgdGhpcyBmdW5jdGlvbiBtdXN0IGJlIFNpZ25lZCBhbmQgdGhlIGFjY291bnQgbXVzdCBiZSBlaXRoZXIgYmVdAWNvbnZlcnRpYmxlIHRvIGEgdmFsaWRhdG9yIElEIHVzaW5nIHRoZSBjaGFpbidzIHR5cGljYWwgYWRkcmVzc2luZyBzeXN0ZW0gKHRoaXMgdXN1YWxseVEBbWVhbnMgYmVpbmcgYSBjb250cm9sbGVyIGFjY291bnQpIG9yIGRpcmVjdGx5IGNvbnZlcnRpYmxlIGludG8gYSB2YWxpZGF0b3IgSUQgKHdoaWNolHVzdWFsbHkgbWVhbnMgYmVpbmcgYSBzdGFzaCBhY2NvdW50KS4AKCMgPHdlaWdodD5hAS0gQ29tcGxleGl0eTogYE8oMSlgIGluIG51bWJlciBvZiBrZXkgdHlwZXMuIEFjdHVhbCBjb3N0IGRlcGVuZHMgb24gdGhlIG51bWJlciBvZiBsZW5ndGikICBvZiBgVDo6S2V5czo6a2V5X2lkcygpYCB3aGljaCBpcyBmaXhlZC7sLSBEYlJlYWRzOiBgVDo6VmFsaWRhdG9ySWRPZmAsIGBOZXh0S2V5c2AsIGBvcmlnaW4gYWNjb3VudGCgLSBEYldyaXRlczogYE5leHRLZXlzYCwgYG9yaWdpbiBhY2NvdW50YIQtIERiV3JpdGVzIHBlciBrZXkgaWQ6IGBLZXlPd25lcmAsIyA8L3dlaWdodD4EJQFDb250YWlucyBvbmUgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIHRoYXQgY2FuIGJlIGNhbGxlZCBieSBhbiBleHRyaW5zaWMu9QIIQGNlbm56bmV0X3J1bnRpbWUsU2Vzc2lvbktleXMAABQBHGdyYW5kcGG0AdA8R3JhbmRwYSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAEQYmFiZd0BAcQ8QmFiZSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAEkaW1fb25saW5lwAHUPEltT25saW5lIGFzICRjcmF0ZTo6Qm91bmRUb1J1bnRpbWVBcHBQdWJsaWM+OjpQdWJsaWMAAUxhdXRob3JpdHlfZGlzY292ZXJ5+QIB/DxBdXRob3JpdHlEaXNjb3ZlcnkgYXMgJGNyYXRlOjpCb3VuZFRvUnVudGltZUFwcFB1YmxpYz46OlB1YmxpYwABKGV0aF9icmlkZ2X9AgHYPEV0aEJyaWRnZSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAD5AgxYc3BfYXV0aG9yaXR5X2Rpc2NvdmVyeQxhcHAYUHVibGljAAAEAMQBPHNyMjU1MTk6OlB1YmxpYwAA/QIUTGNlbm56bmV0X3ByaW1pdGl2ZXMMZXRoGGNyeXB0byhhcHBfY3J5cHRvGFB1YmxpYwAABAABAwE0ZWNkc2E6OlB1YmxpYwAAAQMMHHNwX2NvcmUUZWNkc2EYUHVibGljAAAEAAUDASBbdTg7IDMzXQAABQMAAAMhAAAACAAJAww4cGFsbGV0X2dyYW5kcGEYcGFsbGV0EENhbGwEBFQAAQxMcmVwb3J0X2VxdWl2b2NhdGlvbggBSGVxdWl2b2NhdGlvbl9wcm9vZg0DAbxCb3g8RXF1aXZvY2F0aW9uUHJvb2Y8VDo6SGFzaCwgVDo6QmxvY2tOdW1iZXI+PgABPGtleV9vd25lcl9wcm9vZuUBAUBUOjpLZXlPd25lclByb29mAAAQCQFSZXBvcnQgdm90ZXIgZXF1aXZvY2F0aW9uL21pc2JlaGF2aW9yLiBUaGlzIG1ldGhvZCB3aWxsIHZlcmlmeSB0aGX0ZXF1aXZvY2F0aW9uIHByb29mIGFuZCB2YWxpZGF0ZSB0aGUgZ2l2ZW4ga2V5IG93bmVyc2hpcCBwcm9vZvhhZ2FpbnN0IHRoZSBleHRyYWN0ZWQgb2ZmZW5kZXIuIElmIGJvdGggYXJlIHZhbGlkLCB0aGUgb2ZmZW5jZUR3aWxsIGJlIHJlcG9ydGVkLnByZXBvcnRfZXF1aXZvY2F0aW9uX3Vuc2lnbmVkCAFIZXF1aXZvY2F0aW9uX3Byb29mDQMBvEJveDxFcXVpdm9jYXRpb25Qcm9vZjxUOjpIYXNoLCBUOjpCbG9ja051bWJlcj4+AAE8a2V5X293bmVyX3Byb29m5QEBQFQ6OktleU93bmVyUHJvb2YAASQJAVJlcG9ydCB2b3RlciBlcXVpdm9jYXRpb24vbWlzYmVoYXZpb3IuIFRoaXMgbWV0aG9kIHdpbGwgdmVyaWZ5IHRoZfRlcXVpdm9jYXRpb24gcHJvb2YgYW5kIHZhbGlkYXRlIHRoZSBnaXZlbiBrZXkgb3duZXJzaGlwIHByb29m+GFnYWluc3QgdGhlIGV4dHJhY3RlZCBvZmZlbmRlci4gSWYgYm90aCBhcmUgdmFsaWQsIHRoZSBvZmZlbmNlRHdpbGwgYmUgcmVwb3J0ZWQuAA0BVGhpcyBleHRyaW5zaWMgbXVzdCBiZSBjYWxsZWQgdW5zaWduZWQgYW5kIGl0IGlzIGV4cGVjdGVkIHRoYXQgb25seRUBYmxvY2sgYXV0aG9ycyB3aWxsIGNhbGwgaXQgKHZhbGlkYXRlZCBpbiBgVmFsaWRhdGVVbnNpZ25lZGApLCBhcyBzdWNoFQFpZiB0aGUgYmxvY2sgYXV0aG9yIGlzIGRlZmluZWQgaXQgd2lsbCBiZSBkZWZpbmVkIGFzIHRoZSBlcXVpdm9jYXRpb24kcmVwb3J0ZXIuMG5vdGVfc3RhbGxlZAgBFGRlbGF5GAE4VDo6QmxvY2tOdW1iZXIAAWxiZXN0X2ZpbmFsaXplZF9ibG9ja19udW1iZXIYAThUOjpCbG9ja051bWJlcgACHBkBTm90ZSB0aGF0IHRoZSBjdXJyZW50IGF1dGhvcml0eSBzZXQgb2YgdGhlIEdSQU5EUEEgZmluYWxpdHkgZ2FkZ2V0IGhhcyUBc3RhbGxlZC4gVGhpcyB3aWxsIHRyaWdnZXIgYSBmb3JjZWQgYXV0aG9yaXR5IHNldCBjaGFuZ2UgYXQgdGhlIGJlZ2lubmluZx0Bb2YgdGhlIG5leHQgc2Vzc2lvbiwgdG8gYmUgZW5hY3RlZCBgZGVsYXlgIGJsb2NrcyBhZnRlciB0aGF0LiBUaGUgZGVsYXkRAXNob3VsZCBiZSBoaWdoIGVub3VnaCB0byBzYWZlbHkgYXNzdW1lIHRoYXQgdGhlIGJsb2NrIHNpZ25hbGxpbmcgdGhlJQFmb3JjZWQgY2hhbmdlIHdpbGwgbm90IGJlIHJlLW9yZ2VkIChlLmcuIDEwMDAgYmxvY2tzKS4gVGhlIEdSQU5EUEEgdm90ZXJzJQF3aWxsIHN0YXJ0IHRoZSBuZXcgYXV0aG9yaXR5IHNldCB1c2luZyB0aGUgZ2l2ZW4gZmluYWxpemVkIGJsb2NrIGFzIGJhc2UuWE9ubHkgY2FsbGFibGUgYnkgcm9vdC4EJQFDb250YWlucyBvbmUgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIHRoYXQgY2FuIGJlIGNhbGxlZCBieSBhbiBleHRyaW5zaWMuDQMITHNwX2ZpbmFsaXR5X2dyYW5kcGFERXF1aXZvY2F0aW9uUHJvb2YIBEgBIAROARgACAEYc2V0X2lkEAEUU2V0SWQAATBlcXVpdm9jYXRpb24RAwFIRXF1aXZvY2F0aW9uPEgsIE4+AAARAwhMc3BfZmluYWxpdHlfZ3JhbmRwYTBFcXVpdm9jYXRpb24IBEgBIAROARgBCBxQcmV2b3RlBAAVAwE5AWdyYW5kcGE6OkVxdWl2b2NhdGlvbjxBdXRob3JpdHlJZCwgZ3JhbmRwYTo6UHJldm90ZTxILCBOPiwKQXV0aG9yaXR5U2lnbmF0dXJlPgAAACRQcmVjb21taXQEAC0DAUEBZ3JhbmRwYTo6RXF1aXZvY2F0aW9uPEF1dGhvcml0eUlkLCBncmFuZHBhOjpQcmVjb21taXQ8SCwgTj4sCkF1dGhvcml0eVNpZ25hdHVyZT4AAQAAFQMIQGZpbmFsaXR5X2dyYW5kcGEwRXF1aXZvY2F0aW9uDAhJZAG0BFYBGQMEUwEdAwAQATByb3VuZF9udW1iZXIQAQx1NjQAASBpZGVudGl0ebQBCElkAAEUZmlyc3QpAwEYKFYsIFMpAAEYc2Vjb25kKQMBGChWLCBTKQAAGQMIQGZpbmFsaXR5X2dyYW5kcGEcUHJldm90ZQgESAEgBE4BGAAIASx0YXJnZXRfaGFzaCABBEgAATR0YXJnZXRfbnVtYmVyGAEETgAAHQMMTHNwX2ZpbmFsaXR5X2dyYW5kcGEMYXBwJFNpZ25hdHVyZQAABAAhAwFIZWQyNTUxOTo6U2lnbmF0dXJlAAAhAwwcc3BfY29yZRxlZDI1NTE5JFNpZ25hdHVyZQAABAAlAwEgW3U4OyA2NF0AACUDAAADQAAAAAgAKQMAAAQIGQMdAwAtAwhAZmluYWxpdHlfZ3JhbmRwYTBFcXVpdm9jYXRpb24MCElkAbQEVgExAwRTAR0DABABMHJvdW5kX251bWJlchABDHU2NAABIGlkZW50aXR5tAEISWQAARRmaXJzdDUDARgoViwgUykAARhzZWNvbmQ1AwEYKFYsIFMpAAAxAwhAZmluYWxpdHlfZ3JhbmRwYSRQcmVjb21taXQIBEgBIAROARgACAEsdGFyZ2V0X2hhc2ggAQRIAAE0dGFyZ2V0X251bWJlchgBBE4AADUDAAAECDEDHQMAOQMMQHBhbGxldF9pbV9vbmxpbmUYcGFsbGV0EENhbGwEBFQAAQQkaGVhcnRiZWF0CAEkaGVhcnRiZWF0PQMBZEhlYXJ0YmVhdDxUOjpCbG9ja051bWJlcj4AASRzaWduYXR1cmVRAwG8PFQ6OkF1dGhvcml0eUlkIGFzIFJ1bnRpbWVBcHBQdWJsaWM+OjpTaWduYXR1cmUAACQoIyA8d2VpZ2h0PmEBLSBDb21wbGV4aXR5OiBgTyhLICsgRSlgIHdoZXJlIEsgaXMgbGVuZ3RoIG9mIGBLZXlzYCAoaGVhcnRiZWF0LnZhbGlkYXRvcnNfbGVuKSBhbmQgRSBpc9ggIGxlbmd0aCBvZiBgaGVhcnRiZWF0Lm5ldHdvcmtfc3RhdGUuZXh0ZXJuYWxfYWRkcmVzc2CIICAtIGBPKEspYDogZGVjb2Rpbmcgb2YgbGVuZ3RoIGBLYKwgIC0gYE8oRSlgOiBkZWNvZGluZy9lbmNvZGluZyBvZiBsZW5ndGggYEVgOQEtIERiUmVhZHM6IHBhbGxldF9zZXNzaW9uIGBWYWxpZGF0b3JzYCwgcGFsbGV0X3Nlc3Npb24gYEN1cnJlbnRJbmRleGAsIGBLZXlzYCxYICBgUmVjZWl2ZWRIZWFydGJlYXRzYIAtIERiV3JpdGVzOiBgUmVjZWl2ZWRIZWFydGJlYXRzYCwjIDwvd2VpZ2h0PgQlAUNvbnRhaW5zIG9uZSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgdGhhdCBjYW4gYmUgY2FsbGVkIGJ5IGFuIGV4dHJpbnNpYy49AwhAcGFsbGV0X2ltX29ubGluZSRIZWFydGJlYXQELEJsb2NrTnVtYmVyARgAFAEwYmxvY2tfbnVtYmVyGAEsQmxvY2tOdW1iZXIAATRuZXR3b3JrX3N0YXRlQQMBSE9wYXF1ZU5ldHdvcmtTdGF0ZQABNHNlc3Npb25faW5kZXgYATBTZXNzaW9uSW5kZXgAATxhdXRob3JpdHlfaW5kZXgYASRBdXRoSW5kZXgAATh2YWxpZGF0b3JzX2xlbhgBDHUzMgAAQQMMHHNwX2NvcmUgb2ZmY2hhaW5IT3BhcXVlTmV0d29ya1N0YXRlAAAIARxwZWVyX2lkRQMBME9wYXF1ZVBlZXJJZAABSGV4dGVybmFsX2FkZHJlc3Nlc0kDAVBWZWM8T3BhcXVlTXVsdGlhZGRyPgAARQMIHHNwX2NvcmUwT3BhcXVlUGVlcklkAAAEACQBHFZlYzx1OD4AAEkDAAACTQMATQMMHHNwX2NvcmUgb2ZmY2hhaW48T3BhcXVlTXVsdGlhZGRyAAAEACQBHFZlYzx1OD4AAFEDEEBwYWxsZXRfaW1fb25saW5lHHNyMjU1MTksYXBwX3NyMjU1MTkkU2lnbmF0dXJlAAAEAFUDAUhzcjI1NTE5OjpTaWduYXR1cmUAAFUDDBxzcF9jb3JlHHNyMjU1MTkkU2lnbmF0dXJlAAAEACUDASBbdTg7IDY0XQAAWQMMLHBhbGxldF9zdWRvGHBhbGxldBBDYWxsBARUAAEQEHN1ZG8EARBjYWxswQEBYEJveDw8VCBhcyBDb25maWc+OjpDYWxsPgAAKDUBQXV0aGVudGljYXRlcyB0aGUgc3VkbyBrZXkgYW5kIGRpc3BhdGNoZXMgYSBmdW5jdGlvbiBjYWxsIHdpdGggYFJvb3RgIG9yaWdpbi4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgAoIyA8d2VpZ2h0PhwtIE8oMSkuYC0gTGltaXRlZCBzdG9yYWdlIHJlYWRzLlwtIE9uZSBEQiB3cml0ZSAoZXZlbnQpLsQtIFdlaWdodCBvZiBkZXJpdmF0aXZlIGBjYWxsYCBleGVjdXRpb24gKyAxMCwwMDAuLCMgPC93ZWlnaHQ+VHN1ZG9fdW5jaGVja2VkX3dlaWdodAgBEGNhbGzBAQFgQm94PDxUIGFzIENvbmZpZz46OkNhbGw+AAEYd2VpZ2h0EAEYV2VpZ2h0AAEoNQFBdXRoZW50aWNhdGVzIHRoZSBzdWRvIGtleSBhbmQgZGlzcGF0Y2hlcyBhIGZ1bmN0aW9uIGNhbGwgd2l0aCBgUm9vdGAgb3JpZ2luLi0BVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCBjaGVjayB0aGUgd2VpZ2h0IG9mIHRoZSBjYWxsLCBhbmQgaW5zdGVhZCBhbGxvd3MgdGhlsFN1ZG8gdXNlciB0byBzcGVjaWZ5IHRoZSB3ZWlnaHQgb2YgdGhlIGNhbGwuAMxUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXy4AKCMgPHdlaWdodD4cLSBPKDEpLswtIFRoZSB3ZWlnaHQgb2YgdGhpcyBjYWxsIGlzIGRlZmluZWQgYnkgdGhlIGNhbGxlci4sIyA8L3dlaWdodD4cc2V0X2tleQQBDG5ldwABjDxUOjpMb29rdXAgYXMgU3RhdGljTG9va3VwPjo6U291cmNlAAIoXQFBdXRoZW50aWNhdGVzIHRoZSBjdXJyZW50IHN1ZG8ga2V5IGFuZCBzZXRzIHRoZSBnaXZlbiBBY2NvdW50SWQgKGBuZXdgKSBhcyB0aGUgbmV3IHN1ZG8Qa2V5LgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uACgjIDx3ZWlnaHQ+HC0gTygxKS5gLSBMaW1pdGVkIHN0b3JhZ2UgcmVhZHMuQC0gT25lIERCIGNoYW5nZS4sIyA8L3dlaWdodD4cc3Vkb19hcwgBDHdobwABjDxUOjpMb29rdXAgYXMgU3RhdGljTG9va3VwPjo6U291cmNlAAEQY2FsbMEBAWBCb3g8PFQgYXMgQ29uZmlnPjo6Q2FsbD4AAyxNAUF1dGhlbnRpY2F0ZXMgdGhlIHN1ZG8ga2V5IGFuZCBkaXNwYXRjaGVzIGEgZnVuY3Rpb24gY2FsbCB3aXRoIGBTaWduZWRgIG9yaWdpbiBmcm9tQGEgZ2l2ZW4gYWNjb3VudC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLgAoIyA8d2VpZ2h0PhwtIE8oMSkuYC0gTGltaXRlZCBzdG9yYWdlIHJlYWRzLlwtIE9uZSBEQiB3cml0ZSAoZXZlbnQpLsQtIFdlaWdodCBvZiBkZXJpdmF0aXZlIGBjYWxsYCBleGVjdXRpb24gKyAxMCwwMDAuLCMgPC93ZWlnaHQ+BCUBQ29udGFpbnMgb25lIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSB0aGF0IGNhbiBiZSBjYWxsZWQgYnkgYW4gZXh0cmluc2ljLl0DDDxwYWxsZXRfdHJlYXN1cnkYcGFsbGV0EENhbGwIBFQABEkAAQw0cHJvcG9zZV9zcGVuZAgBFHZhbHVlfAE8QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnkAAYw8VDo6TG9va3VwIGFzIFN0YXRpY0xvb2t1cD46OlNvdXJjZQAAJCkBUHV0IGZvcndhcmQgYSBzdWdnZXN0aW9uIGZvciBzcGVuZGluZy4gQSBkZXBvc2l0IHByb3BvcnRpb25hbCB0byB0aGUgdmFsdWUxAWlzIHJlc2VydmVkIGFuZCBzbGFzaGVkIGlmIHRoZSBwcm9wb3NhbCBpcyByZWplY3RlZC4gSXQgaXMgcmV0dXJuZWQgb25jZSB0aGVQcHJvcG9zYWwgaXMgYXdhcmRlZC4AKCMgPHdlaWdodD5ILSBDb21wbGV4aXR5OiBPKDEpsC0gRGJSZWFkczogYFByb3Bvc2FsQ291bnRgLCBgb3JpZ2luIGFjY291bnRg6C0gRGJXcml0ZXM6IGBQcm9wb3NhbENvdW50YCwgYFByb3Bvc2Fsc2AsIGBvcmlnaW4gYWNjb3VudGAsIyA8L3dlaWdodD48cmVqZWN0X3Byb3Bvc2FsBAEscHJvcG9zYWxfaWRpAQE0UHJvcG9zYWxJbmRleAABJPhSZWplY3QgYSBwcm9wb3NlZCBzcGVuZC4gVGhlIG9yaWdpbmFsIGRlcG9zaXQgd2lsbCBiZSBzbGFzaGVkLgCoTWF5IG9ubHkgYmUgY2FsbGVkIGZyb20gYFQ6OlJlamVjdE9yaWdpbmAuACgjIDx3ZWlnaHQ+SC0gQ29tcGxleGl0eTogTygxKcwtIERiUmVhZHM6IGBQcm9wb3NhbHNgLCBgcmVqZWN0ZWQgcHJvcG9zZXIgYWNjb3VudGDQLSBEYldyaXRlczogYFByb3Bvc2Fsc2AsIGByZWplY3RlZCBwcm9wb3NlciBhY2NvdW50YCwjIDwvd2VpZ2h0PkBhcHByb3ZlX3Byb3Bvc2FsBAEscHJvcG9zYWxfaWRpAQE0UHJvcG9zYWxJbmRleAACKFkBQXBwcm92ZSBhIHByb3Bvc2FsLiBBdCBhIGxhdGVyIHRpbWUsIHRoZSBwcm9wb3NhbCB3aWxsIGJlIGFsbG9jYXRlZCB0byB0aGUgYmVuZWZpY2lhcnmoYW5kIHRoZSBvcmlnaW5hbCBkZXBvc2l0IHdpbGwgYmUgcmV0dXJuZWQuAKxNYXkgb25seSBiZSBjYWxsZWQgZnJvbSBgVDo6QXBwcm92ZU9yaWdpbmAuACgjIDx3ZWlnaHQ+TC0gQ29tcGxleGl0eTogTygxKS6MLSBEYlJlYWRzOiBgUHJvcG9zYWxzYCwgYEFwcHJvdmFsc2BYLSBEYldyaXRlOiBgQXBwcm92YWxzYCwjIDwvd2VpZ2h0PgQlAUNvbnRhaW5zIG9uZSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgdGhhdCBjYW4gYmUgY2FsbGVkIGJ5IGFuIGV4dHJpbnNpYy5hAww4cGFsbGV0X3V0aWxpdHkYcGFsbGV0EENhbGwEBFQAARAUYmF0Y2gEARRjYWxsc2UDAWBWZWM8PFQgYXMgQ29uZmlnPjo6Q2FsbD4AAEx8U2VuZCBhIGJhdGNoIG9mIGRpc3BhdGNoIGNhbGxzLgB4TWF5IGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4uAF0BLSBgY2FsbHNgOiBUaGUgY2FsbHMgdG8gYmUgZGlzcGF0Y2hlZCBmcm9tIHRoZSBzYW1lIG9yaWdpbi4gVGhlIG51bWJlciBvZiBjYWxsIG11c3Qgbm90OQEgIGV4Y2VlZCB0aGUgY29uc3RhbnQ6IGBiYXRjaGVkX2NhbGxzX2xpbWl0YCAoYXZhaWxhYmxlIGluIGNvbnN0YW50IG1ldGFkYXRhKS4AXQFJZiBvcmlnaW4gaXMgcm9vdCB0aGVuIGNhbGwgYXJlIGRpc3BhdGNoIHdpdGhvdXQgY2hlY2tpbmcgb3JpZ2luIGZpbHRlci4gKFRoaXMgaW5jbHVkZXPIYnlwYXNzaW5nIGBmcmFtZV9zeXN0ZW06OkNvbmZpZzo6QmFzZUNhbGxGaWx0ZXJgKS4AKCMgPHdlaWdodD4BAS0gQ29tcGxleGl0eTogTyhDKSB3aGVyZSBDIGlzIHRoZSBudW1iZXIgb2YgY2FsbHMgdG8gYmUgYmF0Y2hlZC4sIyA8L3dlaWdodD4AVQFUaGlzIHdpbGwgcmV0dXJuIGBPa2AgaW4gYWxsIGNpcmN1bXN0YW5jZXMuIFRvIGRldGVybWluZSB0aGUgc3VjY2VzcyBvZiB0aGUgYmF0Y2gsIGFuMQFldmVudCBpcyBkZXBvc2l0ZWQuIElmIGEgY2FsbCBmYWlsZWQgYW5kIHRoZSBiYXRjaCB3YXMgaW50ZXJydXB0ZWQsIHRoZW4gdGhlVQFgQmF0Y2hJbnRlcnJ1cHRlZGAgZXZlbnQgaXMgZGVwb3NpdGVkLCBhbG9uZyB3aXRoIHRoZSBudW1iZXIgb2Ygc3VjY2Vzc2Z1bCBjYWxscyBtYWRlTQFhbmQgdGhlIGVycm9yIG9mIHRoZSBmYWlsZWQgY2FsbC4gSWYgYWxsIHdlcmUgc3VjY2Vzc2Z1bCwgdGhlbiB0aGUgYEJhdGNoQ29tcGxldGVkYExldmVudCBpcyBkZXBvc2l0ZWQuNGFzX2Rlcml2YXRpdmUIARRpbmRleK0BAQx1MTYAARBjYWxswQEBYEJveDw8VCBhcyBDb25maWc+OjpDYWxsPgABNNxTZW5kIGEgY2FsbCB0aHJvdWdoIGFuIGluZGV4ZWQgcHNldWRvbnltIG9mIHRoZSBzZW5kZXIuAFUBRmlsdGVyIGZyb20gb3JpZ2luIGFyZSBwYXNzZWQgYWxvbmcuIFRoZSBjYWxsIHdpbGwgYmUgZGlzcGF0Y2hlZCB3aXRoIGFuIG9yaWdpbiB3aGljaLx1c2UgdGhlIHNhbWUgZmlsdGVyIGFzIHRoZSBvcmlnaW4gb2YgdGhpcyBjYWxsLgBFAU5PVEU6IElmIHlvdSBuZWVkIHRvIGVuc3VyZSB0aGF0IGFueSBhY2NvdW50LWJhc2VkIGZpbHRlcmluZyBpcyBub3QgaG9ub3JlZCAoaS5lLmEBYmVjYXVzZSB5b3UgZXhwZWN0IGBwcm94eWAgdG8gaGF2ZSBiZWVuIHVzZWQgcHJpb3IgaW4gdGhlIGNhbGwgc3RhY2sgYW5kIHlvdSBkbyBub3Qgd2FudFEBdGhlIGNhbGwgcmVzdHJpY3Rpb25zIHRvIGFwcGx5IHRvIGFueSBzdWItYWNjb3VudHMpLCB0aGVuIHVzZSBgYXNfbXVsdGlfdGhyZXNob2xkXzFgfGluIHRoZSBNdWx0aXNpZyBwYWxsZXQgaW5zdGVhZC4A9E5PVEU6IFByaW9yIHRvIHZlcnNpb24gKjEyLCB0aGlzIHdhcyBjYWxsZWQgYGFzX2xpbWl0ZWRfc3ViYC4AzFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfLiRiYXRjaF9hbGwEARRjYWxsc2UDAWBWZWM8PFQgYXMgQ29uZmlnPjo6Q2FsbD4AAjjsU2VuZCBhIGJhdGNoIG9mIGRpc3BhdGNoIGNhbGxzIGFuZCBhdG9taWNhbGx5IGV4ZWN1dGUgdGhlbS4hAVRoZSB3aG9sZSB0cmFuc2FjdGlvbiB3aWxsIHJvbGxiYWNrIGFuZCBmYWlsIGlmIGFueSBvZiB0aGUgY2FsbHMgZmFpbGVkLgB4TWF5IGJlIGNhbGxlZCBmcm9tIGFueSBvcmlnaW4uAF0BLSBgY2FsbHNgOiBUaGUgY2FsbHMgdG8gYmUgZGlzcGF0Y2hlZCBmcm9tIHRoZSBzYW1lIG9yaWdpbi4gVGhlIG51bWJlciBvZiBjYWxsIG11c3Qgbm90OQEgIGV4Y2VlZCB0aGUgY29uc3RhbnQ6IGBiYXRjaGVkX2NhbGxzX2xpbWl0YCAoYXZhaWxhYmxlIGluIGNvbnN0YW50IG1ldGFkYXRhKS4AXQFJZiBvcmlnaW4gaXMgcm9vdCB0aGVuIGNhbGwgYXJlIGRpc3BhdGNoIHdpdGhvdXQgY2hlY2tpbmcgb3JpZ2luIGZpbHRlci4gKFRoaXMgaW5jbHVkZXPIYnlwYXNzaW5nIGBmcmFtZV9zeXN0ZW06OkNvbmZpZzo6QmFzZUNhbGxGaWx0ZXJgKS4AKCMgPHdlaWdodD4BAS0gQ29tcGxleGl0eTogTyhDKSB3aGVyZSBDIGlzIHRoZSBudW1iZXIgb2YgY2FsbHMgdG8gYmUgYmF0Y2hlZC4sIyA8L3dlaWdodD4sZGlzcGF0Y2hfYXMIASRhc19vcmlnaW5pAwFUQm94PFQ6OlBhbGxldHNPcmlnaW4+AAEQY2FsbMEBAWBCb3g8PFQgYXMgQ29uZmlnPjo6Q2FsbD4AAyjIRGlzcGF0Y2hlcyBhIGZ1bmN0aW9uIGNhbGwgd2l0aCBhIHByb3ZpZGVkIG9yaWdpbi4AxFRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9Sb290Xy4AKCMgPHdlaWdodD4cLSBPKDEpLmAtIExpbWl0ZWQgc3RvcmFnZSByZWFkcy5cLSBPbmUgREIgd3JpdGUgKGV2ZW50KS4dAS0gV2VpZ2h0IG9mIGRlcml2YXRpdmUgYGNhbGxgIGV4ZWN1dGlvbiArIFQ6OldlaWdodEluZm86OmRpc3BhdGNoX2FzKCkuLCMgPC93ZWlnaHQ+BCUBQ29udGFpbnMgb25lIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSB0aGF0IGNhbiBiZSBjYWxsZWQgYnkgYW4gZXh0cmluc2ljLmUDAAACwQEAaQMIQGNlbm56bmV0X3J1bnRpbWUwT3JpZ2luQ2FsbGVyAAEMGHN5c3RlbQQAbQMBdGZyYW1lX3N5c3RlbTo6T3JpZ2luPFJ1bnRpbWU+AAAAIEV0aGVyZXVtBABxAwFccGFsbGV0X2V0aGVyZXVtOjpPcmlnaW4AGQAQVm9pZAQAdQMBEQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6Vm9pZAACAABtAwgwZnJhbWVfc3lzdGVtJFJhd09yaWdpbgQkQWNjb3VudElkAQABDBBSb290AAAAGFNpZ25lZAQAAAEkQWNjb3VudElkAAEAEE5vbmUAAgAAcQMIPHBhbGxldF9ldGhlcmV1bSRSYXdPcmlnaW4AAQRMRXRoZXJldW1UcmFuc2FjdGlvbgQAGQEBEEgxNjAAAAAAdQMIHHNwX2NvcmUQVm9pZAABAAB5Aww8cGFsbGV0X2lkZW50aXR5GHBhbGxldBBDYWxsBARUAAE8NGFkZF9yZWdpc3RyYXIEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAA0eEFkZCBhIHJlZ2lzdHJhciB0byB0aGUgc3lzdGVtLgD8VGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgYFQ6OlJlZ2lzdHJhck9yaWdpbmAuAKgtIGBhY2NvdW50YDogdGhlIGFjY291bnQgb2YgdGhlIHJlZ2lzdHJhci4AlEVtaXRzIGBSZWdpc3RyYXJBZGRlZGAgaWYgc3VjY2Vzc2Z1bC4AKCMgPHdlaWdodD4lAS0gYE8oUilgIHdoZXJlIGBSYCByZWdpc3RyYXItY291bnQgKGdvdmVybmFuY2UtYm91bmRlZCBhbmQgY29kZS1ib3VuZGVkKS6YLSBPbmUgc3RvcmFnZSBtdXRhdGlvbiAoY29kZWMgYE8oUilgKS4wLSBPbmUgZXZlbnQuLCMgPC93ZWlnaHQ+MHNldF9pZGVudGl0eQQBEGluZm99AwGkQm94PElkZW50aXR5SW5mbzxUOjpNYXhBZGRpdGlvbmFsRmllbGRzPj4AAUwpAVNldCBhbiBhY2NvdW50J3MgaWRlbnRpdHkgaW5mb3JtYXRpb24gYW5kIHJlc2VydmUgdGhlIGFwcHJvcHJpYXRlIGRlcG9zaXQuAFUBSWYgdGhlIGFjY291bnQgYWxyZWFkeSBoYXMgaWRlbnRpdHkgaW5mb3JtYXRpb24sIHRoZSBkZXBvc2l0IGlzIHRha2VuIGFzIHBhcnQgcGF5bWVudFBmb3IgdGhlIG5ldyBkZXBvc2l0LgDMVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8uAIwtIGBpbmZvYDogVGhlIGlkZW50aXR5IGluZm9ybWF0aW9uLgCIRW1pdHMgYElkZW50aXR5U2V0YCBpZiBzdWNjZXNzZnVsLgAoIyA8d2VpZ2h0PkQtIGBPKFggKyBYJyArIFIpYB0BICAtIHdoZXJlIGBYYCBhZGRpdGlvbmFsLWZpZWxkLWNvdW50IChkZXBvc2l0LWJvdW5kZWQgYW5kIGNvZGUtYm91bmRlZCngICAtIHdoZXJlIGBSYCBqdWRnZW1lbnRzLWNvdW50IChyZWdpc3RyYXItY291bnQtYm91bmRlZCmALSBPbmUgYmFsYW5jZSByZXNlcnZlIG9wZXJhdGlvbi4hAS0gT25lIHN0b3JhZ2UgbXV0YXRpb24gKGNvZGVjLXJlYWQgYE8oWCcgKyBSKWAsIGNvZGVjLXdyaXRlIGBPKFggKyBSKWApLjAtIE9uZSBldmVudC4sIyA8L3dlaWdodD4gc2V0X3N1YnMEARBzdWJzBQQBZFZlYzwoVDo6QWNjb3VudElkLCBEYXRhKT4AAlSMU2V0IHRoZSBzdWItYWNjb3VudHMgb2YgdGhlIHNlbmRlci4AVQFQYXltZW50OiBBbnkgYWdncmVnYXRlIGJhbGFuY2UgcmVzZXJ2ZWQgYnkgcHJldmlvdXMgYHNldF9zdWJzYCBjYWxscyB3aWxsIGJlIHJldHVybmVkLQFhbmQgYW4gYW1vdW50IGBTdWJBY2NvdW50RGVwb3NpdGAgd2lsbCBiZSByZXNlcnZlZCBmb3IgZWFjaCBpdGVtIGluIGBzdWJzYC4AYQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBhbmQgdGhlIHNlbmRlciBtdXN0IGhhdmUgYSByZWdpc3RlcmVkJGlkZW50aXR5LgCwLSBgc3Vic2A6IFRoZSBpZGVudGl0eSdzIChuZXcpIHN1Yi1hY2NvdW50cy4AKCMgPHdlaWdodD4wLSBgTyhQICsgUylg5CAgLSB3aGVyZSBgUGAgb2xkLXN1YnMtY291bnQgKGhhcmQtIGFuZCBkZXBvc2l0LWJvdW5kZWQpLtQgIC0gd2hlcmUgYFNgIHN1YnMtY291bnQgKGhhcmQtIGFuZCBkZXBvc2l0LWJvdW5kZWQpLoQtIEF0IG1vc3Qgb25lIGJhbGFuY2Ugb3BlcmF0aW9ucy4ULSBEQjrcICAtIGBQICsgU2Agc3RvcmFnZSBtdXRhdGlvbnMgKGNvZGVjIGNvbXBsZXhpdHkgYE8oMSlgKbwgIC0gT25lIHN0b3JhZ2UgcmVhZCAoY29kZWMgY29tcGxleGl0eSBgTyhQKWApLsAgIC0gT25lIHN0b3JhZ2Ugd3JpdGUgKGNvZGVjIGNvbXBsZXhpdHkgYE8oUylgKS7QICAtIE9uZSBzdG9yYWdlLWV4aXN0cyAoYElkZW50aXR5T2Y6OmNvbnRhaW5zX2tleWApLiwjIDwvd2VpZ2h0PjhjbGVhcl9pZGVudGl0eQADSDkBQ2xlYXIgYW4gYWNjb3VudCdzIGlkZW50aXR5IGluZm8gYW5kIGFsbCBzdWItYWNjb3VudHMgYW5kIHJldHVybiBhbGwgZGVwb3NpdHMuAOxQYXltZW50OiBBbGwgcmVzZXJ2ZWQgYmFsYW5jZXMgb24gdGhlIGFjY291bnQgYXJlIHJldHVybmVkLgBhAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2VuZGVyIG11c3QgaGF2ZSBhIHJlZ2lzdGVyZWQkaWRlbnRpdHkuAJhFbWl0cyBgSWRlbnRpdHlDbGVhcmVkYCBpZiBzdWNjZXNzZnVsLgAoIyA8d2VpZ2h0PkAtIGBPKFIgKyBTICsgWClgzCAgLSB3aGVyZSBgUmAgcmVnaXN0cmFyLWNvdW50IChnb3Zlcm5hbmNlLWJvdW5kZWQpLtQgIC0gd2hlcmUgYFNgIHN1YnMtY291bnQgKGhhcmQtIGFuZCBkZXBvc2l0LWJvdW5kZWQpLiEBICAtIHdoZXJlIGBYYCBhZGRpdGlvbmFsLWZpZWxkLWNvdW50IChkZXBvc2l0LWJvdW5kZWQgYW5kIGNvZGUtYm91bmRlZCkuiC0gT25lIGJhbGFuY2UtdW5yZXNlcnZlIG9wZXJhdGlvbi7ILSBgMmAgc3RvcmFnZSByZWFkcyBhbmQgYFMgKyAyYCBzdG9yYWdlIGRlbGV0aW9ucy4wLSBPbmUgZXZlbnQuLCMgPC93ZWlnaHQ+RHJlcXVlc3RfanVkZ2VtZW50CAEkcmVnX2luZGV4aQEBOFJlZ2lzdHJhckluZGV4AAEcbWF4X2ZlZXwBMEJhbGFuY2VPZjxUPgAEXJRSZXF1ZXN0IGEganVkZ2VtZW50IGZyb20gYSByZWdpc3RyYXIuAFUBUGF5bWVudDogQXQgbW9zdCBgbWF4X2ZlZWAgd2lsbCBiZSByZXNlcnZlZCBmb3IgcGF5bWVudCB0byB0aGUgcmVnaXN0cmFyIGlmIGp1ZGdlbWVudBhnaXZlbi4ANQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBhbmQgdGhlIHNlbmRlciBtdXN0IGhhdmUgYVByZWdpc3RlcmVkIGlkZW50aXR5LgAdAS0gYHJlZ19pbmRleGA6IFRoZSBpbmRleCBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGp1ZGdlbWVudCBpcyByZXF1ZXN0ZWQuVQEtIGBtYXhfZmVlYDogVGhlIG1heGltdW0gZmVlIHRoYXQgbWF5IGJlIHBhaWQuIFRoaXMgc2hvdWxkIGp1c3QgYmUgYXV0by1wb3B1bGF0ZWQgYXM6ADBgYGBub2NvbXBpbGW4U2VsZjo6cmVnaXN0cmFycygpLmdldChyZWdfaW5kZXgpLnVud3JhcCgpLmZlZQxgYGAApEVtaXRzIGBKdWRnZW1lbnRSZXF1ZXN0ZWRgIGlmIHN1Y2Nlc3NmdWwuACgjIDx3ZWlnaHQ+NC0gYE8oUiArIFgpYC6ALSBPbmUgYmFsYW5jZS1yZXNlcnZlIG9wZXJhdGlvbi64LSBTdG9yYWdlOiAxIHJlYWQgYE8oUilgLCAxIG11dGF0ZSBgTyhYICsgUilgLjAtIE9uZSBldmVudC4sIyA8L3dlaWdodD44Y2FuY2VsX3JlcXVlc3QEASRyZWdfaW5kZXgYAThSZWdpc3RyYXJJbmRleAAFRGhDYW5jZWwgYSBwcmV2aW91cyByZXF1ZXN0LgD4UGF5bWVudDogQSBwcmV2aW91c2x5IHJlc2VydmVkIGRlcG9zaXQgaXMgcmV0dXJuZWQgb24gc3VjY2Vzcy4ANQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBhbmQgdGhlIHNlbmRlciBtdXN0IGhhdmUgYVByZWdpc3RlcmVkIGlkZW50aXR5LgBFAS0gYHJlZ19pbmRleGA6IFRoZSBpbmRleCBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGp1ZGdlbWVudCBpcyBubyBsb25nZXIgcmVxdWVzdGVkLgCsRW1pdHMgYEp1ZGdlbWVudFVucmVxdWVzdGVkYCBpZiBzdWNjZXNzZnVsLgAoIyA8d2VpZ2h0PjQtIGBPKFIgKyBYKWAugC0gT25lIGJhbGFuY2UtcmVzZXJ2ZSBvcGVyYXRpb24uiC0gT25lIHN0b3JhZ2UgbXV0YXRpb24gYE8oUiArIFgpYC4sLSBPbmUgZXZlbnQsIyA8L3dlaWdodD4cc2V0X2ZlZQgBFGluZGV4aQEBOFJlZ2lzdHJhckluZGV4AAEMZmVlfAEwQmFsYW5jZU9mPFQ+AAY0GQFTZXQgdGhlIGZlZSByZXF1aXJlZCBmb3IgYSBqdWRnZW1lbnQgdG8gYmUgcmVxdWVzdGVkIGZyb20gYSByZWdpc3RyYXIuAFUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzZW5kZXIgbXVzdCBiZSB0aGUgYWNjb3VudKBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGluZGV4IGlzIGBpbmRleGAuAPQtIGBpbmRleGA6IHRoZSBpbmRleCBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGZlZSBpcyB0byBiZSBzZXQuVC0gYGZlZWA6IHRoZSBuZXcgZmVlLgAoIyA8d2VpZ2h0PiQtIGBPKFIpYC54LSBPbmUgc3RvcmFnZSBtdXRhdGlvbiBgTyhSKWAu5C0gQmVuY2htYXJrOiA3LjMxNSArIFIgKiAwLjMyOSDCtXMgKG1pbiBzcXVhcmVzIGFuYWx5c2lzKSwjIDwvd2VpZ2h0PjhzZXRfYWNjb3VudF9pZAgBFGluZGV4aQEBOFJlZ2lzdHJhckluZGV4AAEMbmV3AAEwVDo6QWNjb3VudElkAAc0vENoYW5nZSB0aGUgYWNjb3VudCBhc3NvY2lhdGVkIHdpdGggYSByZWdpc3RyYXIuAFUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzZW5kZXIgbXVzdCBiZSB0aGUgYWNjb3VudKBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGluZGV4IGlzIGBpbmRleGAuAPQtIGBpbmRleGA6IHRoZSBpbmRleCBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGZlZSBpcyB0byBiZSBzZXQucC0gYG5ld2A6IHRoZSBuZXcgYWNjb3VudCBJRC4AKCMgPHdlaWdodD4kLSBgTyhSKWAueC0gT25lIHN0b3JhZ2UgbXV0YXRpb24gYE8oUilgLuAtIEJlbmNobWFyazogOC44MjMgKyBSICogMC4zMiDCtXMgKG1pbiBzcXVhcmVzIGFuYWx5c2lzKSwjIDwvd2VpZ2h0PihzZXRfZmllbGRzCAEUaW5kZXhpAQE4UmVnaXN0cmFySW5kZXgAARhmaWVsZHMNBAE4SWRlbnRpdHlGaWVsZHMACDSoU2V0IHRoZSBmaWVsZCBpbmZvcm1hdGlvbiBmb3IgYSByZWdpc3RyYXIuAFUBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzZW5kZXIgbXVzdCBiZSB0aGUgYWNjb3VudKBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGluZGV4IGlzIGBpbmRleGAuAPQtIGBpbmRleGA6IHRoZSBpbmRleCBvZiB0aGUgcmVnaXN0cmFyIHdob3NlIGZlZSBpcyB0byBiZSBzZXQuDQEtIGBmaWVsZHNgOiB0aGUgZmllbGRzIHRoYXQgdGhlIHJlZ2lzdHJhciBjb25jZXJucyB0aGVtc2VsdmVzIHdpdGguACgjIDx3ZWlnaHQ+JC0gYE8oUilgLngtIE9uZSBzdG9yYWdlIG11dGF0aW9uIGBPKFIpYC7kLSBCZW5jaG1hcms6IDcuNDY0ICsgUiAqIDAuMzI1IMK1cyAobWluIHNxdWFyZXMgYW5hbHlzaXMpLCMgPC93ZWlnaHQ+RHByb3ZpZGVfanVkZ2VtZW50DAEkcmVnX2luZGV4aQEBOFJlZ2lzdHJhckluZGV4AAEYdGFyZ2V0AAGMPFQ6Okxvb2t1cCBhcyBTdGF0aWNMb29rdXA+OjpTb3VyY2UAASRqdWRnZW1lbnQVBAFcSnVkZ2VtZW50PEJhbGFuY2VPZjxUPj4ACUy4UHJvdmlkZSBhIGp1ZGdlbWVudCBmb3IgYW4gYWNjb3VudCdzIGlkZW50aXR5LgBVAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2VuZGVyIG11c3QgYmUgdGhlIGFjY291bnSwb2YgdGhlIHJlZ2lzdHJhciB3aG9zZSBpbmRleCBpcyBgcmVnX2luZGV4YC4AIQEtIGByZWdfaW5kZXhgOiB0aGUgaW5kZXggb2YgdGhlIHJlZ2lzdHJhciB3aG9zZSBqdWRnZW1lbnQgaXMgYmVpbmcgbWFkZS5VAS0gYHRhcmdldGA6IHRoZSBhY2NvdW50IHdob3NlIGlkZW50aXR5IHRoZSBqdWRnZW1lbnQgaXMgdXBvbi4gVGhpcyBtdXN0IGJlIGFuIGFjY291bnR0ICB3aXRoIGEgcmVnaXN0ZXJlZCBpZGVudGl0eS5JAS0gYGp1ZGdlbWVudGA6IHRoZSBqdWRnZW1lbnQgb2YgdGhlIHJlZ2lzdHJhciBvZiBpbmRleCBgcmVnX2luZGV4YCBhYm91dCBgdGFyZ2V0YC4AlEVtaXRzIGBKdWRnZW1lbnRHaXZlbmAgaWYgc3VjY2Vzc2Z1bC4AKCMgPHdlaWdodD40LSBgTyhSICsgWClgLoQtIE9uZSBiYWxhbmNlLXRyYW5zZmVyIG9wZXJhdGlvbi6ULSBVcCB0byBvbmUgYWNjb3VudC1sb29rdXAgb3BlcmF0aW9uLrgtIFN0b3JhZ2U6IDEgcmVhZCBgTyhSKWAsIDEgbXV0YXRlIGBPKFIgKyBYKWAuMC0gT25lIGV2ZW50LiwjIDwvd2VpZ2h0PjRraWxsX2lkZW50aXR5BAEYdGFyZ2V0AAGMPFQ6Okxvb2t1cCBhcyBTdGF0aWNMb29rdXA+OjpTb3VyY2UACkxBAVJlbW92ZSBhbiBhY2NvdW50J3MgaWRlbnRpdHkgYW5kIHN1Yi1hY2NvdW50IGluZm9ybWF0aW9uIGFuZCBzbGFzaCB0aGUgZGVwb3NpdHMuAGEBUGF5bWVudDogUmVzZXJ2ZWQgYmFsYW5jZXMgZnJvbSBgc2V0X3N1YnNgIGFuZCBgc2V0X2lkZW50aXR5YCBhcmUgc2xhc2hlZCBhbmQgaGFuZGxlZCBieUUBYFNsYXNoYC4gVmVyaWZpY2F0aW9uIHJlcXVlc3QgZGVwb3NpdHMgYXJlIG5vdCByZXR1cm5lZDsgdGhleSBzaG91bGQgYmUgY2FuY2VsbGVkgG1hbnVhbGx5IHVzaW5nIGBjYW5jZWxfcmVxdWVzdGAuAPhUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBtYXRjaCBgVDo6Rm9yY2VPcmlnaW5gLgBVAS0gYHRhcmdldGA6IHRoZSBhY2NvdW50IHdob3NlIGlkZW50aXR5IHRoZSBqdWRnZW1lbnQgaXMgdXBvbi4gVGhpcyBtdXN0IGJlIGFuIGFjY291bnR0ICB3aXRoIGEgcmVnaXN0ZXJlZCBpZGVudGl0eS4AlEVtaXRzIGBJZGVudGl0eUtpbGxlZGAgaWYgc3VjY2Vzc2Z1bC4AKCMgPHdlaWdodD5ELSBgTyhSICsgUyArIFgpYC6ALSBPbmUgYmFsYW5jZS1yZXNlcnZlIG9wZXJhdGlvbi5wLSBgUyArIDJgIHN0b3JhZ2UgbXV0YXRpb25zLjAtIE9uZSBldmVudC4sIyA8L3dlaWdodD4cYWRkX3N1YggBDHN1YgABjDxUOjpMb29rdXAgYXMgU3RhdGljTG9va3VwPjo6U291cmNlAAEQZGF0YYkDARBEYXRhAAscrEFkZCB0aGUgZ2l2ZW4gYWNjb3VudCB0byB0aGUgc2VuZGVyJ3Mgc3Vicy4AXQFQYXltZW50OiBCYWxhbmNlIHJlc2VydmVkIGJ5IGEgcHJldmlvdXMgYHNldF9zdWJzYCBjYWxsIGZvciBvbmUgc3ViIHdpbGwgYmUgcmVwYXRyaWF0ZWQ4dG8gdGhlIHNlbmRlci4AYQFUaGUgZGlzcGF0Y2ggb3JpZ2luIGZvciB0aGlzIGNhbGwgbXVzdCBiZSBfU2lnbmVkXyBhbmQgdGhlIHNlbmRlciBtdXN0IGhhdmUgYSByZWdpc3RlcmVkWHN1YiBpZGVudGl0eSBvZiBgc3ViYC4ocmVuYW1lX3N1YggBDHN1YgABjDxUOjpMb29rdXAgYXMgU3RhdGljTG9va3VwPjo6U291cmNlAAEQZGF0YYkDARBEYXRhAAwQzEFsdGVyIHRoZSBhc3NvY2lhdGVkIG5hbWUgb2YgdGhlIGdpdmVuIHN1Yi1hY2NvdW50LgBhAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2VuZGVyIG11c3QgaGF2ZSBhIHJlZ2lzdGVyZWRYc3ViIGlkZW50aXR5IG9mIGBzdWJgLihyZW1vdmVfc3ViBAEMc3ViAAGMPFQ6Okxvb2t1cCBhcyBTdGF0aWNMb29rdXA+OjpTb3VyY2UADRzAUmVtb3ZlIHRoZSBnaXZlbiBhY2NvdW50IGZyb20gdGhlIHNlbmRlcidzIHN1YnMuAF0BUGF5bWVudDogQmFsYW5jZSByZXNlcnZlZCBieSBhIHByZXZpb3VzIGBzZXRfc3Vic2AgY2FsbCBmb3Igb25lIHN1YiB3aWxsIGJlIHJlcGF0cmlhdGVkOHRvIHRoZSBzZW5kZXIuAGEBVGhlIGRpc3BhdGNoIG9yaWdpbiBmb3IgdGhpcyBjYWxsIG11c3QgYmUgX1NpZ25lZF8gYW5kIHRoZSBzZW5kZXIgbXVzdCBoYXZlIGEgcmVnaXN0ZXJlZFhzdWIgaWRlbnRpdHkgb2YgYHN1YmAuIHF1aXRfc3ViAA4ojFJlbW92ZSB0aGUgc2VuZGVyIGFzIGEgc3ViLWFjY291bnQuAF0BUGF5bWVudDogQmFsYW5jZSByZXNlcnZlZCBieSBhIHByZXZpb3VzIGBzZXRfc3Vic2AgY2FsbCBmb3Igb25lIHN1YiB3aWxsIGJlIHJlcGF0cmlhdGVktHRvIHRoZSBzZW5kZXIgKCpub3QqIHRoZSBvcmlnaW5hbCBkZXBvc2l0b3IpLgBhAVRoZSBkaXNwYXRjaCBvcmlnaW4gZm9yIHRoaXMgY2FsbCBtdXN0IGJlIF9TaWduZWRfIGFuZCB0aGUgc2VuZGVyIG11c3QgaGF2ZSBhIHJlZ2lzdGVyZWQ8c3VwZXItaWRlbnRpdHkuAEUBTk9URTogVGhpcyBzaG91bGQgbm90IG5vcm1hbGx5IGJlIHVzZWQsIGJ1dCBpcyBwcm92aWRlZCBpbiB0aGUgY2FzZSB0aGF0IHRoZSBub24tEQFjb250cm9sbGVyIG9mIGFuIGFjY291bnQgaXMgbWFsaWNpb3VzbHkgcmVnaXN0ZXJlZCBhcyBhIHN1Yi1hY2NvdW50LgRwSWRlbnRpdHkgcGFsbGV0IGRlY2xhcmF0aW9uLn0DDDxwYWxsZXRfaWRlbnRpdHkUdHlwZXMwSWRlbnRpdHlJbmZvBChGaWVsZExpbWl0AAAgAShhZGRpdGlvbmFsgQMBkEJvdW5kZWRWZWM8KERhdGEsIERhdGEpLCBGaWVsZExpbWl0PgABFGxlZ2FsiQMBEERhdGEAAQx3ZWKJAwEQRGF0YQABHGRpc2NvcmSJAwEQRGF0YQABFGVtYWlsiQMBEERhdGEAATxwZ3BfZmluZ2VycHJpbnQBBAFAT3B0aW9uPFt1ODsgMjBdPgABFGltYWdliQMBEERhdGEAARx0d2l0dGVyiQMBEERhdGEAAIEDEDRmcmFtZV9zdXBwb3J0HHN0b3JhZ2UsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAGFAwRTAAAEAP0DARhWZWM8VD4AAIUDAAAECIkDiQMAiQMMPHBhbGxldF9pZGVudGl0eRR0eXBlcxBEYXRhAAGYEE5vbmUAAAAQUmF3MAQAjQMAAAEAEFJhdzEEAJEDAAACABBSYXcyBACVAwAAAwAQUmF3MwQAmQMAAAQAEFJhdzQEADQAAAUAEFJhdzUEAJ0DAAAGABBSYXc2BAChAwAABwAQUmF3NwQApQMAAAgAEFJhdzgEAKkBAAAJABBSYXc5BACpAwAACgAUUmF3MTAEAK0DAAALABRSYXcxMQQAsQMAAAwAFFJhdzEyBAC1AwAADQAUUmF3MTMEALkDAAAOABRSYXcxNAQAvQMAAA8AFFJhdzE1BADBAwAAEAAUUmF3MTYEAKAAABEAFFJhdzE3BADFAwAAEgAUUmF3MTgEAMkDAAATABRSYXcxOQQAzQMAABQAFFJhdzIwBAAdAQAAFQAUUmF3MjEEANEDAAAWABRSYXcyMgQA1QMAABcAFFJhdzIzBADZAwAAGAAUUmF3MjQEAN0DAAAZABRSYXcyNQQA4QMAABoAFFJhdzI2BADlAwAAGwAUUmF3MjcEAOkDAAAcABRSYXcyOAQA7QMAAB0AFFJhdzI5BADxAwAAHgAUUmF3MzAEAPUDAAAfABRSYXczMQQA+QMAACAAFFJhdzMyBAAEAAAhACxCbGFrZVR3bzI1NgQABAAAIgAYU2hhMjU2BAAEAAAjACRLZWNjYWsyNTYEAAQAACQALFNoYVRocmVlMjU2BAAEAAAlAACNAwAAAwAAAAAIAJEDAAADAQAAAAgAlQMAAAMCAAAACACZAwAAAwMAAAAIAJ0DAAADBQAAAAgAoQMAAAMGAAAACAClAwAAAwcAAAAIAKkDAAADCQAAAAgArQMAAAMKAAAACACxAwAAAwsAAAAIALUDAAADDAAAAAgAuQMAAAMNAAAACAC9AwAAAw4AAAAIAMEDAAADDwAAAAgAxQMAAAMRAAAACADJAwAAAxIAAAAIAM0DAAADEwAAAAgA0QMAAAMVAAAACADVAwAAAxYAAAAIANkDAAADFwAAAAgA3QMAAAMYAAAACADhAwAAAxkAAAAIAOUDAAADGgAAAAgA6QMAAAMbAAAACADtAwAAAxwAAAAIAPEDAAADHQAAAAgA9QMAAAMeAAAACAD5AwAAAx8AAAAIAP0DAAAChQMAAQQEGE9wdGlvbgQEVAEdAQEIEE5vbmUAAAAQU29tZQQAHQEAAAEAAAUEAAACCQQACQQAAAQIAIkDAA0EDDxwYWxsZXRfaWRlbnRpdHkUdHlwZXMgQml0RmxhZ3MEBFQBEQQABAAQATRJZGVudGl0eUZpZWxkAAARBAw8cGFsbGV0X2lkZW50aXR5FHR5cGVzNElkZW50aXR5RmllbGQAARwUTGVnYWwAAgAMV2ViAAQAHERpc2NvcmQACAAURW1haWwAEAA4UGdwRmluZ2VycHJpbnQAIAAUSW1hZ2UAQAAcVHdpdHRlcgCAAAAVBAw8cGFsbGV0X2lkZW50aXR5FHR5cGVzJEp1ZGdlbWVudAQcQmFsYW5jZQF0ARwcVW5rbm93bgAAABxGZWVQYWlkBAB0ARxCYWxhbmNlAAEAKFJlYXNvbmFibGUAAgAkS25vd25Hb29kAAMAJE91dE9mRGF0ZQAEAChMb3dRdWFsaXR5AAUAJEVycm9uZW91cwAGAAAZBAgsY3JtbF9jZW5uengQQ2FsbAQEVAABFCRidXlfYXNzZXQUASRyZWNpcGllbnQdBAFQT3B0aW9uPFQ6OkFjY291bnRJZD4AATRhc3NldF90b19zZWxsaQEBKFQ6OkFzc2V0SWQAATBhc3NldF90b19idXlpAQEoVDo6QXNzZXRJZAABKGJ1eV9hbW91bnR8AShUOjpCYWxhbmNlAAEwbWF4aW11bV9zZWxsfAEoVDo6QmFsYW5jZQAAIKBCdXkgYGFzc2V0X3RvX2J1eWAgd2l0aCBgYXNzZXRfdG9fc2VsbGAuKQFDYWxsZXIgc3BlY2lmaWVzIGFuIGV4YWN0IGBidXlfYW1vdW50YCBhbmQgYSBgbWF4aW11bV9zZWxsYCBhbW91bnQgdG8gcGF5LgAVAWByZWNpcGllbnRgIC0gQWNjb3VudCB0byByZWNlaXZlIGFzc2V0cywgZGVmYXVsdHMgdG8gYG9yaWdpbmAgaWYgTm9uZYhgYXNzZXRfdG9fc2VsbGAgLSBhc3NldCBJRCB0byBzZWxsgGBhc3NldF90b19idXlgIC0gYXNzZXQgSUQgdG8gYnV52GBidXlfYW1vdW50YCAtIFRoZSBhbW91bnQgb2YgYGFzc2V0X3RvX2J1eWAgdG8gcmVjZWl2ZehgbWF4aW11bV9zZWxsYCAtIE1heGltdW0gYGFzc2V0X3RvX3NlbGxgIGNhbGxlciBzaG91bGQgcGF5KHNlbGxfYXNzZXQUASRyZWNpcGllbnQdBAFQT3B0aW9uPFQ6OkFjY291bnRJZD4AATRhc3NldF90b19zZWxsaQEBKFQ6OkFzc2V0SWQAATBhc3NldF90b19idXlpAQEoVDo6QXNzZXRJZAABLHNlbGxfYW1vdW50fAEoVDo6QmFsYW5jZQABLG1pbmltdW1fYnV5fAEoVDo6QmFsYW5jZQABIKBTZWxsIGBhc3NldF90b19zZWxsYCBmb3IgYGFzc2V0X3RvX2J1eWAuOQFDYWxsZXIgc3BlY2lmaWVzIGFuIGV4YWN0IGBzZWxsX2Ftb3VudGAgYW5kIGEgYG1pbmltdW1fYnV5YCBhbW91bnQgdG8gcmVjZWl2ZS4AFQFgcmVjaXBpZW50YCAtIEFjY291bnQgdG8gcmVjZWl2ZSBhc3NldHMsIGRlZmF1bHRzIHRvIGBvcmlnaW5gIGlmIE5vbmWIYGFzc2V0X3RvX3NlbGxgIC0gYXNzZXQgSUQgdG8gc2VsbIBgYXNzZXRfdG9fYnV5YCAtIGFzc2V0IElEIHRvIGJ1eQ0BYHNlbGxfYW1vdW50YCAtIFRoZSBhbW91bnQgb2YgYGFzc2V0X3RvX3NlbGxgIHRoZSBjYWxsZXIgc2hvdWxkIHBhedRgbWluaW11bV9idXlgIC0gVGhlIG1pbmltdW0gYGFzc2V0X3RvX2J1eWAgdG8gcmVjZWl2ZTRhZGRfbGlxdWlkaXR5EAEgYXNzZXRfaWRpAQEoVDo6QXNzZXRJZAABNG1pbl9saXF1aWRpdHl8AShUOjpCYWxhbmNlAAFAbWF4X2Fzc2V0X2Ftb3VudHwBKFQ6OkJhbGFuY2UAASxjb3JlX2Ftb3VudHwBKFQ6OkJhbGFuY2UAAiAVAURlcG9zaXQgY29yZSBhc3NldCBhbmQgdHJhZGUgYXNzZXQgYXQgY3VycmVudCByYXRpbyB0byBtaW50IGxpcXVpZGl0eYxSZXR1cm5zIGFtb3VudCBvZiBsaXF1aWRpdHkgbWludGVkLgAgYG9yaWdpbmB8YGFzc2V0X2lkYCAtIFRoZSB0cmFkZSBhc3NldCBJRLhgbWluX2xpcXVpZGl0eWAgLSBUaGUgbWluaW11bSBsaXF1aWRpdHkgdG8gYWRktGBhc3NldF9hbW91bnRgIC0gQW1vdW50IG9mIHRyYWRlIGFzc2V0IHRvIGFkZKxgY29yZV9hbW91bnRgIC0gQW1vdW50IG9mIGNvcmUgYXNzZXQgdG8gYWRkQHJlbW92ZV9saXF1aWRpdHkQASBhc3NldF9pZGkBAShUOjpBc3NldElkAAFUbGlxdWlkaXR5X3RvX3dpdGhkcmF3fAEoVDo6QmFsYW5jZQABSG1pbl9hc3NldF93aXRoZHJhd3wBKFQ6OkJhbGFuY2UAAURtaW5fY29yZV93aXRoZHJhd3wBKFQ6OkJhbGFuY2UAAxgxAUJ1cm4gZXhjaGFuZ2UgYXNzZXRzIHRvIHdpdGhkcmF3IGNvcmUgYXNzZXQgYW5kIHRyYWRlIGFzc2V0IGF0IGN1cnJlbnQgcmF0aW8AfGBhc3NldF9pZGAgLSBUaGUgdHJhZGUgYXNzZXQgSUQBAWBsaXF1aWRpdHlfdG9fd2l0aGRyYXdgIC0gQW1vdW50IG9mIHVzZXIncyBsaXF1aWRpdHkgdG8gd2l0aGRyYXfgYG1pbl9hc3NldF93aXRoZHJhd2AgLSBUaGUgbWluaW11bSB0cmFkZSBhc3NldCB3aXRoZHJhd27cYG1pbl9jb3JlX3dpdGhkcmF3YCAtICBUaGUgbWluaW11bSBjb3JlIGFzc2V0IHdpdGhkcmF3bjBzZXRfZmVlX3JhdGUEATBuZXdfZmVlX3JhdGUhBAFMRmVlUmF0ZTxQZXJNaWxsaW9uPgAEBLxTZXQgdGhlIHNwb3QgZXhjaGFuZ2Ugd2lkZSBmZWUgcmF0ZSAocm9vdCBvbmx5KQRMRGlzcGF0Y2hhYmxlIGNhbGxzLh0EBBhPcHRpb24EBFQBAAEIEE5vbmUAAAAQU29tZQQAAAAAAQAAIQQMLGNybWxfY2Vubnp4FHR5cGVzHEZlZVJhdGUEBFMBJQQABAB0AVBMb3dQcmVjaXNpb25VbnNpZ25lZAAAJQQMLGNybWxfY2Vubnp4FHR5cGVzKFBlck1pbGxpb24AAQAAKQQMMGNybWxfc3Rha2luZxxyZXdhcmRzEENhbGwEBFQAAQxIc2V0X2luZmxhdGlvbl9yYXRlCAEkbnVtZXJhdG9yEAEMdTY0AAEsZGVub21pbmF0b3IQAQx1NjQAAAhRAVNldCB0aGUgcGVyIHBheW91dCBpbmZsYXRpb24gcmF0ZSAoYG51bWVyYXRvcmAgLyBgZGVub21pbmF0b3JgKSAoaXQgbWF5IGJlIG5lZ2F0aXZlKWUBUGxlYXNlIGJlIGFkdmlzZWQgdGhhdCBhIG5ld2x5IHNldCBpbmZsYXRpb24gcmF0ZSB3b3VsZCBvbmx5IGFmZmVjdCB0aGUgbmV4dCBmaXNjYWwgeWVhci5kc2V0X2RldmVsb3BtZW50X2Z1bmRfdGFrZQQBQG5ld190YWtlX3BlcmNlbnQYAQx1MzIAAQTAU2V0IHRoZSBkZXZlbG9wbWVudCBmdW5kIHRha2UgJSwgY2FwcGVkIGF0IDEwMCUuUGZvcmNlX25ld19maXNjYWxfZXJhAAIEAQFGb3JjZSBhIG5ldyBmaXNjYWwgZXJhIHRvIHN0YXJ0IGFzIHNvb24gYXMgdGhlIG5leHQgc3Rha2luZyBlcmEuBExEaXNwYXRjaGFibGUgY2FsbHMuLQQIIGNybWxfbmZ0EENhbGwEBFQAAUxobWlncmF0ZV90b19tZXRhZGF0YV9zY2hlbWUMATRjb2xsZWN0aW9uX2lkGAEwQ29sbGVjdGlvbklkAAEkc2VyaWVzX2lkGAEgU2VyaWVzSWQAARhzY2hlbWUxBAE4TWV0YWRhdGFTY2hlbWUAAAh0U2V0IHRoZSBvd25lciBvZiBhIGNvbGxlY3Rpb26sQ2FsbGVyIG11c3QgYmUgdGhlIGN1cnJlbnQgY29sbGVjdGlvbiBvd25lciRzZXRfb3duZXIIATRjb2xsZWN0aW9uX2lkGAEwQ29sbGVjdGlvbklkAAEkbmV3X293bmVyAAEwVDo6QWNjb3VudElkAAEIdFNldCB0aGUgb3duZXIgb2YgYSBjb2xsZWN0aW9urENhbGxlciBtdXN0IGJlIHRoZSBjdXJyZW50IGNvbGxlY3Rpb24gb3duZXI8c2V0X3Nlcmllc19uYW1lDAE0Y29sbGVjdGlvbl9pZBgBMENvbGxlY3Rpb25JZAABJHNlcmllc19pZBgBIFNlcmllc0lkAAEQbmFtZSQBSENvbGxlY3Rpb25OYW1lVHlwZQACCGBTZXQgdGhlIG5hbWUgb2YgYSBzZXJpZXOsQ2FsbGVyIG11c3QgYmUgdGhlIGN1cnJlbnQgY29sbGVjdGlvbiBvd25lclByZWdpc3Rlcl9tYXJrZXRwbGFjZQgBTG1hcmtldHBsYWNlX2FjY291bnQdBAFQT3B0aW9uPFQ6OkFjY291bnRJZD4AASxlbnRpdGxlbWVudPwBHFBlcm1pbGwAAxSARmxhZyBhbiBhY2NvdW50IGFzIGEgbWFya2V0cGxhY2UAFQFgbWFya2V0cGxhY2VfYWNjb3VudGAgLSBpZiBzcGVjaWZpZWQsIHRoaXMgYWNjb3VudCB3aWxsIGJlIHJlZ2lzdGVyZWQVAWBlbnRpdGxlbWVudGAgLSBQZXJtaWxsLCBwZXJjZW50YWdlIG9mIHNhbGVzIHRvIGdvIHRvIHRoZSBtYXJrZXRwbGFjZfBJZiBubyBtYXJrZXRwbGFjZSBpcyBzcGVjaWZpZWQgdGhlIGNhbGxlciB3aWxsIGJlIHJlZ2lzdGVyZWREY3JlYXRlX2NvbGxlY3Rpb24IARBuYW1lJAFIQ29sbGVjdGlvbk5hbWVUeXBlAAFIcm95YWx0aWVzX3NjaGVkdWxlNQQBnE9wdGlvbjxSb3lhbHRpZXNTY2hlZHVsZTxUOjpBY2NvdW50SWQ+PgAEGHRDcmVhdGUgYSBuZXcgdG9rZW4gY29sbGVjdGlvbgCsVGhlIGNhbGxlciB3aWxsIGJlY29tZSB0aGUgY29sbGVjdGlvbiBvd25lcpRgY29sbGVjdGlvbl9pZGAtIDMyIGJ5dGUgdXRmLTggc3RyaW5nTQFgbWV0YWRhdGFfYmFzZV91cmlgIC0gQmFzZSBVUkkgZm9yIG9mZi1jaGFpbiBtZXRhZGF0YSBmb3IgdG9rZW5zIGluIHRoaXMgY29sbGVjdGlvbvkBYHJveWFsdGllc19zY2hlZHVsZWAgLSBkZWZhY3RvIHJveWFsdGllcyBwbGFuIGZvciBzZWNvbmRhcnkgc2FsZXMsIHRoaXMgd2lsbCBhcHBseSB0byBhbGwgdG9rZW5zIGluIHRoZSBjb2xsZWN0aW9uIGJ5IGRlZmF1bHQuLG1pbnRfc2VyaWVzFAE0Y29sbGVjdGlvbl9pZBgBMENvbGxlY3Rpb25JZAABIHF1YW50aXR5GAEoVG9rZW5Db3VudAABFG93bmVyHQQBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAE8bWV0YWRhdGFfc2NoZW1lMQQBOE1ldGFkYXRhU2NoZW1lAAFIcm95YWx0aWVzX3NjaGVkdWxlNQQBnE9wdGlvbjxSb3lhbHRpZXNTY2hlZHVsZTxUOjpBY2NvdW50SWQ+PgAFHExDcmVhdGUgYSBuZXcgc2VyaWVz1EFkZGl0aW9uYWwgdG9rZW5zIGNhbiBiZSBtaW50ZWQgdmlhIGBtaW50X2FkZGl0aW9uYWxgAKRgcXVhbnRpdHlgIC0gbnVtYmVyIG9mIHRva2VucyB0byBtaW50IG5vd8Rgb3duZXJgIC0gdGhlIHRva2VuIG93bmVyLCBkZWZhdWx0cyB0byB0aGUgY2FsbGVyXQFgbWV0YWRhdGFfc2NoZW1lYCAtIFRoZSBvZmYtY2hhaW4gbWV0YWRhdGEgcmVmZXJlbmNpbmcgc2NoZW1lIGZvciB0b2tlbnMgaW4gdGhpcyBzZXJpZXOMQ2FsbGVyIG11c3QgYmUgdGhlIGNvbGxlY3Rpb24gb3duZXI8bWludF9hZGRpdGlvbmFsEAE0Y29sbGVjdGlvbl9pZBgBMENvbGxlY3Rpb25JZAABJHNlcmllc19pZBgBIFNlcmllc0lkAAEgcXVhbnRpdHkYAShUb2tlbkNvdW50AAEUb3duZXIdBAFQT3B0aW9uPFQ6OkFjY291bnRJZD4ABhyITWludCB0b2tlbnMgZm9yIGFuIGV4aXN0aW5nIHNlcmllcwCQYHF1YW50aXR5YCAtIGhvdyBtYW55IHRva2VucyB0byBtaW50AQFgb3duZXJgIC0gdGhlIHRva2VuIG93bmVyLCBkZWZhdWx0cyB0byB0aGUgY2FsbGVyIGlmIHVuc3BlY2lmaWVkjENhbGxlciBtdXN0IGJlIHRoZSBjb2xsZWN0aW9uIG93bmVyLC0tLS0tLS0tLS0tkFdlaWdodCBpcyBPKE4pIHdoZXJlIE4gaXMgYHF1YW50aXR5YCB0cmFuc2ZlcggBIHRva2VuX2lkRQQBHFRva2VuSWQAASRuZXdfb3duZXIAATBUOjpBY2NvdW50SWQABwhwVHJhbnNmZXIgb3duZXJzaGlwIG9mIGFuIE5GVHhDYWxsZXIgbXVzdCBiZSB0aGUgdG9rZW4gb3duZXI4dHJhbnNmZXJfYmF0Y2gQATRjb2xsZWN0aW9uX2lkGAEwQ29sbGVjdGlvbklkAAEkc2VyaWVzX2lkGAEgU2VyaWVzSWQAAThzZXJpYWxfbnVtYmVycwEBAURWZWM8U2VyaWFsTnVtYmVyPgABJG5ld19vd25lcgABMFQ6OkFjY291bnRJZAAIDLhUcmFuc2ZlciBvd25lcnNoaXAgb2YgYSBiYXRjaCBvZiBORlRzIChhdG9taWMpjFRva2VucyBtdXN0IGJlIGZyb20gdGhlIHNhbWUgc2VyaWVzeENhbGxlciBtdXN0IGJlIHRoZSB0b2tlbiBvd25lchBidXJuBAEgdG9rZW5faWRFBAEcVG9rZW5JZAAJDERCdXJuIGEgdG9rZW4g8J+UpQB4Q2FsbGVyIG11c3QgYmUgdGhlIHRva2VuIG93bmVyKGJ1cm5fYmF0Y2gMATRjb2xsZWN0aW9uX2lkGAEwQ29sbGVjdGlvbklkAAEkc2VyaWVzX2lkGAEgU2VyaWVzSWQAAThzZXJpYWxfbnVtYmVycwEBAURWZWM8U2VyaWFsTnVtYmVyPgAKFFRCdXJuIHNvbWUgdG9rZW5zIPCflKWMVG9rZW5zIG11c3QgYmUgZnJvbSB0aGUgc2FtZSBzZXJpZXMAeENhbGxlciBtdXN0IGJlIHRoZSB0b2tlbiBvd25lcmhGYWlscyBvbiBkdXBsaWNhdGUgc2VyaWFscxBzZWxsGAEgdG9rZW5faWRFBAEcVG9rZW5JZAABFGJ1eWVyHQQBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAE0cGF5bWVudF9hc3NldBgBHEFzc2V0SWQAASxmaXhlZF9wcmljZXQBHEJhbGFuY2UAASBkdXJhdGlvbgUBAVhPcHRpb248VDo6QmxvY2tOdW1iZXI+AAE4bWFya2V0cGxhY2VfaWQFAQFUT3B0aW9uPE1hcmtldHBsYWNlSWQ+AAsgkFNlbGwgYSBzaW5nbGUgdG9rZW4gYXQgYSBmaXhlZCBwcmljZQCFAWBidXllcmAgb3B0aW9uYWxseSwgdGhlIGFjY291bnQgdG8gcmVjZWl2ZSB0aGUgTkZULiBJZiB1bnNwZWNpZmllZCwgdGhlbiBhbnkgYWNjb3VudCBtYXkgcHVyY2hhc2X4YGFzc2V0X2lkYCBmdW5naWJsZSBhc3NldCBJZCB0byByZWNlaXZlIGFzIHBheW1lbnQgZm9yIHRoZSBORlRcYGZpeGVkX3ByaWNlYCBhc2sgcHJpY2XMYGR1cmF0aW9uYCBsaXN0aW5nIGR1cmF0aW9uIHRpbWUgaW4gYmxvY2tzIGZyb20gbm93HQFgbWFya2V0cGxhY2VgIG9wdGlvbmFsbHksIHRoZSBtYXJrZXRwbGFjZSB0aGF0IHRoZSBORlQgaXMgYmVpbmcgc29sZCBvbnhDYWxsZXIgbXVzdCBiZSB0aGUgdG9rZW4gb3duZXIsc2VsbF9idW5kbGUYARh0b2tlbnNJBAEwVmVjPFRva2VuSWQ+AAEUYnV5ZXIdBAFQT3B0aW9uPFQ6OkFjY291bnRJZD4AATRwYXltZW50X2Fzc2V0GAEcQXNzZXRJZAABLGZpeGVkX3ByaWNldAEcQmFsYW5jZQABIGR1cmF0aW9uBQEBWE9wdGlvbjxUOjpCbG9ja051bWJlcj4AAThtYXJrZXRwbGFjZV9pZAUBAVRPcHRpb248TWFya2V0cGxhY2VJZD4ADCSgU2VsbCBhIGJ1bmRsZSBvZiB0b2tlbnMgYXQgYSBmaXhlZCBwcmljZZQtIFRva2VucyBtdXN0IGJlIGZyb20gdGhlIHNhbWUgc2VyaWVzMQEtIFRva2VucyB3aXRoIGluZGl2aWR1YWwgcm95YWx0aWVzIHNjaGVkdWxlcyBjYW5ub3QgYmUgc29sZCB3aXRoIHRoaXMgbWV0aG9kAIUBYGJ1eWVyYCBvcHRpb25hbGx5LCB0aGUgYWNjb3VudCB0byByZWNlaXZlIHRoZSBORlQuIElmIHVuc3BlY2lmaWVkLCB0aGVuIGFueSBhY2NvdW50IG1heSBwdXJjaGFzZfhgYXNzZXRfaWRgIGZ1bmdpYmxlIGFzc2V0IElkIHRvIHJlY2VpdmUgYXMgcGF5bWVudCBmb3IgdGhlIE5GVFxgZml4ZWRfcHJpY2VgIGFzayBwcmljZcxgZHVyYXRpb25gIGxpc3RpbmcgZHVyYXRpb24gdGltZSBpbiBibG9ja3MgZnJvbSBub3d4Q2FsbGVyIG11c3QgYmUgdGhlIHRva2VuIG93bmVyDGJ1eQQBKGxpc3RpbmdfaWR0ASRMaXN0aW5nSWQADQSsQnV5IGEgdG9rZW4gbGlzdGluZyBmb3IgaXRzIHNwZWNpZmllZCBwcmljZRxhdWN0aW9uFAEgdG9rZW5faWRFBAEcVG9rZW5JZAABNHBheW1lbnRfYXNzZXQYARxBc3NldElkAAE0cmVzZXJ2ZV9wcmljZXQBHEJhbGFuY2UAASBkdXJhdGlvbgUBAVhPcHRpb248VDo6QmxvY2tOdW1iZXI+AAE4bWFya2V0cGxhY2VfaWQFAQFUT3B0aW9uPE1hcmtldHBsYWNlSWQ+AA4Y4EF1Y3Rpb24gYSB0b2tlbiBvbiB0aGUgb3BlbiBtYXJrZXQgdG8gdGhlIGhpZ2hlc3QgYmlkZGVyAHhDYWxsZXIgbXVzdCBiZSB0aGUgdG9rZW4gb3duZXLsLSBgcGF5bWVudF9hc3NldGAgZnVuZ2libGUgYXNzZXQgSWQgdG8gcmVjZWl2ZSBwYXltZW50IHdpdGjkLSBgcmVzZXJ2ZV9wcmljZWAgd2lubmluZyBiaWQgbXVzdCBiZSBvdmVyIHRoaXMgdGhyZXNob2xkUQEtIGBkdXJhdGlvbmAgbGVuZ3RoIG9mIHRoZSBhdWN0aW9uIChpbiBibG9ja3MpLCB1c2VzIGRlZmF1bHQgZHVyYXRpb24gaWYgdW5zcGVjaWZpZWQ4YXVjdGlvbl9idW5kbGUUARh0b2tlbnNJBAEwVmVjPFRva2VuSWQ+AAE0cGF5bWVudF9hc3NldBgBHEFzc2V0SWQAATRyZXNlcnZlX3ByaWNldAEcQmFsYW5jZQABIGR1cmF0aW9uBQEBWE9wdGlvbjxUOjpCbG9ja051bWJlcj4AAThtYXJrZXRwbGFjZV9pZAUBAVRPcHRpb248TWFya2V0cGxhY2VJZD4ADyANAUF1Y3Rpb24gYSBidW5kbGUgb2YgdG9rZW5zIG9uIHRoZSBvcGVuIG1hcmtldCB0byB0aGUgaGlnaGVzdCBiaWRkZXKULSBUb2tlbnMgbXVzdCBiZSBmcm9tIHRoZSBzYW1lIHNlcmllcxkBLSBUb2tlbnMgd2l0aCBpbmRpdmlkdWFsIHJveWFsdGllcyBzY2hlZHVsZXMgY2Fubm90IGJlIHNvbGQgaW4gYnVuZGxlcwB4Q2FsbGVyIG11c3QgYmUgdGhlIHRva2VuIG93bmVy7C0gYHBheW1lbnRfYXNzZXRgIGZ1bmdpYmxlIGFzc2V0IElkIHRvIHJlY2VpdmUgcGF5bWVudCB3aXRo5C0gYHJlc2VydmVfcHJpY2VgIHdpbm5pbmcgYmlkIG11c3QgYmUgb3ZlciB0aGlzIHRocmVzaG9sZFEBLSBgZHVyYXRpb25gIGxlbmd0aCBvZiB0aGUgYXVjdGlvbiAoaW4gYmxvY2tzKSwgdXNlcyBkZWZhdWx0IGR1cmF0aW9uIGlmIHVuc3BlY2lmaWVkDGJpZAgBKGxpc3RpbmdfaWR0ASRMaXN0aW5nSWQAARhhbW91bnR0ARxCYWxhbmNlABAIeFBsYWNlIGEgYmlkIG9uIGFuIG9wZW4gYXVjdGlvbuwtIGBhbW91bnRgIHRvIGJpZCAoaW4gdGhlIHNlbGxlcidzIHJlcXVlc3RlZCBwYXltZW50IGFzc2V0KSxjYW5jZWxfc2FsZQQBKGxpc3RpbmdfaWR0ASRMaXN0aW5nSWQAEQygQ2xvc2UgYSBzYWxlIG9yIGF1Y3Rpb24gcmV0dXJuaW5nIHRva2Vuc+hSZXF1aXJlcyBubyBzdWNjZXNzZnVsIGJpZHMgaGF2ZSBiZWVuIG1hZGUgZm9yIGFuIGF1Y3Rpb24ugENhbGxlciBtdXN0IGJlIHRoZSBsaXN0ZWQgc2VsbGVySHVwZGF0ZV9maXhlZF9wcmljZQgBKGxpc3RpbmdfaWR0ASRMaXN0aW5nSWQAASRuZXdfcHJpY2V0ARxCYWxhbmNlABIUqFVwZGF0ZSBmaXhlZCBwcmljZSBmb3IgYSBzaW5nbGUgdG9rZW4gc2FsZQCoYGxpc3RpbmdfaWRgIGlkIG9mIHRoZSBmaXhlZCBwcmljZSBsaXN0aW5nbGBuZXdfcHJpY2VgIG5ldyBmaXhlZCBwcmljZXhDYWxsZXIgbXVzdCBiZSB0aGUgdG9rZW4gb3duZXIETERpc3BhdGNoYWJsZSBjYWxscy4xBAwgY3JtbF9uZnQUdHlwZXM4TWV0YWRhdGFTY2hlbWUAARAUSHR0cHMEACQBHFZlYzx1OD4AAAAQSHR0cAQAJAEcVmVjPHU4PgABABxJcGZzRGlyBAAkARxWZWM8dTg+AAIAKElwZnNTaGFyZWQEACQBHFZlYzx1OD4AAwAANQQEGE9wdGlvbgQEVAE5BAEIEE5vbmUAAAAQU29tZQQAOQQAAAEAADkEDCBjcm1sX25mdBR0eXBlc0RSb3lhbHRpZXNTY2hlZHVsZQQkQWNjb3VudElkAQAABAEwZW50aXRsZW1lbnRzPQQBZFZlYzwoQWNjb3VudElkLCBQZXJtaWxsKT4AAD0EAAACQQQAQQQAAAQIAPwARQQAAAQMGBgYAEkEAAACRQQATQQIPGNybWxfZ292ZXJuYW5jZRBDYWxsBARUAAEsPHN1Ym1pdF9wcm9wb3NhbAwBEGNhbGwkARxWZWM8dTg+AAFEanVzdGlmaWNhdGlvbl91cmkkARxWZWM8dTg+AAE8ZW5hY3RtZW50X2RlbGF5GAE4VDo6QmxvY2tOdW1iZXIAAABAdm90ZV9vbl9wcm9wb3NhbAgBLHByb3Bvc2FsX2lkEAEoUHJvcG9zYWxJZAABEHZvdGUNAQEQYm9vbAABAEhhZGRfY291bmNpbF9tZW1iZXIEAShuZXdfbWVtYmVyAAEwVDo6QWNjb3VudElkAAIIbEFkZCBhIG1lbWJlciB0byB0aGUgY291bmNpbLhUaGlzIG11c3QgYmUgc3VibWl0dGVkIGxpa2UgYW55IG90aGVyIHByb3Bvc2FsVHJlbW92ZV9jb3VuY2lsX21lbWJlcgQBNHJlbW92ZV9tZW1iZXIAATBUOjpBY2NvdW50SWQAAwiAUmVtb3ZlIGEgbWVtYmVyIGZyb20gdGhlIGNvdW5jaWy4VGhpcyBtdXN0IGJlIHN1Ym1pdHRlZCBsaWtlIGFueSBvdGhlciBwcm9wb3NhbEBjYW5jZWxfZW5hY3RtZW50BAEscHJvcG9zYWxfaWQQAShQcm9wb3NhbElkAAQEnENhbmNlbCBhIHByb3Bvc2FsIHF1ZXVlZCBmb3IgZW5hY3RtZW50Llx2b3RlX2FnYWluc3RfcmVmZXJlbmR1bQQBLHByb3Bvc2FsX2lkEAEoUHJvcG9zYWxJZAAFBHhTdWJtaXQgYSB2ZXRvIGZvciBhIHJlZmVyZW5kdW1AZW5hY3RfcmVmZXJlbmR1bQQBLHByb3Bvc2FsX2lkEAEoUHJvcG9zYWxJZAAGBHhFeGVjdXRlIGEgcHJvcG9zYWwgdHJhbnNhY3Rpb25Ec2V0X3Byb3Bvc2FsX2JvbmQEAURuZXdfcHJvcG9zYWxfYm9uZHQBHEJhbGFuY2UABwhgQWRqdXN0IHRoZSBwcm9wb3NhbCBib25kuFRoaXMgbXVzdCBiZSBzdWJtaXR0ZWQgbGlrZSBhbnkgb3RoZXIgcHJvcG9zYWxkc2V0X21pbmltdW1fY291bmNpbF9zdGFrZQQBZG5ld19taW5pbXVtX2NvdW5jaWxfc3Rha2V0ARxCYWxhbmNlAAgE5EFkanVzdCB0aGUgbWluaW11bSBzdGFrZSByZXF1aXJlZCBmb3IgbmV3IGNvdW5jaWwgbWVtYmVyc2BzZXRfcmVmZXJlbmR1bV90aHJlc2hvbGQEAWBuZXdfcmVmZXJlbmR1bV90aHJlc2hvbGT8ARxQZXJtaWxsAAkIkEFkanVzdCB0aGUgcmVmZXJlbmR1bSB2ZXRvIHRocmVzaG9sZLhUaGlzIG11c3QgYmUgc3VibWl0dGVkIGxpa2UgYW55IG90aGVyIHByb3Bvc2FsfHNldF9taW5pbXVtX3ZvdGVyX3N0YWtlZF9hbW91bnQEAWRuZXdfbWluaW11bV9zdGFrZWRfYW1vdW50dAEcQmFsYW5jZQAKCIBBZGp1c3QgdGhlIG1pbmltdW0gc3Rha2VkIGFtb3VudLhUaGlzIG11c3QgYmUgc3VibWl0dGVkIGxpa2UgYW55IG90aGVyIHByb3Bvc2FsBExEaXNwYXRjaGFibGUgY2FsbHMuUQQIPGNybWxfZXRoX2JyaWRnZRBDYWxsBARUAAEMXHNldF9ldmVudF9jb25maXJtYXRpb25zBAE0Y29uZmlybWF0aW9ucxABDHU2NAAAAEhzZXRfZXZlbnRfZGVhZGxpbmUEARxzZWNvbmRzEAEMdTY0AAEATHN1Ym1pdF9ub3Rhcml6YXRpb24IARxwYXlsb2FkVQQBTE5vdGFyaXphdGlvblBheWxvYWQAAShfc2lnbmF0dXJlXQQB2Dw8VCBhcyBDb25maWc+OjpFdGh5SWQgYXMgUnVudGltZUFwcFB1YmxpYz46OlNpZ25hdHVyZQACAARMRGlzcGF0Y2hhYmxlIGNhbGxzLlUEDDxjcm1sX2V0aF9icmlkZ2UUdHlwZXNMTm90YXJpemF0aW9uUGF5bG9hZAAADAE4ZXZlbnRfY2xhaW1faWQQATBFdmVudENsYWltSWQAATxhdXRob3JpdHlfaW5kZXitAQEMdTE2AAEYcmVzdWx0WQQBQEV2ZW50Q2xhaW1SZXN1bHQAAFkEDDxjcm1sX2V0aF9icmlkZ2UUdHlwZXNARXZlbnRDbGFpbVJlc3VsdAABIBRWYWxpZAAAADxEYXRhUHJvdmlkZXJFcnIAAQA4VHhTdGF0dXNGYWlsZWQAAgBkVW5leHBlY3RlZENvbnRyYWN0QWRkcmVzcwADACBOb1R4TG9ncwAEAFhOb3RFbm91Z2hDb25maXJtYXRpb25zAAUAOFVuZXhwZWN0ZWREYXRhAAYAHEV4cGlyZWQABwAAXQQUTGNlbm56bmV0X3ByaW1pdGl2ZXMMZXRoGGNyeXB0byhhcHBfY3J5cHRvJFNpZ25hdHVyZQAABABhBAFAZWNkc2E6OlNpZ25hdHVyZQAAYQQMHHNwX2NvcmUUZWNkc2EkU2lnbmF0dXJlAAAEAGUEASBbdTg7IDY1XQAAZQQAAANBAAAACABpBAg4Y3JtbF9lcmMyMF9wZWcQQ2FsbAQEVAABHERhY3RpdmF0ZV9kZXBvc2l0cwQBIGFjdGl2YXRlDQEBEGJvb2wAAASgQWN0aXZhdGUvZGVhY3RpdmF0ZSBkZXBvc2l0cyAocm9vdCBvbmx5KVBhY3RpdmF0ZV93aXRoZHJhd2FscwQBIGFjdGl2YXRlDQEBEGJvb2wAAQSsQWN0aXZhdGUvZGVhY3RpdmF0ZSB3aXRoZHJhd2FscyAocm9vdCBvbmx5KTRkZXBvc2l0X2NsYWltCAEcdHhfaGFzaCABEEgyNTYAARRjbGFpbW0EAURFcmMyMERlcG9zaXRFdmVudAACACB3aXRoZHJhdwwBIGFzc2V0X2lkGAEcQXNzZXRJZAABGGFtb3VudHQBHEJhbGFuY2UAASxiZW5lZmljaWFyeRkBAShFdGhBZGRyZXNzAAMAUHNldF9jb250cmFjdF9hZGRyZXNzBAEsZXRoX2FkZHJlc3MZAQEoRXRoQWRkcmVzcwAEAFxhY3RpdmF0ZV9jZW5uel9kZXBvc2l0cwAFADhzZXRfZXJjMjBfbWV0YQQBHGRldGFpbHNxBAF4VmVjPChFdGhBZGRyZXNzLCBWZWM8dTg+LCB1OCk+AAYABExEaXNwYXRjaGFibGUgY2FsbHMubQQMOGNybWxfZXJjMjBfcGVnFHR5cGVzREVyYzIwRGVwb3NpdEV2ZW50AAAMATR0b2tlbl9hZGRyZXNzGQEBKEV0aEFkZHJlc3MAARhhbW91bnRRAQEQVTI1NgABLGJlbmVmaWNpYXJ5IAEQSDI1NgAAcQQAAAJ1BAB1BAAABAwZASQIAHkECDxjcm1sX2V0aF93YWxsZXQQQ2FsbAQEVAABBBBjYWxsDAEQY2FsbMEBAWBCb3g8PFQgYXMgQ29uZmlnPjo6Q2FsbD4AASxldGhfYWRkcmVzcxkBAShFdGhBZGRyZXNzAAEkc2lnbmF0dXJlfQQBREV0aGVyZXVtU2lnbmF0dXJlAAAABExEaXNwYXRjaGFibGUgY2FsbHMufQQMPGNybWxfZXRoX3dhbGxldCBldGhlcmV1bURFdGhlcmV1bVNpZ25hdHVyZQAABABlBAEgW3U4OyA2NV0AAIEEDDxwYWxsZXRfZXRoZXJldW0YcGFsbGV0EENhbGwEBFQAAQQgdHJhbnNhY3QEASx0cmFuc2FjdGlvboUEASxUcmFuc2FjdGlvbgAABIRUcmFuc2FjdCBhbiBFdGhlcmV1bSB0cmFuc2FjdGlvbi4EJQFDb250YWlucyBvbmUgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIHRoYXQgY2FuIGJlIGNhbGxlZCBieSBhbiBleHRyaW5zaWMuhQQMIGV0aGVyZXVtLHRyYW5zYWN0aW9uNFRyYW5zYWN0aW9uVjIAAQwYTGVnYWN5BACJBAFETGVnYWN5VHJhbnNhY3Rpb24AAAAcRUlQMjkzMAQAmQQBSEVJUDI5MzBUcmFuc2FjdGlvbgABABxFSVAxNTU5BAClBAFIRUlQMTU1OVRyYW5zYWN0aW9uAAIAAIkEDCBldGhlcmV1bSx0cmFuc2FjdGlvbkRMZWdhY3lUcmFuc2FjdGlvbgAAHAEUbm9uY2VRAQEQVTI1NgABJGdhc19wcmljZVEBARBVMjU2AAEkZ2FzX2xpbWl0UQEBEFUyNTYAARhhY3Rpb26NBAFEVHJhbnNhY3Rpb25BY3Rpb24AARR2YWx1ZVEBARBVMjU2AAEUaW5wdXQkARRCeXRlcwABJHNpZ25hdHVyZZEEAVBUcmFuc2FjdGlvblNpZ25hdHVyZQAAjQQMIGV0aGVyZXVtLHRyYW5zYWN0aW9uRFRyYW5zYWN0aW9uQWN0aW9uAAEIEENhbGwEABkBARBIMTYwAAAAGENyZWF0ZQABAACRBAwgZXRoZXJldW0sdHJhbnNhY3Rpb25QVHJhbnNhY3Rpb25TaWduYXR1cmUAAAwBBHaVBAFUVHJhbnNhY3Rpb25SZWNvdmVyeUlkAAEEciABEEgyNTYAAQRzIAEQSDI1NgAAlQQMIGV0aGVyZXVtLHRyYW5zYWN0aW9uVFRyYW5zYWN0aW9uUmVjb3ZlcnlJZAAABAAQAQx1NjQAAJkEDCBldGhlcmV1bSx0cmFuc2FjdGlvbkhFSVAyOTMwVHJhbnNhY3Rpb24AACwBIGNoYWluX2lkEAEMdTY0AAEUbm9uY2VRAQEQVTI1NgABJGdhc19wcmljZVEBARBVMjU2AAEkZ2FzX2xpbWl0UQEBEFUyNTYAARhhY3Rpb26NBAFEVHJhbnNhY3Rpb25BY3Rpb24AARR2YWx1ZVEBARBVMjU2AAEUaW5wdXQkARRCeXRlcwABLGFjY2Vzc19saXN0nQQBKEFjY2Vzc0xpc3QAATBvZGRfeV9wYXJpdHkNAQEQYm9vbAABBHIgARBIMjU2AAEEcyABEEgyNTYAAJ0EAAACoQQAoQQMIGV0aGVyZXVtLHRyYW5zYWN0aW9uOEFjY2Vzc0xpc3RJdGVtAAAIARxhZGRyZXNzGQEBHEFkZHJlc3MAARRzbG90c00BASRWZWM8SDI1Nj4AAKUEDCBldGhlcmV1bSx0cmFuc2FjdGlvbkhFSVAxNTU5VHJhbnNhY3Rpb24AADABIGNoYWluX2lkEAEMdTY0AAEUbm9uY2VRAQEQVTI1NgABYG1heF9wcmlvcml0eV9mZWVfcGVyX2dhc1EBARBVMjU2AAE8bWF4X2ZlZV9wZXJfZ2FzUQEBEFUyNTYAASRnYXNfbGltaXRRAQEQVTI1NgABGGFjdGlvbo0EAURUcmFuc2FjdGlvbkFjdGlvbgABFHZhbHVlUQEBEFUyNTYAARRpbnB1dCQBFEJ5dGVzAAEsYWNjZXNzX2xpc3SdBAEoQWNjZXNzTGlzdAABMG9kZF95X3Bhcml0eQ0BARBib29sAAEEciABEEgyNTYAAQRzIAEQSDI1NgAAqQQMKHBhbGxldF9ldm0YcGFsbGV0EENhbGwEBFQAARAgd2l0aGRyYXcIARxhZGRyZXNzGQEBEEgxNjAAARR2YWx1ZXQBMEJhbGFuY2VPZjxUPgAABOBXaXRoZHJhdyBiYWxhbmNlIGZyb20gRVZNIGludG8gY3VycmVuY3kvYmFsYW5jZXMgcGFsbGV0LhBjYWxsJAEYc291cmNlGQEBEEgxNjAAARh0YXJnZXQZAQEQSDE2MAABFGlucHV0JAEcVmVjPHU4PgABFHZhbHVlUQEBEFUyNTYAASRnYXNfbGltaXQQAQx1NjQAATxtYXhfZmVlX3Blcl9nYXNRAQEQVTI1NgABYG1heF9wcmlvcml0eV9mZWVfcGVyX2dhc60EATBPcHRpb248VTI1Nj4AARRub25jZa0EATBPcHRpb248VTI1Nj4AASxhY2Nlc3NfbGlzdLEEAVhWZWM8KEgxNjAsIFZlYzxIMjU2Pik+AAEEXQFJc3N1ZSBhbiBFVk0gY2FsbCBvcGVyYXRpb24uIFRoaXMgaXMgc2ltaWxhciB0byBhIG1lc3NhZ2UgY2FsbCB0cmFuc2FjdGlvbiBpbiBFdGhlcmV1bS4YY3JlYXRlIAEYc291cmNlGQEBEEgxNjAAARBpbml0JAEcVmVjPHU4PgABFHZhbHVlUQEBEFUyNTYAASRnYXNfbGltaXQQAQx1NjQAATxtYXhfZmVlX3Blcl9nYXNRAQEQVTI1NgABYG1heF9wcmlvcml0eV9mZWVfcGVyX2dhc60EATBPcHRpb248VTI1Nj4AARRub25jZa0EATBPcHRpb248VTI1Nj4AASxhY2Nlc3NfbGlzdLEEAVhWZWM8KEgxNjAsIFZlYzxIMjU2Pik+AAIIUQFJc3N1ZSBhbiBFVk0gY3JlYXRlIG9wZXJhdGlvbi4gVGhpcyBpcyBzaW1pbGFyIHRvIGEgY29udHJhY3QgY3JlYXRpb24gdHJhbnNhY3Rpb24gaW4kRXRoZXJldW0uHGNyZWF0ZTIkARhzb3VyY2UZAQEQSDE2MAABEGluaXQkARxWZWM8dTg+AAEQc2FsdCABEEgyNTYAARR2YWx1ZVEBARBVMjU2AAEkZ2FzX2xpbWl0EAEMdTY0AAE8bWF4X2ZlZV9wZXJfZ2FzUQEBEFUyNTYAAWBtYXhfcHJpb3JpdHlfZmVlX3Blcl9nYXOtBAEwT3B0aW9uPFUyNTY+AAEUbm9uY2WtBAEwT3B0aW9uPFUyNTY+AAEsYWNjZXNzX2xpc3SxBAFYVmVjPChIMTYwLCBWZWM8SDI1Nj4pPgADBHxJc3N1ZSBhbiBFVk0gY3JlYXRlMiBvcGVyYXRpb24uBCUBQ29udGFpbnMgb25lIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSB0aGF0IGNhbiBiZSBjYWxsZWQgYnkgYW4gZXh0cmluc2ljLq0EBBhPcHRpb24EBFQBUQEBCBBOb25lAAAAEFNvbWUEAFEBAAABAACxBAAAArUEALUEAAAECBkBTQEAuQQMPHBhbGxldF9iYXNlX2ZlZRhwYWxsZXQQQ2FsbAQEVAABDFBzZXRfYmFzZV9mZWVfcGVyX2dhcwQBDGZlZVEBARBVMjU2AAAANHNldF9pc19hY3RpdmUEASRpc19hY3RpdmUNAQEQYm9vbAABADhzZXRfZWxhc3RpY2l0eQQBKGVsYXN0aWNpdHn8ARxQZXJtaWxsAAIABCUBQ29udGFpbnMgb25lIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSB0aGF0IGNhbiBiZSBjYWxsZWQgYnkgYW4gZXh0cmluc2ljLr0ECFBjcm1sX3Rva2VuX2FwcHJvdmFscxBDYWxsBARUAAEMPGVyYzcyMV9hcHByb3ZhbAwBGGNhbGxlchkBARBIMTYwAAFAb3BlcmF0b3JfYWNjb3VudBkBARBIMTYwAAEgdG9rZW5faWRFBAEcVG9rZW5JZAAADHRTZXQgYXBwcm92YWwgZm9yIGEgc2luZ2xlIE5GVIRNYXBwaW5nIGZyb20gdG9rZW5faWQgdG8gb3BlcmF0b3JsY2xlYXJzIGFwcHJvdmFsIG9uIHRyYW5zZmVyOGVyYzIwX2FwcHJvdmFsEAEYY2FsbGVyGQEBEEgxNjAAARxzcGVuZGVyGQEBEEgxNjAAASBhc3NldF9pZBgBHEFzc2V0SWQAARhhbW91bnR0ARxCYWxhbmNlAAEMTQFTZXQgYXBwcm92YWwgZm9yIGFuIGFjY291bnQgdG8gdHJhbnNmZXIgYW4gYW1vdW50IG9mIHRva2VucyBvbiBiZWhhbGYgb2YgdGhlIGNhbGxlcqRNYXBwaW5nIGZyb20gY2FsbGVyIHRvIHNwZW5kZXIgYW5kIGFtb3VudBEBbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHJpdmF0ZSBfYWxsb3dhbmNlcztUZXJjMjBfcmVtb3ZlX2FwcHJvdmFsDAEYY2FsbGVyGQEBEEgxNjAAARxzcGVuZGVyGQEBEEgxNjAAASBhc3NldF9pZBgBHEFzc2V0SWQAAgTAUmVtb3ZlcyBhbiBhcHByb3ZhbCBvdmVyIGFuIGFjY291bnQgYW5kIGFzc2V0X2lkBExEaXNwYXRjaGFibGUgY2FsbHMuwQQIQHBhbGxldF9zY2hlZHVsZXIgUmVsZWFzZXMAAQgIVjEAAAAIVjIAAQAAxQQMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0FEVycm9yBARUAAEQQEZhaWxlZFRvU2NoZWR1bGUAAARkRmFpbGVkIHRvIHNjaGVkdWxlIGEgY2FsbCBOb3RGb3VuZAABBHxDYW5ub3QgZmluZCB0aGUgc2NoZWR1bGVkIGNhbGwuXFRhcmdldEJsb2NrTnVtYmVySW5QYXN0AAIEpEdpdmVuIHRhcmdldCBibG9jayBudW1iZXIgaXMgaW4gdGhlIHBhc3QuSFJlc2NoZWR1bGVOb0NoYW5nZQADBPBSZXNjaGVkdWxlIGZhaWxlZCBiZWNhdXNlIGl0IGRvZXMgbm90IGNoYW5nZSBzY2hlZHVsZWQgdGltZS4EjQFDdXN0b20gW2Rpc3BhdGNoIGVycm9yc10oaHR0cHM6Ly9kb2NzLnN1YnN0cmF0ZS5pby92My9ydW50aW1lL2V2ZW50cy1hbmQtZXJyb3JzKQoJCQlvZiB0aGlzIHBhbGxldC7JBBA0ZnJhbWVfc3VwcG9ydBxzdG9yYWdlQHdlYWtfYm91bmRlZF92ZWM4V2Vha0JvdW5kZWRWZWMIBFQBzQQEUwAABADRBAEYVmVjPFQ+AADNBAAABAjdARAA0QQAAALNBADVBBA0ZnJhbWVfc3VwcG9ydBxzdG9yYWdlLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBBARTAAAEANkEARhWZWM8VD4AANkEAAACBADdBAQYT3B0aW9uBARUAQQBCBBOb25lAAAAEFNvbWUEAAQAAAEAAOEECERzcF9jb25zZW5zdXNfYmFiZVhCYWJlRXBvY2hDb25maWd1cmF0aW9uAAAIAQRj7QEBKCh1NjQsIHU2NCkAATRhbGxvd2VkX3Nsb3Rz8QEBMEFsbG93ZWRTbG90cwAA5QQMLHBhbGxldF9iYWJlGHBhbGxldBRFcnJvcgQEVAABDGBJbnZhbGlkRXF1aXZvY2F0aW9uUHJvb2YAAAQxAUFuIGVxdWl2b2NhdGlvbiBwcm9vZiBwcm92aWRlZCBhcyBwYXJ0IG9mIGFuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgaW52YWxpZC5gSW52YWxpZEtleU93bmVyc2hpcFByb29mAAEEMQFBIGtleSBvd25lcnNoaXAgcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuWER1cGxpY2F0ZU9mZmVuY2VSZXBvcnQAAgQVAUEgZ2l2ZW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyB2YWxpZCBidXQgYWxyZWFkeSBwcmV2aW91c2x5IHJlcG9ydGVkLgSNAUN1c3RvbSBbZGlzcGF0Y2ggZXJyb3JzXShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpCgkJCW9mIHRoaXMgcGFsbGV0LukEAAAECBgAAO0EDEhjcm1sX2dlbmVyaWNfYXNzZXQUdHlwZXNIUGVybWlzc2lvblZlcnNpb25zBCRBY2NvdW50SWQBAAEECFYxBACAAWBQZXJtaXNzaW9uc1YxPEFjY291bnRJZD4AAAAA8QQAAAL1BAD1BAxIY3JtbF9nZW5lcmljX2Fzc2V0FHR5cGVzLEJhbGFuY2VMb2NrBBxCYWxhbmNlAXQADAEIaWSpAQE4TG9ja0lkZW50aWZpZXIAARhhbW91bnR0ARxCYWxhbmNlAAEccmVhc29uc/kEARxSZWFzb25zAAD5BAxIY3JtbF9nZW5lcmljX2Fzc2V0FHR5cGVzHFJlYXNvbnMAAQwMRmVlAAAAEE1pc2MAAQAMQWxsAAIAAP0ECEhjcm1sX2dlbmVyaWNfYXNzZXQURXJyb3IEBFQAAUhAQXNzZXRJZEV4aGF1c3RlZAAABGxObyBuZXcgYXNzZXRzIGlkIGF2YWlsYWJsZS4oWmVyb0Ftb3VudAABBHBDYW5ub3QgdHJhbnNmZXIgemVybyBhbW91bnQuSE5vVXBkYXRlUGVybWlzc2lvbgACBAUBVGhlIG9yaWdpbiBkb2VzIG5vdCBoYXZlIGVub3VnaCBwZXJtaXNzaW9uIHRvIHVwZGF0ZSBwZXJtaXNzaW9ucy5ATm9NaW50UGVybWlzc2lvbgADBNRUaGUgb3JpZ2luIGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbiB0byBtaW50IGFuIGFzc2V0LkBOb0J1cm5QZXJtaXNzaW9uAAQE1FRoZSBvcmlnaW4gZG9lcyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGJ1cm4gYW4gYXNzZXQuUFRvdGFsTWludGluZ092ZXJmbG93AAUEsFRvdGFsIGlzc3VhbmNlIGdvdCBvdmVyZmxvd2VkIGFmdGVyIG1pbnRpbmcuTEZyZWVNaW50aW5nT3ZlcmZsb3cABgSoRnJlZSBiYWxhbmNlIGdvdCBvdmVyZmxvd2VkIGFmdGVyIG1pbnRpbmcuVFRvdGFsQnVybmluZ1VuZGVyZmxvdwAHBLRUb3RhbCBpc3N1YW5jZSBnb3QgdW5kZXJmbG93ZWQgYWZ0ZXIgYnVybmluZy5QRnJlZUJ1cm5pbmdVbmRlcmZsb3cACASsRnJlZSBiYWxhbmNlIGdvdCB1bmRlcmZsb3dlZCBhZnRlciBidXJuaW5nLjRBc3NldElkRXhpc3RzAAkEaEFzc2V0IGlkIGlzIGFscmVhZHkgdGFrZW4uPEFzc2V0SWROb3RFeGlzdAAKBLRGYWlsdXJlIGR1ZSB0byBhc3NldCBpZCBub3QgZXhpc3Rpbmcgb24gY2hhaW5MSW5zdWZmaWNpZW50QmFsYW5jZQALBJhUaGUgYmFsYW5jZSBpcyB0b28gbG93IHRvIHNlbmQgYW1vdW50LkBUcmFuc2Zlck92ZXJmbG93AAwEvFRoZSB0cmFuc2ZlciB3aWxsIGNhdXNlIHRoZSBhY2NvdW50IHRvIG92ZXJmbG93VExpcXVpZGl0eVJlc3RyaWN0aW9ucwANBNhUaGUgYWNjb3VudCBsaXF1aWRpdHkgcmVzdHJpY3Rpb25zIHByZXZlbnQgd2l0aGRyYXdhbC5YWmVyb0V4aXN0ZW50aWFsRGVwb3NpdAAOBAkBRXhpc3RlbnRpYWwgZGVwb3NpdCBmb3IgYXNzZXRzIHNob3VsZCBhbHdheXMgYmUgZ3JlYXRlciB0aGFuIHplcm8uREFjY291bnRJZE5vdEV4aXN0AA8ErFRoZXJlIGlzIG5vIHN1Y2ggYWNjb3VudCBpZCBpbiB0aGUgc3RvcmFnZS48RGVjaW1hbFRvb0xhcmdlABAEFQFUaGUgaW50ZWdlciBmb3IgZGVjaW1hbCBwbGFjZXMgaXMgdG9vIGxhcmdlIGZvciBjb252ZXJzaW9uIGludG8gdTEyOC5cSW5pdGlhbElzc3VhbmNlVG9vTGFyZ2UAEQQdAVRoZSBpbnRlZ2VyIGZvciBpbml0aWFsIGlzc3VhbmNlIGlzIHRvbyBsYXJnZSBmb3IgY29udmVyc2lvbiBpbnRvIHUxMjguBIxFcnJvciBmb3IgdGhlIGdlbmVyaWMtYXNzZXQgbW9kdWxlLgEFAAACBQUABQUIRHBhbGxldF9hdXRob3JzaGlwOFVuY2xlRW50cnlJdGVtDCxCbG9ja051bWJlcgEYEEhhc2gBIBhBdXRob3IBAAEIPEluY2x1c2lvbkhlaWdodAQAGAEsQmxvY2tOdW1iZXIAAAAUVW5jbGUIACABEEhhc2gAAB0EAThPcHRpb248QXV0aG9yPgABAAAJBQxEcGFsbGV0X2F1dGhvcnNoaXAYcGFsbGV0FEVycm9yBARUAAEcSEludmFsaWRVbmNsZVBhcmVudAAABIhUaGUgdW5jbGUgcGFyZW50IG5vdCBpbiB0aGUgY2hhaW4uQFVuY2xlc0FscmVhZHlTZXQAAQSAVW5jbGVzIGFscmVhZHkgc2V0IGluIHRoZSBibG9jay40VG9vTWFueVVuY2xlcwACBEBUb28gbWFueSB1bmNsZXMuMEdlbmVzaXNVbmNsZQADBFRUaGUgdW5jbGUgaXMgZ2VuZXNpcy4wVG9vSGlnaFVuY2xlAAQEfFRoZSB1bmNsZSBpcyB0b28gaGlnaCBpbiBjaGFpbi5QVW5jbGVBbHJlYWR5SW5jbHVkZWQABQR4VGhlIHVuY2xlIGlzIGFscmVhZHkgaW5jbHVkZWQuIE9sZFVuY2xlAAYEtFRoZSB1bmNsZSBpc24ndCByZWNlbnQgZW5vdWdoIHRvIGJlIGluY2x1ZGVkLgSNAUN1c3RvbSBbZGlzcGF0Y2ggZXJyb3JzXShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpCgkJCW9mIHRoaXMgcGFsbGV0Lg0FAAACEQUAEQUAAAQIGA0BABUFCDBjcm1sX3N0YWtpbmc0U3Rha2luZ0xlZGdlcggkQWNjb3VudElkAQAcQmFsYW5jZQF0ABABFHN0YXNoAAEkQWNjb3VudElkAAEUdG90YWx8ARxCYWxhbmNlAAEYYWN0aXZlfAEcQmFsYW5jZQABJHVubG9ja2luZxkFAWRWZWM8VW5sb2NrQ2h1bms8QmFsYW5jZT4+AAAZBQAAAh0FAB0FCDBjcm1sX3N0YWtpbmcsVW5sb2NrQ2h1bmsEHEJhbGFuY2UBdAAIARR2YWx1ZXwBHEJhbGFuY2UAAQxlcmFpAQEgRXJhSW5kZXgAACEFCDBjcm1sX3N0YWtpbmcsTm9taW5hdGlvbnMEJEFjY291bnRJZAEAAAgBHHRhcmdldHOYAThWZWM8QWNjb3VudElkPgABMHN1Ym1pdHRlZF9pbhgBIEVyYUluZGV4AAAlBQgwY3JtbF9zdGFraW5nNEFjdGl2ZUVyYUluZm8AAAgBFGluZGV4GAEgRXJhSW5kZXgAARRzdGFydIkBASxPcHRpb248dTY0PgAAKQUIMGNybWxfc3Rha2luZxxGb3JjaW5nAAEQKE5vdEZvcmNpbmcAAAAgRm9yY2VOZXcAAQAkRm9yY2VOb25lAAIALEZvcmNlQWx3YXlzAAMAAC0FAAACMQUAMQUIMGNybWxfc3Rha2luZzhVbmFwcGxpZWRTbGFzaAgkQWNjb3VudElkAQAcQmFsYW5jZQF0ABQBJHZhbGlkYXRvcgABJEFjY291bnRJZAABDG93bnQBHEJhbGFuY2UAARhvdGhlcnM1BQFkVmVjPChBY2NvdW50SWQsIEJhbGFuY2UpPgABJHJlcG9ydGVyc5gBOFZlYzxBY2NvdW50SWQ+AAEYcGF5b3V0dAEcQmFsYW5jZQAANQUAAAI5BQA5BQAABAgAdAA9BQAABAiQdABBBQwwY3JtbF9zdGFraW5nIHNsYXNoaW5nNFNsYXNoaW5nU3BhbnMAABABKHNwYW5faW5kZXgYASRTcGFuSW5kZXgAAShsYXN0X3N0YXJ0GAEgRXJhSW5kZXgAAUhsYXN0X25vbnplcm9fc2xhc2gYASBFcmFJbmRleAABFHByaW9yAQEBNFZlYzxFcmFJbmRleD4AAEUFAAAECAAYAEkFDDBjcm1sX3N0YWtpbmcgc2xhc2hpbmcoU3BhblJlY29yZAQcQmFsYW5jZQF0AAgBHHNsYXNoZWR0ARxCYWxhbmNlAAEgcGFpZF9vdXR0ARxCYWxhbmNlAABNBQgwY3JtbF9zdGFraW5nOEVsZWN0aW9uUmVzdWx0CCRBY2NvdW50SWQBABxCYWxhbmNlAXQADAE8ZWxlY3RlZF9zdGFzaGVzmAE4VmVjPEFjY291bnRJZD4AASRleHBvc3VyZXPIAbhWZWM8KEFjY291bnRJZCwgRXhwb3N1cmU8QWNjb3VudElkLCBCYWxhbmNlPik+AAEcY29tcHV0ZZQBPEVsZWN0aW9uQ29tcHV0ZQAAUQUIMGNybWxfc3Rha2luZzhFbGVjdGlvblN0YXR1cwQsQmxvY2tOdW1iZXIBGAEIGENsb3NlZAAAABBPcGVuBAAYASxCbG9ja051bWJlcgABAABVBQAAAlkFAFkFAAAEDF0FZQUYAF0FAAACYQUAYQUMKHNwX3N0YWtpbmccb2ZmZW5jZThPZmZlbmNlRGV0YWlscwggUmVwb3J0ZXIBACBPZmZlbmRlcgHMAAgBIG9mZmVuZGVyzAEgT2ZmZW5kZXIAASRyZXBvcnRlcnOYATRWZWM8UmVwb3J0ZXI+AABlBQAAApAAaQUIMGNybWxfc3Rha2luZxRFcnJvcgQEVAABdDROb3RDb250cm9sbGVyAAAEZE5vdCBhIGNvbnRyb2xsZXIgYWNjb3VudC4gTm90U3Rhc2gAAQRQTm90IGEgc3Rhc2ggYWNjb3VudC40QWxyZWFkeUJvbmRlZAACBGBTdGFzaCBpcyBhbHJlYWR5IGJvbmRlZC40QWxyZWFkeVBhaXJlZAADBHRDb250cm9sbGVyIGlzIGFscmVhZHkgcGFpcmVkLjBFbXB0eVRhcmdldHMABARgVGFyZ2V0cyBjYW5ub3QgYmUgZW1wdHkuREludmFsaWRTbGFzaEluZGV4AAUEhFNsYXNoIHJlY29yZCBpbmRleCBvdXQgb2YgYm91bmRzLkBJbnN1ZmZpY2llbnRCb25kAAYEyENhbiBub3QgYm9uZCB3aXRoIHZhbHVlIGxlc3MgdGhhbiBtaW5pbXVtIGJhbGFuY2UuXEluc3VmZmljaWVudEZyZWVCYWxhbmNlAAcE6FVzZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggZnJlZSBiYWxhbmNlIHRvIGJvbmQgdGhpcyBhbW91bnQwTm9Nb3JlQ2h1bmtzAAgEkENhbiBub3Qgc2NoZWR1bGUgbW9yZSB1bmxvY2sgY2h1bmtzLjROb1VubG9ja0NodW5rAAkEoENhbiBub3QgcmVib25kIHdpdGhvdXQgdW5sb2NraW5nIGNodW5rcy4wRnVuZGVkVGFyZ2V0AAoEyEF0dGVtcHRpbmcgdG8gdGFyZ2V0IGEgc3Rhc2ggdGhhdCBzdGlsbCBoYXMgZnVuZHMuSE5vdFNvcnRlZEFuZFVuaXF1ZQALBIBJdGVtcyBhcmUgbm90IHNvcnRlZCBhbmQgdW5pcXVlLkBEdXBsaWNhdGVOb21pbmVlAAwEvENhbm5vdCBub21pbmF0ZSB0aGUgc2FtZSBhY2NvdW50IG11bHRpcGxlIHRpbWVzfE9mZmNoYWluRWxlY3Rpb25FYXJseVN1Ym1pc3Npb24ADQTgVGhlIHN1Ym1pdHRlZCByZXN1bHQgaXMgcmVjZWl2ZWQgb3V0IG9mIHRoZSBvcGVuIHdpbmRvdy54T2ZmY2hhaW5FbGVjdGlvbldlYWtTdWJtaXNzaW9uAA4E/FRoZSBzdWJtaXR0ZWQgcmVzdWx0IGlzIG5vdCBhcyBnb29kIGFzIHRoZSBvbmUgc3RvcmVkIG9uIGNoYWluLkxTbmFwc2hvdFVuYXZhaWxhYmxlAA8EzFRoZSBzbmFwc2hvdCBkYXRhIG9mIHRoZSBjdXJyZW50IHdpbmRvdyBpcyBtaXNzaW5nLoBPZmZjaGFpbkVsZWN0aW9uQm9ndXNXaW5uZXJDb3VudAAQBKxJbmNvcnJlY3QgbnVtYmVyIG9mIHdpbm5lcnMgd2VyZSBwcmVzZW50ZWQubE9mZmNoYWluRWxlY3Rpb25Cb2d1c1dpbm5lcgARCF0BT25lIG9mIHRoZSBzdWJtaXR0ZWQgd2lubmVycyBpcyBub3QgYW4gYWN0aXZlIGNhbmRpZGF0ZSBvbiBjaGFpbiAoaW5kZXggaXMgb3V0IG9mIHJhbmdlNGluIHNuYXBzaG90KS5wT2ZmY2hhaW5FbGVjdGlvbkJvZ3VzQ29tcGFjdAASCFkBRXJyb3Igd2hpbGUgYnVpbGRpbmcgdGhlIGFzc2lnbm1lbnQgdHlwZSBmcm9tIHRoZSBjb21wYWN0LiBUaGlzIGNhbiBoYXBwZW4gaWYgYW4gaW5kZXikaXMgaW52YWxpZCwgb3IgaWYgdGhlIHdlaWdodHMgX292ZXJmbG93Xy54T2ZmY2hhaW5FbGVjdGlvbkJvZ3VzTm9taW5hdG9yABMEEQFPbmUgb2YgdGhlIHN1Ym1pdHRlZCBub21pbmF0b3JzIGlzIG5vdCBhbiBhY3RpdmUgbm9taW5hdG9yIG9uIGNoYWluLnxPZmZjaGFpbkVsZWN0aW9uQm9ndXNOb21pbmF0aW9uABQESQFPbmUgb2YgdGhlIHN1Ym1pdHRlZCBub21pbmF0b3JzIGhhcyBhbiBlZGdlIHRvIHdoaWNoIHRoZXkgaGF2ZSBub3Qgdm90ZWQgb24gY2hhaW4uhE9mZmNoYWluRWxlY3Rpb25TbGFzaGVkTm9taW5hdGlvbgAVCF0BT25lIG9mIHRoZSBzdWJtaXR0ZWQgbm9taW5hdG9ycyBoYXMgYW4gZWRnZSB3aGljaCBpcyBzdWJtaXR0ZWQgYmVmb3JlIHRoZSBsYXN0IG5vbi16ZXJvUHNsYXNoIG9mIHRoZSB0YXJnZXQudE9mZmNoYWluRWxlY3Rpb25Cb2d1c1NlbGZWb3RlABYEIQFBIHNlbGYgdm90ZSBtdXN0IG9ubHkgYmUgb3JpZ2luYXRlZCBmcm9tIGEgdmFsaWRhdG9yIHRvIE9OTFkgdGhlbXNlbHZlcy5kT2ZmY2hhaW5FbGVjdGlvbkJvZ3VzRWRnZQAXBEEBVGhlIHN1Ym1pdHRlZCByZXN1bHQgaGFzIHVua25vd24gZWRnZXMgdGhhdCBhcmUgbm90IGFtb25nIHRoZSBwcmVzZW50ZWQgd2lubmVycy5oT2ZmY2hhaW5FbGVjdGlvbkJvZ3VzU2NvcmUAGAQVAVRoZSBjbGFpbWVkIHNjb3JlIGRvZXMgbm90IG1hdGNoIHdpdGggdGhlIG9uZSBjb21wdXRlZCBmcm9tIHRoZSBkYXRhLoRPZmZjaGFpbkVsZWN0aW9uQm9ndXNFbGVjdGlvblNpemUAGQR0VGhlIGVsZWN0aW9uIHNpemUgaXMgaW52YWxpZC44Q2FsbE5vdEFsbG93ZWQAGgRFAVRoZSBjYWxsIGlzIG5vdCBhbGxvd2VkIGF0IHRoZSBnaXZlbiB0aW1lIGR1ZSB0byByZXN0cmljdGlvbnMgb2YgZWxlY3Rpb24gcGVyaW9kLlRJbmNvcnJlY3RIaXN0b3J5RGVwdGgAGwTASW5jb3JyZWN0IHByZXZpb3VzIGhpc3RvcnkgZGVwdGggaW5wdXQgcHJvdmlkZWQuWEluY29ycmVjdFNsYXNoaW5nU3BhbnMAHASwSW5jb3JyZWN0IG51bWJlciBvZiBzbGFzaGluZyBzcGFucyBwcm92aWRlZC4EdEVycm9yIGZvciB0aGUgc3Rha2luZyBtb2R1bGUubQUAAAQIoCQAcQUAAAJ1BQB1BQAABAgA9QIAeQUAAAQIfQUkAH0FDBxzcF9jb3JlGGNyeXB0byRLZXlUeXBlSWQAAAQANAEcW3U4OyA0XQAAgQUMOHBhbGxldF9zZXNzaW9uGHBhbGxldBRFcnJvcgQEVAABFDBJbnZhbGlkUHJvb2YAAARgSW52YWxpZCBvd25lcnNoaXAgcHJvb2YuXE5vQXNzb2NpYXRlZFZhbGlkYXRvcklkAAEEnE5vIGFzc29jaWF0ZWQgdmFsaWRhdG9yIElEIGZvciBhY2NvdW50LjREdXBsaWNhdGVkS2V5AAIEZFJlZ2lzdGVyZWQgZHVwbGljYXRlIGtleS4YTm9LZXlzAAMEpE5vIGtleXMgYXJlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGFjY291bnQuJE5vQWNjb3VudAAEBBkBS2V5IHNldHRpbmcgYWNjb3VudCBpcyBub3QgbGl2ZSwgc28gaXQncyBpbXBvc3NpYmxlIHRvIGFzc29jaWF0ZSBrZXlzLgR0RXJyb3IgZm9yIHRoZSBzZXNzaW9uIHBhbGxldC6FBQg4cGFsbGV0X2dyYW5kcGEsU3RvcmVkU3RhdGUEBE4BGAEQEExpdmUAAAAwUGVuZGluZ1BhdXNlCAEwc2NoZWR1bGVkX2F0GAEETgABFGRlbGF5GAEETgABABhQYXVzZWQAAgA0UGVuZGluZ1Jlc3VtZQgBMHNjaGVkdWxlZF9hdBgBBE4AARRkZWxheRgBBE4AAwAAiQUIOHBhbGxldF9ncmFuZHBhTFN0b3JlZFBlbmRpbmdDaGFuZ2UIBE4BGBRMaW1pdAAAEAEwc2NoZWR1bGVkX2F0GAEETgABFGRlbGF5GAEETgABQG5leHRfYXV0aG9yaXRpZXONBQFsQm91bmRlZEF1dGhvcml0eUxpc3Q8TGltaXQ+AAEYZm9yY2VkBQEBJE9wdGlvbjxOPgAAjQUQNGZyYW1lX3N1cHBvcnQcc3RvcmFnZUB3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAbAEUwAABACsARhWZWM8VD4AAJEFDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQURXJyb3IEBFQAARwsUGF1c2VGYWlsZWQAAAgFAUF0dGVtcHQgdG8gc2lnbmFsIEdSQU5EUEEgcGF1c2Ugd2hlbiB0aGUgYXV0aG9yaXR5IHNldCBpc24ndCBsaXZlpChlaXRoZXIgcGF1c2VkIG9yIGFscmVhZHkgcGVuZGluZyBwYXVzZSkuMFJlc3VtZUZhaWxlZAABCBEBQXR0ZW1wdCB0byBzaWduYWwgR1JBTkRQQSByZXN1bWUgd2hlbiB0aGUgYXV0aG9yaXR5IHNldCBpc24ndCBwYXVzZWSgKGVpdGhlciBsaXZlIG9yIGFscmVhZHkgcGVuZGluZyByZXN1bWUpLjRDaGFuZ2VQZW5kaW5nAAIE6EF0dGVtcHQgdG8gc2lnbmFsIEdSQU5EUEEgY2hhbmdlIHdpdGggb25lIGFscmVhZHkgcGVuZGluZy4cVG9vU29vbgADBLxDYW5ub3Qgc2lnbmFsIGZvcmNlZCBjaGFuZ2Ugc28gc29vbiBhZnRlciBsYXN0LmBJbnZhbGlkS2V5T3duZXJzaGlwUHJvb2YABAQxAUEga2V5IG93bmVyc2hpcCBwcm9vZiBwcm92aWRlZCBhcyBwYXJ0IG9mIGFuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgaW52YWxpZC5gSW52YWxpZEVxdWl2b2NhdGlvblByb29mAAUEMQFBbiBlcXVpdm9jYXRpb24gcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuWER1cGxpY2F0ZU9mZmVuY2VSZXBvcnQABgQVAUEgZ2l2ZW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyB2YWxpZCBidXQgYWxyZWFkeSBwcmV2aW91c2x5IHJlcG9ydGVkLgSNAUN1c3RvbSBbZGlzcGF0Y2ggZXJyb3JzXShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpCgkJCW9mIHRoaXMgcGFsbGV0LpUFEDRmcmFtZV9zdXBwb3J0HHN0b3JhZ2VAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAHABFMAAAQAmQUBGFZlYzxUPgAAmQUAAALAAJ0FEDRmcmFtZV9zdXBwb3J0GHRyYWl0cxBtaXNjNFdyYXBwZXJPcGFxdWUEBFQBoQUACABpAQAAAKEFAQRUAAChBQhAcGFsbGV0X2ltX29ubGluZWRCb3VuZGVkT3BhcXVlTmV0d29ya1N0YXRlDExQZWVySWRFbmNvZGluZ0xpbWl0AFhNdWx0aUFkZHJFbmNvZGluZ0xpbWl0ADhBZGRyZXNzZXNMaW1pdAAACAEccGVlcl9pZKUFAZxXZWFrQm91bmRlZFZlYzx1OCwgUGVlcklkRW5jb2RpbmdMaW1pdD4AAUhleHRlcm5hbF9hZGRyZXNzZXOpBQEtAVdlYWtCb3VuZGVkVmVjPFdlYWtCb3VuZGVkVmVjPHU4LCBNdWx0aUFkZHJFbmNvZGluZ0xpbWl0PiwgQWRkcmVzc2VzTGltaXQKPgAApQUQNGZyYW1lX3N1cHBvcnQcc3RvcmFnZUB3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAQgEUwAABAAkARhWZWM8VD4AAKkFEDRmcmFtZV9zdXBwb3J0HHN0b3JhZ2VAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAGlBQRTAAAEAK0FARhWZWM8VD4AAK0FAAACpQUAsQUMQHBhbGxldF9pbV9vbmxpbmUYcGFsbGV0FEVycm9yBARUAAEIKEludmFsaWRLZXkAAARgTm9uIGV4aXN0ZW50IHB1YmxpYyBrZXkuTER1cGxpY2F0ZWRIZWFydGJlYXQAAQRURHVwbGljYXRlZCBoZWFydGJlYXQuBI0BQ3VzdG9tIFtkaXNwYXRjaCBlcnJvcnNdKGh0dHBzOi8vZG9jcy5zdWJzdHJhdGUuaW8vdjMvcnVudGltZS9ldmVudHMtYW5kLWVycm9ycykKCQkJb2YgdGhpcyBwYWxsZXQutQUMLHBhbGxldF9zdWRvGHBhbGxldBRFcnJvcgQEVAABBCxSZXF1aXJlU3VkbwAABHxTZW5kZXIgbXVzdCBiZSB0aGUgU3VkbyBhY2NvdW50BGRFcnJvciBmb3IgdGhlIFN1ZG8gcGFsbGV0uQUIPHBhbGxldF90cmVhc3VyeSBQcm9wb3NhbAgkQWNjb3VudElkAQAcQmFsYW5jZQF0ABABIHByb3Bvc2VyAAEkQWNjb3VudElkAAEUdmFsdWV0ARxCYWxhbmNlAAEsYmVuZWZpY2lhcnkAASRBY2NvdW50SWQAARBib25kdAEcQmFsYW5jZQAAvQUQNGZyYW1lX3N1cHBvcnQcc3RvcmFnZSxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUARgEUwAABAABAQEYVmVjPFQ+AADBBQg0ZnJhbWVfc3VwcG9ydCBQYWxsZXRJZAAABACpAQEcW3U4OyA4XQAAxQUMPHBhbGxldF90cmVhc3VyeRhwYWxsZXQURXJyb3IIBFQABEkAAQxwSW5zdWZmaWNpZW50UHJvcG9zZXJzQmFsYW5jZQAABHhQcm9wb3NlcidzIGJhbGFuY2UgaXMgdG9vIGxvdy4wSW52YWxpZEluZGV4AAEEkE5vIHByb3Bvc2FsIG9yIGJvdW50eSBhdCB0aGF0IGluZGV4LkBUb29NYW55QXBwcm92YWxzAAIEgFRvbyBtYW55IGFwcHJvdmFscyBpbiB0aGUgcXVldWUuBHhFcnJvciBmb3IgdGhlIHRyZWFzdXJ5IHBhbGxldC7JBQw4cGFsbGV0X3V0aWxpdHkYcGFsbGV0FEVycm9yBARUAAEEMFRvb01hbnlDYWxscwAABFxUb28gbWFueSBjYWxscyBiYXRjaGVkLgSNAUN1c3RvbSBbZGlzcGF0Y2ggZXJyb3JzXShodHRwczovL2RvY3Muc3Vic3RyYXRlLmlvL3YzL3J1bnRpbWUvZXZlbnRzLWFuZC1lcnJvcnMpCgkJCW9mIHRoaXMgcGFsbGV0Ls0FDDxwYWxsZXRfaWRlbnRpdHkUdHlwZXMwUmVnaXN0cmF0aW9uDBxCYWxhbmNlAXQ0TWF4SnVkZ2VtZW50cwBMTWF4QWRkaXRpb25hbEZpZWxkcwAADAEoanVkZ2VtZW50c9EFAfxCb3VuZGVkVmVjPChSZWdpc3RyYXJJbmRleCwgSnVkZ2VtZW50PEJhbGFuY2U+KSwgTWF4SnVkZ2VtZW50cz4AARxkZXBvc2l0dAEcQmFsYW5jZQABEGluZm99AwGESWRlbnRpdHlJbmZvPE1heEFkZGl0aW9uYWxGaWVsZHM+AADRBRA0ZnJhbWVfc3VwcG9ydBxzdG9yYWdlLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQB1QUEUwAABADZBQEYVmVjPFQ+AADVBQAABAgYFQQA2QUAAALVBQDdBQAABAh04QUA4QUQNGZyYW1lX3N1cHBvcnQcc3RvcmFnZSxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABACYARhWZWM8VD4AAOUFEDRmcmFtZV9zdXBwb3J0HHN0b3JhZ2UsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHpBQRTAAAEAPEFARhWZWM8VD4AAOkFBBhPcHRpb24EBFQB7QUBCBBOb25lAAAAEFNvbWUEAO0FAAABAADtBQw8cGFsbGV0X2lkZW50aXR5FHR5cGVzNFJlZ2lzdHJhckluZm8IHEJhbGFuY2UBdCRBY2NvdW50SWQBAAAMARxhY2NvdW50AAEkQWNjb3VudElkAAEMZmVldAEcQmFsYW5jZQABGGZpZWxkcw0EAThJZGVudGl0eUZpZWxkcwAA8QUAAALpBQD1BQw8cGFsbGV0X2lkZW50aXR5GHBhbGxldBRFcnJvcgQEVAABREhUb29NYW55U3ViQWNjb3VudHMAAARcVG9vIG1hbnkgc3Vicy1hY2NvdW50cy4gTm90Rm91bmQAAQRQQWNjb3VudCBpc24ndCBmb3VuZC4gTm90TmFtZWQAAgRQQWNjb3VudCBpc24ndCBuYW1lZC4oRW1wdHlJbmRleAADBDBFbXB0eSBpbmRleC4oRmVlQ2hhbmdlZAAEBDxGZWUgaXMgY2hhbmdlZC4oTm9JZGVudGl0eQAFBEhObyBpZGVudGl0eSBmb3VuZC48U3RpY2t5SnVkZ2VtZW50AAYERFN0aWNreSBqdWRnZW1lbnQuOEp1ZGdlbWVudEdpdmVuAAcEQEp1ZGdlbWVudCBnaXZlbi5ASW52YWxpZEp1ZGdlbWVudAAIBEhJbnZhbGlkIGp1ZGdlbWVudC4wSW52YWxpZEluZGV4AAkEVFRoZSBpbmRleCBpcyBpbnZhbGlkLjRJbnZhbGlkVGFyZ2V0AAoEWFRoZSB0YXJnZXQgaXMgaW52YWxpZC40VG9vTWFueUZpZWxkcwALBGxUb28gbWFueSBhZGRpdGlvbmFsIGZpZWxkcy5EVG9vTWFueVJlZ2lzdHJhcnMADAToTWF4aW11bSBhbW91bnQgb2YgcmVnaXN0cmFycyByZWFjaGVkLiBDYW5ub3QgYWRkIGFueSBtb3JlLjhBbHJlYWR5Q2xhaW1lZAANBHBBY2NvdW50IElEIGlzIGFscmVhZHkgbmFtZWQuGE5vdFN1YgAOBHBTZW5kZXIgaXMgbm90IGEgc3ViLWFjY291bnQuIE5vdE93bmVkAA8EiFN1Yi1hY2NvdW50IGlzbid0IG93bmVkIGJ5IHNlbmRlci40U3ViTm90RW5hYmxlZAAQBGBTdWItYWNjb3VudHMgbm90IGVuYWJsZWQEjQFDdXN0b20gW2Rpc3BhdGNoIGVycm9yc10oaHR0cHM6Ly9kb2NzLnN1YnN0cmF0ZS5pby92My9ydW50aW1lL2V2ZW50cy1hbmQtZXJyb3JzKQoJCQlvZiB0aGlzIHBhbGxldC75BQw0c3BfYXJpdGhtZXRpYyxmaXhlZF9wb2ludCRGaXhlZFUxMjgAAAQAdAEQdTEyOAAA/QUIYGNybWxfdHJhbnNhY3Rpb25fcGF5bWVudCBSZWxlYXNlcwABCCRWMUFuY2llbnQAAAAIVjIAAQAAAQYAAAIFBgAFBgw0ZnJhbWVfc3VwcG9ydBx3ZWlnaHRzWFdlaWdodFRvRmVlQ29lZmZpY2llbnQEHEJhbGFuY2UBdAAQATRjb2VmZl9pbnRlZ2VydAEcQmFsYW5jZQABKGNvZWZmX2ZyYWOQARxQZXJiaWxsAAEgbmVnYXRpdmUNAQEQYm9vbAABGGRlZ3JlZQgBCHU4AAAJBgAABAhkAAANBggsY3JtbF9jZW5uengURXJyb3IEBFQAAUhERW1wdHlFeGNoYW5nZVBvb2wAAAB8SW5zdWZmaWNpZW50RXhjaGFuZ2VQb29sUmVzZXJ2ZQABAExJbnN1ZmZpY2llbnRCYWxhbmNlAAIAVEluc3VmZmljaWVudExpcXVpZGl0eQADAHRJbnN1ZmZpY2llbnRUcmFkZUFzc2V0QmFsYW5jZQAEAHBJbnN1ZmZpY2llbnRDb3JlQXNzZXRCYWxhbmNlAAUAPENhbm5vdFRyYWRlWmVybwAGAGhDYW5ub3RBZGRMaXF1aWRpdHlXaXRoWmVybwAHAGxNaW5pbXVtQnV5UmVxdWlyZW1lbnROb3RNZXQACABwTWF4aW11bVNlbGxSZXF1aXJlbWVudE5vdE1ldAAJAIhNaW5pbXVtVHJhZGVBc3NldFJlcXVpcmVtZW50Tm90TWV0AAoAhE1pbmltdW1Db3JlQXNzZXRSZXF1aXJlbWVudE5vdE1ldAALAIRNaW5pbXVtTGlxdWlkaXR5UmVxdWlyZW1lbnROb3RNZXQADACITWF4aW11bVRyYWRlQXNzZXRSZXF1aXJlbWVudE5vdE1ldAANAGBBc3NldENhbm5vdFN3YXBGb3JJdHNlbGYADgA4SW52YWxpZEFzc2V0SWQADwAgT3ZlcmZsb3cAEAAwRGl2aWRlQnlaZXJvABEAABEGAAACdAAVBhAwY3JtbF9zdGFraW5nHHJld2FyZHMUdHlwZXM8RXJhUmV3YXJkUG9pbnRzBCRBY2NvdW50SWQBAAAIARR0b3RhbBgBLFJld2FyZFBvaW50AAEoaW5kaXZpZHVhbBkGAYBCVHJlZU1hcDxBY2NvdW50SWQsIFJld2FyZFBvaW50PgAAGQYEIEJUcmVlTWFwCARLAQAEVgEYAAQAHQYAAAAdBgAAAkUFACEGDCBjcm1sX25mdBR0eXBlczxUb2tlbkxvY2tSZWFzb24AAQQYTGlzdGVkBAB0ASRMaXN0aW5nSWQAAAAAJQYAAAQIZBgAKQYEIEJUcmVlTWFwCARLAWQEVgEYAAQALQYAAAAtBgAAAiUGADEGDCBjcm1sX25mdBR0eXBlcyxNYXJrZXRwbGFjZQQkQWNjb3VudElkAQAACAEcYWNjb3VudAABJEFjY291bnRJZAABLGVudGl0bGVtZW50/AEcUGVybWlsbAAANQYAAAI5BgA5BgwgY3JtbF9uZnQUdHlwZXNETkZUQXR0cmlidXRlVmFsdWUAATAMSTMyBAA9BgEMaTMyAAAACFU4BAAIAQh1OAABAAxVMTYEAK0BAQx1MTYAAgAMVTMyBAAYAQx1MzIAAwAMVTY0BAAQAQx1NjQABAAQVTEyOAQAdAEQdTEyOAAFABxCeXRlczMyBAAEASBbdTg7IDMyXQAGABRCeXRlcwQAJAEcVmVjPHU4PgAHABhTdHJpbmcEACQBHFZlYzx1OD4ACAAQSGFzaAQABAEgW3U4OyAzMl0ACQAkVGltZXN0YW1wBAAQAQx1NjQACgAMVXJsBAAkARxWZWM8dTg+AAsAAD0GAAAFCwBBBgwgY3JtbF9uZnQUdHlwZXMcTGlzdGluZwQEVAABCChGaXhlZFByaWNlBABFBgFQRml4ZWRQcmljZUxpc3Rpbmc8VD4AAAAcQXVjdGlvbgQASQYBREF1Y3Rpb25MaXN0aW5nPFQ+AAEAAEUGDCBjcm1sX25mdBR0eXBlc0RGaXhlZFByaWNlTGlzdGluZwQEVAAAIAE0cGF5bWVudF9hc3NldBgB7Dw8VCBhcyBDb25maWc+OjpNdWx0aUN1cnJlbmN5IGFzIE11bHRpQ3VycmVuY3k+OjpDdXJyZW5jeUlkAAEsZml4ZWRfcHJpY2V0AeA8PFQgYXMgQ29uZmlnPjo6TXVsdGlDdXJyZW5jeSBhcyBNdWx0aUN1cnJlbmN5Pjo6QmFsYW5jZQABFGNsb3NlGAE4VDo6QmxvY2tOdW1iZXIAARRidXllch0EAVBPcHRpb248VDo6QWNjb3VudElkPgABGHNlbGxlcgABMFQ6OkFjY291bnRJZAABGHRva2Vuc0kEATBWZWM8VG9rZW5JZD4AAUhyb3lhbHRpZXNfc2NoZWR1bGU5BAF8Um95YWx0aWVzU2NoZWR1bGU8VDo6QWNjb3VudElkPgABOG1hcmtldHBsYWNlX2lkBQEBVE9wdGlvbjxNYXJrZXRwbGFjZUlkPgAASQYMIGNybWxfbmZ0FHR5cGVzOEF1Y3Rpb25MaXN0aW5nBARUAAAcATRwYXltZW50X2Fzc2V0GAHsPDxUIGFzIENvbmZpZz46Ok11bHRpQ3VycmVuY3kgYXMgTXVsdGlDdXJyZW5jeT46OkN1cnJlbmN5SWQAATRyZXNlcnZlX3ByaWNldAHgPDxUIGFzIENvbmZpZz46Ok11bHRpQ3VycmVuY3kgYXMgTXVsdGlDdXJyZW5jeT46OkJhbGFuY2UAARRjbG9zZRgBOFQ6OkJsb2NrTnVtYmVyAAEYc2VsbGVyAAEwVDo6QWNjb3VudElkAAEYdG9rZW5zSQQBMFZlYzxUb2tlbklkPgABSHJveWFsdGllc19zY2hlZHVsZTkEAXxSb3lhbHRpZXNTY2hlZHVsZTxUOjpBY2NvdW50SWQ+AAE4bWFya2V0cGxhY2VfaWQFAQFUT3B0aW9uPE1hcmtldHBsYWNlSWQ+AABNBgAABAgYdABRBgggY3JtbF9uZnQURXJyb3IEBFQAAVBIQ29sbGVjdGlvbklkRXhpc3RzAAAEsEEgY29sbGVjdGlvbiB3aXRoIHRoZSBzYW1lIElEIGFscmVhZHkgZXhpc3RzVENvbGxlY3Rpb25OYW1lSW52YWxpZAABBAUBR2l2ZW4gY29sbGVjdGlvbiBuYW1lIGlzIGludmFsaWQgKGludmFsaWQgdXRmLTgsIHRvbyBsb25nLCBlbXB0eSk4Tm9BdmFpbGFibGVJZHMAAgTETm8gbW9yZSBJZHMgYXJlIGF2YWlsYWJsZSwgdGhleSd2ZSBiZWVuIGV4aGF1c3RlZExTY2hlbWFNYXhBdHRyaWJ1dGVzAAMEyFRvbyBtYW55IGF0dHJpYnV0ZXMgaW4gdGhlIHByb3ZpZGVkIHNjaGVtYSBvciBkYXRhSE1heEF0dHJpYnV0ZUxlbmd0aAAEBOBHaXZlbiBhdHRyaWJ1dGUgdmFsdWUgaXMgbGFyZ2VyIHRoYW4gdGhlIGNvbmZpZ3VyZWQgbWF4LjBOb1Blcm1pc3Npb24ABQQtAW9yaWdpbiBkb2VzIG5vdCBoYXZlIHBlcm1pc3Npb24gZm9yIHRoZSBvcGVyYXRpb24gKHRoZSB0b2tlbiBtYXkgbm90IGV4aXN0KTBOb0NvbGxlY3Rpb24ABgSEVGhlIE5GVCBjb2xsZWN0aW9uIGRvZXMgbm90IGV4aXN0HE5vVG9rZW4ABwRgVGhlIHRva2VuIGRvZXMgbm90IGV4aXN0UE5vdEZvckZpeGVkUHJpY2VTYWxlAAgEsFRoZSB0b2tlbiBpcyBub3QgbGlzdGVkIGZvciBmaXhlZCBwcmljZSBzYWxlNE5vdEZvckF1Y3Rpb24ACQSgVGhlIHRva2VuIGlzIG5vdCBsaXN0ZWQgZm9yIGF1Y3Rpb24gc2FsZVhUb2tlbkxpc3RpbmdQcm90ZWN0aW9uAAoEeENhbm5vdCBvcGVyYXRlIG9uIGEgbGlzdGVkIE5GVDxJbnRlcm5hbFBheW1lbnQACwR0SW50ZXJuYWwgZXJyb3IgZHVyaW5nIHBheW1lbnRAUm95YWx0aWVzSW52YWxpZAAMBBUBVG90YWwgcm95YWx0aWVzIHdvdWxkIGV4Y2VlZCAxMDAlIG9mIHNhbGUgb3IgYW4gZW1wdHkgdmVjIGlzIHN1cHBsaWVkJEJpZFRvb0xvdwANBORBdWN0aW9uIGJpZCB3YXMgbG93ZXIgdGhhbiByZXNlcnZlIG9yIGN1cnJlbnQgaGlnaGVzdCBiaWQ8TWl4ZWRCdW5kbGVTYWxlAA4E4FNlbGxpbmcgdG9rZW5zIGZyb20gZGlmZmVyZW50IGNvbGxlY3Rpb25zIGlzIG5vdCBhbGxvd2VkTFJveWFsdGllc1Byb3RlY3Rpb24ADwQJAVRva2VucyB3aXRoIGRpZmZlcmVudCBpbmRpdmlkdWFsIHJveWFsdGllcyBjYW5ub3QgYmUgc29sZCB0b2dldGhlcmBNYXJrZXRwbGFjZU5vdFJlZ2lzdGVyZWQAEATYVGhlIGFjY291bnRfaWQgaGFzbid0IGJlZW4gcmVnaXN0ZXJlZCBhcyBhIG1hcmtldHBsYWNlIE5vU2VyaWVzABEEZFRoZSBzZXJpZXMgZG9lcyBub3QgZXhpc3Q4TmFtZUFscmVhZHlTZXQAEgRwVGhlIFNlcmllcyBuYW1lIGhhcyBiZWVuIHNldExJbnZhbGlkTWV0YWRhdGFQYXRoABMEwFRoZSBtZXRhZGF0YSBwYXRoIGlzIGludmFsaWQgKG5vbi11dGY4IG9yIGVtcHR5KQR0RXJyb3IgZm9yIHRoZSBzdGFraW5nIG1vZHVsZS5VBgw8Y3JtbF9nb3Zlcm5hbmNlFHR5cGVzIFByb3Bvc2FsBARUAAAMARxzcG9uc29yAAEwVDo6QWNjb3VudElkAAFEanVzdGlmaWNhdGlvbl91cmkkARxWZWM8dTg+AAE8ZW5hY3RtZW50X2RlbGF5GAE4VDo6QmxvY2tOdW1iZXIAAFkGDDxjcm1sX2dvdmVybmFuY2UUdHlwZXNAUHJvcG9zYWxWb3RlSW5mbwAACAEkdm90ZV9iaXRzXQYBMCh1MTI4LCB1MTI4KQABLGFjdGl2ZV9iaXRzXQYBMCh1MTI4LCB1MTI4KQAAXQYAAAQIdHQAYQYMPGNybWxfZ292ZXJuYW5jZRR0eXBlc0hQcm9wb3NhbFN0YXR1c0luZm8AARwwRGVsaWJlcmF0aW9uAAAAWFJlZmVyZW5kdW1EZWxpYmVyYXRpb24AAQBgQXBwcm92ZWRXYWl0aW5nRW5hY3RtZW50AAIAPEFwcHJvdmVkRW5hY3RlZAQADQEBEGJvb2wAAwBoQXBwcm92ZWRFbmFjdG1lbnRDYW5jZWxsZWQABAAsRGlzYXBwcm92ZWQABQBAUmVmZXJlbmR1bVZldG9lZAAGAABlBgAABAgQAABpBgw0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzHFBlcmNlbnQAAAQACAEIdTgAAG0GAAAECCAYAHEGAAAECBD9AgB1BgAABAgZASAAeQYAAAL9AgB9BgAABAgQIACBBgAABAgkCACFBgg8Y3JtbF9ldGhfd2FsbGV0FEVycm9yBARUAAEIQEludmFsaWRTaWduYXR1cmUAAAR8U2lnbmF0dXJlICYgYWNjb3VudCBtaXNtYXRjaGVkLhxDYW50UGF5AAEEOENhbid0IHBheSBmZWVzAIkGAAACjQYAjQYAAAQMhQSRBqUGAJEGCBhmcF9ycGNEVHJhbnNhY3Rpb25TdGF0dXMAABwBQHRyYW5zYWN0aW9uX2hhc2ggARBIMjU2AAFEdHJhbnNhY3Rpb25faW5kZXgYAQx1MzIAARBmcm9tGQEBEEgxNjAAAQh0b5UGATBPcHRpb248SDE2MD4AAUBjb250cmFjdF9hZGRyZXNzlQYBME9wdGlvbjxIMTYwPgABEGxvZ3OZBgEgVmVjPExvZz4AAShsb2dzX2Jsb29tnQYBFEJsb29tAACVBgQYT3B0aW9uBARUARkBAQgQTm9uZQAAABBTb21lBAAZAQAAAQAAmQYAAAJJAQCdBgggZXRoYmxvb20UQmxvb20AAAQAoQYBQFt1ODsgQkxPT01fU0laRV0AAKEGAAADAAEAAAgApQYMIGV0aGVyZXVtHHJlY2VpcHQkUmVjZWlwdFYzAAEMGExlZ2FjeQQAqQYBREVJUDY1OFJlY2VpcHREYXRhAAAAHEVJUDI5MzAEAKkGAUhFSVAyOTMwUmVjZWlwdERhdGEAAQAcRUlQMTU1OQQAqQYBSEVJUDE1NTlSZWNlaXB0RGF0YQACAACpBgwgZXRoZXJldW0ccmVjZWlwdERFSVA2NThSZWNlaXB0RGF0YQAAEAEsc3RhdHVzX2NvZGUIAQh1OAABIHVzZWRfZ2FzUQEBEFUyNTYAAShsb2dzX2Jsb29tnQYBFEJsb29tAAEQbG9nc5kGASBWZWM8TG9nPgAArQYMIGV0aGVyZXVtFGJsb2NrFEJsb2NrBARUAYUEAAwBGGhlYWRlcrEGARhIZWFkZXIAATB0cmFuc2FjdGlvbnO5BgEYVmVjPFQ+AAEYb21tZXJzvQYBLFZlYzxIZWFkZXI+AACxBgwgZXRoZXJldW0YaGVhZGVyGEhlYWRlcgAAPAEscGFyZW50X2hhc2ggARBIMjU2AAEsb21tZXJzX2hhc2ggARBIMjU2AAEsYmVuZWZpY2lhcnkZAQEQSDE2MAABKHN0YXRlX3Jvb3QgARBIMjU2AAFEdHJhbnNhY3Rpb25zX3Jvb3QgARBIMjU2AAE0cmVjZWlwdHNfcm9vdCABEEgyNTYAAShsb2dzX2Jsb29tnQYBFEJsb29tAAEoZGlmZmljdWx0eVEBARBVMjU2AAEYbnVtYmVyUQEBEFUyNTYAASRnYXNfbGltaXRRAQEQVTI1NgABIGdhc191c2VkUQEBEFUyNTYAASR0aW1lc3RhbXAQAQx1NjQAAShleHRyYV9kYXRhJAEUQnl0ZXMAASBtaXhfaGFzaCABEEgyNTYAARRub25jZbUGAQxINjQAALUGDDhldGhlcmV1bV90eXBlcxBoYXNoDEg2NAAABACpAQEcW3U4OyA4XQAAuQYAAAKFBAC9BgAAArEGAMEGAAACpQYAxQYAAAKRBgDJBgw8cGFsbGV0X2V0aGVyZXVtGHBhbGxldBRFcnJvcgQEVAABCEBJbnZhbGlkU2lnbmF0dXJlAAAEVFNpZ25hdHVyZSBpcyBpbnZhbGlkLjBQcmVMb2dFeGlzdHMAAQTYUHJlLWxvZyBpcyBwcmVzZW50LCB0aGVyZWZvcmUgdHJhbnNhY3QgaXMgbm90IGFsbG93ZWQuBI0BQ3VzdG9tIFtkaXNwYXRjaCBlcnJvcnNdKGh0dHBzOi8vZG9jcy5zdWJzdHJhdGUuaW8vdjMvcnVudGltZS9ldmVudHMtYW5kLWVycm9ycykKCQkJb2YgdGhpcyBwYWxsZXQuzQYMKHBhbGxldF9ldm0YcGFsbGV0FEVycm9yBARUAAEYKEJhbGFuY2VMb3cAAASQTm90IGVub3VnaCBiYWxhbmNlIHRvIHBlcmZvcm0gYWN0aW9uLEZlZU92ZXJmbG93AAEEgENhbGN1bGF0aW5nIHRvdGFsIGZlZSBvdmVyZmxvd2VkPFBheW1lbnRPdmVyZmxvdwACBJBDYWxjdWxhdGluZyB0b3RhbCBwYXltZW50IG92ZXJmbG93ZWQ4V2l0aGRyYXdGYWlsZWQAAwRMV2l0aGRyYXcgZmVlIGZhaWxlZDhHYXNQcmljZVRvb0xvdwAEBFRHYXMgcHJpY2UgaXMgdG9vIGxvdy4wSW52YWxpZE5vbmNlAAUEQE5vbmNlIGlzIGludmFsaWQEjQFDdXN0b20gW2Rpc3BhdGNoIGVycm9yc10oaHR0cHM6Ly9kb2NzLnN1YnN0cmF0ZS5pby92My9ydW50aW1lL2V2ZW50cy1hbmQtZXJyb3JzKQoJCQlvZiB0aGlzIHBhbGxldC7RBgAABAgZAWQA1QYAAAIZAQDZBgAABAjdBhkBAN0GAAAECBkBGADhBgxEZnBfc2VsZl9jb250YWluZWRMdW5jaGVja2VkX2V4dHJpbnNpY0hVbmNoZWNrZWRFeHRyaW5zaWMQHEFkZHJlc3MBABBDYWxsAcEBJFNpZ25hdHVyZQHlBhRFeHRyYQHpBgAEABkHASUBc3BfcnVudGltZTo6Z2VuZXJpYzo6VW5jaGVja2VkRXh0cmluc2ljPEFkZHJlc3MsIENhbGwsIFNpZ25hdHVyZSwgRXh0cmEKPgAA5QYIKHNwX3J1bnRpbWU4TXVsdGlTaWduYXR1cmUAAQwcRWQyNTUxOQQAIQMBSGVkMjU1MTk6OlNpZ25hdHVyZQAAABxTcjI1NTE5BABVAwFIc3IyNTUxOTo6U2lnbmF0dXJlAAEAFEVjZHNhBABhBAFAZWNkc2E6OlNpZ25hdHVyZQACAADpBgAABBztBvEG9Qb5BgEHBQcJBwDtBhAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnNIY2hlY2tfc3BlY192ZXJzaW9uQENoZWNrU3BlY1ZlcnNpb24EBFQAAAAA8QYQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zQGNoZWNrX3R4X3ZlcnNpb244Q2hlY2tUeFZlcnNpb24EBFQAAAAA9QYQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zNGNoZWNrX2dlbmVzaXMwQ2hlY2tHZW5lc2lzBARUAAAAAPkGEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczxjaGVja19tb3J0YWxpdHk4Q2hlY2tNb3J0YWxpdHkEBFQAAAQA/QYBDEVyYQAA/QYQKHNwX3J1bnRpbWUcZ2VuZXJpYwxlcmEMRXJhAAEBBCBJbW1vcnRhbAAAABxNb3J0YWwxBAAIAAABABxNb3J0YWwyBAAIAAACABxNb3J0YWwzBAAIAAADABxNb3J0YWw0BAAIAAAEABxNb3J0YWw1BAAIAAAFABxNb3J0YWw2BAAIAAAGABxNb3J0YWw3BAAIAAAHABxNb3J0YWw4BAAIAAAIABxNb3J0YWw5BAAIAAAJACBNb3J0YWwxMAQACAAACgAgTW9ydGFsMTEEAAgAAAsAIE1vcnRhbDEyBAAIAAAMACBNb3J0YWwxMwQACAAADQAgTW9ydGFsMTQEAAgAAA4AIE1vcnRhbDE1BAAIAAAPACBNb3J0YWwxNgQACAAAEAAgTW9ydGFsMTcEAAgAABEAIE1vcnRhbDE4BAAIAAASACBNb3J0YWwxOQQACAAAEwAgTW9ydGFsMjAEAAgAABQAIE1vcnRhbDIxBAAIAAAVACBNb3J0YWwyMgQACAAAFgAgTW9ydGFsMjMEAAgAABcAIE1vcnRhbDI0BAAIAAAYACBNb3J0YWwyNQQACAAAGQAgTW9ydGFsMjYEAAgAABoAIE1vcnRhbDI3BAAIAAAbACBNb3J0YWwyOAQACAAAHAAgTW9ydGFsMjkEAAgAAB0AIE1vcnRhbDMwBAAIAAAeACBNb3J0YWwzMQQACAAAHwAgTW9ydGFsMzIEAAgAACAAIE1vcnRhbDMzBAAIAAAhACBNb3J0YWwzNAQACAAAIgAgTW9ydGFsMzUEAAgAACMAIE1vcnRhbDM2BAAIAAAkACBNb3J0YWwzNwQACAAAJQAgTW9ydGFsMzgEAAgAACYAIE1vcnRhbDM5BAAIAAAnACBNb3J0YWw0MAQACAAAKAAgTW9ydGFsNDEEAAgAACkAIE1vcnRhbDQyBAAIAAAqACBNb3J0YWw0MwQACAAAKwAgTW9ydGFsNDQEAAgAACwAIE1vcnRhbDQ1BAAIAAAtACBNb3J0YWw0NgQACAAALgAgTW9ydGFsNDcEAAgAAC8AIE1vcnRhbDQ4BAAIAAAwACBNb3J0YWw0OQQACAAAMQAgTW9ydGFsNTAEAAgAADIAIE1vcnRhbDUxBAAIAAAzACBNb3J0YWw1MgQACAAANAAgTW9ydGFsNTMEAAgAADUAIE1vcnRhbDU0BAAIAAA2ACBNb3J0YWw1NQQACAAANwAgTW9ydGFsNTYEAAgAADgAIE1vcnRhbDU3BAAIAAA5ACBNb3J0YWw1OAQACAAAOgAgTW9ydGFsNTkEAAgAADsAIE1vcnRhbDYwBAAIAAA8ACBNb3J0YWw2MQQACAAAPQAgTW9ydGFsNjIEAAgAAD4AIE1vcnRhbDYzBAAIAAA/ACBNb3J0YWw2NAQACAAAQAAgTW9ydGFsNjUEAAgAAEEAIE1vcnRhbDY2BAAIAABCACBNb3J0YWw2NwQACAAAQwAgTW9ydGFsNjgEAAgAAEQAIE1vcnRhbDY5BAAIAABFACBNb3J0YWw3MAQACAAARgAgTW9ydGFsNzEEAAgAAEcAIE1vcnRhbDcyBAAIAABIACBNb3J0YWw3MwQACAAASQAgTW9ydGFsNzQEAAgAAEoAIE1vcnRhbDc1BAAIAABLACBNb3J0YWw3NgQACAAATAAgTW9ydGFsNzcEAAgAAE0AIE1vcnRhbDc4BAAIAABOACBNb3J0YWw3OQQACAAATwAgTW9ydGFsODAEAAgAAFAAIE1vcnRhbDgxBAAIAABRACBNb3J0YWw4MgQACAAAUgAgTW9ydGFsODMEAAgAAFMAIE1vcnRhbDg0BAAIAABUACBNb3J0YWw4NQQACAAAVQAgTW9ydGFsODYEAAgAAFYAIE1vcnRhbDg3BAAIAABXACBNb3J0YWw4OAQACAAAWAAgTW9ydGFsODkEAAgAAFkAIE1vcnRhbDkwBAAIAABaACBNb3J0YWw5MQQACAAAWwAgTW9ydGFsOTIEAAgAAFwAIE1vcnRhbDkzBAAIAABdACBNb3J0YWw5NAQACAAAXgAgTW9ydGFsOTUEAAgAAF8AIE1vcnRhbDk2BAAIAABgACBNb3J0YWw5NwQACAAAYQAgTW9ydGFsOTgEAAgAAGIAIE1vcnRhbDk5BAAIAABjACRNb3J0YWwxMDAEAAgAAGQAJE1vcnRhbDEwMQQACAAAZQAkTW9ydGFsMTAyBAAIAABmACRNb3J0YWwxMDMEAAgAAGcAJE1vcnRhbDEwNAQACAAAaAAkTW9ydGFsMTA1BAAIAABpACRNb3J0YWwxMDYEAAgAAGoAJE1vcnRhbDEwNwQACAAAawAkTW9ydGFsMTA4BAAIAABsACRNb3J0YWwxMDkEAAgAAG0AJE1vcnRhbDExMAQACAAAbgAkTW9ydGFsMTExBAAIAABvACRNb3J0YWwxMTIEAAgAAHAAJE1vcnRhbDExMwQACAAAcQAkTW9ydGFsMTE0BAAIAAByACRNb3J0YWwxMTUEAAgAAHMAJE1vcnRhbDExNgQACAAAdAAkTW9ydGFsMTE3BAAIAAB1ACRNb3J0YWwxMTgEAAgAAHYAJE1vcnRhbDExOQQACAAAdwAkTW9ydGFsMTIwBAAIAAB4ACRNb3J0YWwxMjEEAAgAAHkAJE1vcnRhbDEyMgQACAAAegAkTW9ydGFsMTIzBAAIAAB7ACRNb3J0YWwxMjQEAAgAAHwAJE1vcnRhbDEyNQQACAAAfQAkTW9ydGFsMTI2BAAIAAB+ACRNb3J0YWwxMjcEAAgAAH8AJE1vcnRhbDEyOAQACAAAgAAkTW9ydGFsMTI5BAAIAACBACRNb3J0YWwxMzAEAAgAAIIAJE1vcnRhbDEzMQQACAAAgwAkTW9ydGFsMTMyBAAIAACEACRNb3J0YWwxMzMEAAgAAIUAJE1vcnRhbDEzNAQACAAAhgAkTW9ydGFsMTM1BAAIAACHACRNb3J0YWwxMzYEAAgAAIgAJE1vcnRhbDEzNwQACAAAiQAkTW9ydGFsMTM4BAAIAACKACRNb3J0YWwxMzkEAAgAAIsAJE1vcnRhbDE0MAQACAAAjAAkTW9ydGFsMTQxBAAIAACNACRNb3J0YWwxNDIEAAgAAI4AJE1vcnRhbDE0MwQACAAAjwAkTW9ydGFsMTQ0BAAIAACQACRNb3J0YWwxNDUEAAgAAJEAJE1vcnRhbDE0NgQACAAAkgAkTW9ydGFsMTQ3BAAIAACTACRNb3J0YWwxNDgEAAgAAJQAJE1vcnRhbDE0OQQACAAAlQAkTW9ydGFsMTUwBAAIAACWACRNb3J0YWwxNTEEAAgAAJcAJE1vcnRhbDE1MgQACAAAmAAkTW9ydGFsMTUzBAAIAACZACRNb3J0YWwxNTQEAAgAAJoAJE1vcnRhbDE1NQQACAAAmwAkTW9ydGFsMTU2BAAIAACcACRNb3J0YWwxNTcEAAgAAJ0AJE1vcnRhbDE1OAQACAAAngAkTW9ydGFsMTU5BAAIAACfACRNb3J0YWwxNjAEAAgAAKAAJE1vcnRhbDE2MQQACAAAoQAkTW9ydGFsMTYyBAAIAACiACRNb3J0YWwxNjMEAAgAAKMAJE1vcnRhbDE2NAQACAAApAAkTW9ydGFsMTY1BAAIAAClACRNb3J0YWwxNjYEAAgAAKYAJE1vcnRhbDE2NwQACAAApwAkTW9ydGFsMTY4BAAIAACoACRNb3J0YWwxNjkEAAgAAKkAJE1vcnRhbDE3MAQACAAAqgAkTW9ydGFsMTcxBAAIAACrACRNb3J0YWwxNzIEAAgAAKwAJE1vcnRhbDE3MwQACAAArQAkTW9ydGFsMTc0BAAIAACuACRNb3J0YWwxNzUEAAgAAK8AJE1vcnRhbDE3NgQACAAAsAAkTW9ydGFsMTc3BAAIAACxACRNb3J0YWwxNzgEAAgAALIAJE1vcnRhbDE3OQQACAAAswAkTW9ydGFsMTgwBAAIAAC0ACRNb3J0YWwxODEEAAgAALUAJE1vcnRhbDE4MgQACAAAtgAkTW9ydGFsMTgzBAAIAAC3ACRNb3J0YWwxODQEAAgAALgAJE1vcnRhbDE4NQQACAAAuQAkTW9ydGFsMTg2BAAIAAC6ACRNb3J0YWwxODcEAAgAALsAJE1vcnRhbDE4OAQACAAAvAAkTW9ydGFsMTg5BAAIAAC9ACRNb3J0YWwxOTAEAAgAAL4AJE1vcnRhbDE5MQQACAAAvwAkTW9ydGFsMTkyBAAIAADAACRNb3J0YWwxOTMEAAgAAMEAJE1vcnRhbDE5NAQACAAAwgAkTW9ydGFsMTk1BAAIAADDACRNb3J0YWwxOTYEAAgAAMQAJE1vcnRhbDE5NwQACAAAxQAkTW9ydGFsMTk4BAAIAADGACRNb3J0YWwxOTkEAAgAAMcAJE1vcnRhbDIwMAQACAAAyAAkTW9ydGFsMjAxBAAIAADJACRNb3J0YWwyMDIEAAgAAMoAJE1vcnRhbDIwMwQACAAAywAkTW9ydGFsMjA0BAAIAADMACRNb3J0YWwyMDUEAAgAAM0AJE1vcnRhbDIwNgQACAAAzgAkTW9ydGFsMjA3BAAIAADPACRNb3J0YWwyMDgEAAgAANAAJE1vcnRhbDIwOQQACAAA0QAkTW9ydGFsMjEwBAAIAADSACRNb3J0YWwyMTEEAAgAANMAJE1vcnRhbDIxMgQACAAA1AAkTW9ydGFsMjEzBAAIAADVACRNb3J0YWwyMTQEAAgAANYAJE1vcnRhbDIxNQQACAAA1wAkTW9ydGFsMjE2BAAIAADYACRNb3J0YWwyMTcEAAgAANkAJE1vcnRhbDIxOAQACAAA2gAkTW9ydGFsMjE5BAAIAADbACRNb3J0YWwyMjAEAAgAANwAJE1vcnRhbDIyMQQACAAA3QAkTW9ydGFsMjIyBAAIAADeACRNb3J0YWwyMjMEAAgAAN8AJE1vcnRhbDIyNAQACAAA4AAkTW9ydGFsMjI1BAAIAADhACRNb3J0YWwyMjYEAAgAAOIAJE1vcnRhbDIyNwQACAAA4wAkTW9ydGFsMjI4BAAIAADkACRNb3J0YWwyMjkEAAgAAOUAJE1vcnRhbDIzMAQACAAA5gAkTW9ydGFsMjMxBAAIAADnACRNb3J0YWwyMzIEAAgAAOgAJE1vcnRhbDIzMwQACAAA6QAkTW9ydGFsMjM0BAAIAADqACRNb3J0YWwyMzUEAAgAAOsAJE1vcnRhbDIzNgQACAAA7AAkTW9ydGFsMjM3BAAIAADtACRNb3J0YWwyMzgEAAgAAO4AJE1vcnRhbDIzOQQACAAA7wAkTW9ydGFsMjQwBAAIAADwACRNb3J0YWwyNDEEAAgAAPEAJE1vcnRhbDI0MgQACAAA8gAkTW9ydGFsMjQzBAAIAADzACRNb3J0YWwyNDQEAAgAAPQAJE1vcnRhbDI0NQQACAAA9QAkTW9ydGFsMjQ2BAAIAAD2ACRNb3J0YWwyNDcEAAgAAPcAJE1vcnRhbDI0OAQACAAA+AAkTW9ydGFsMjQ5BAAIAAD5ACRNb3J0YWwyNTAEAAgAAPoAJE1vcnRhbDI1MQQACAAA+wAkTW9ydGFsMjUyBAAIAAD8ACRNb3J0YWwyNTMEAAgAAP0AJE1vcnRhbDI1NAQACAAA/gAkTW9ydGFsMjU1BAAIAAD/AAABBxAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnMsY2hlY2tfbm9uY2UoQ2hlY2tOb25jZQQEVAAABAD5AQEgVDo6SW5kZXgAAAUHEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczBjaGVja193ZWlnaHQsQ2hlY2tXZWlnaHQEBFQAAAAACQcIYGNybWxfdHJhbnNhY3Rpb25fcGF5bWVudGBDaGFyZ2VUcmFuc2FjdGlvblBheW1lbnQEBFQAAAgBDHRpcHwBMEJhbGFuY2VPZjxUPgABMGZlZV9leGNoYW5nZQ0HAbRPcHRpb248RmVlRXhjaGFuZ2U8VDo6QXNzZXRJZCwgQmFsYW5jZU9mPFQ+Pj4AAA0HBBhPcHRpb24EBFQBEQcBCBBOb25lAAAAEFNvbWUEABEHAAABAAARBwxMY2VubnpuZXRfcHJpbWl0aXZlcxR0eXBlcyxGZWVFeGNoYW5nZQgcQXNzZXRJZAEYHEJhbGFuY2UBdAEECFYxBAAVBwF8RmVlRXhjaGFuZ2VWMTxBc3NldElkLCBCYWxhbmNlPgAAAAAVBwxMY2VubnpuZXRfcHJpbWl0aXZlcxR0eXBlczRGZWVFeGNoYW5nZVYxCBxBc3NldElkARgcQmFsYW5jZQF0AAgBIGFzc2V0X2lkaQEBHEFzc2V0SWQAASxtYXhfcGF5bWVudHwBHEJhbGFuY2UAABkHEChzcF9ydW50aW1lHGdlbmVyaWNMdW5jaGVja2VkX2V4dHJpbnNpY0hVbmNoZWNrZWRFeHRyaW5zaWMQHEFkZHJlc3MBABBDYWxsAcEBJFNpZ25hdHVyZQHlBhRFeHRyYQHpBgAEACQAAAAdBwhAY2VubnpuZXRfcnVudGltZRxSdW50aW1lAAAAAHQYU3lzdGVtAAFtAQAAAAAkU2NoZWR1bGVyAAHFAQAAAAEQQmFiZQABzQEAAAACJFRpbWVzdGFtcAAB9QEAAAADMEdlbmVyaWNBc3NldAAB/QEAAAAEKEF1dGhvcnNoaXAAAQECAAAABRxTdGFraW5nAAEJAgAAAAYgT2ZmZW5jZXMAAAAAAAccU2Vzc2lvbgAB8QIAAAAIHEdyYW5kcGEAAQkDAAAACSBJbU9ubGluZQABOQMAAAAKSEF1dGhvcml0eURpc2NvdmVyeQAAAAAACxBTdWRvAAFZAwAAAAwgVHJlYXN1cnkAAV0DAAAADRxVdGlsaXR5AAFhAwAAAA4gSWRlbnRpdHkAAXkDAAAAD0hUcmFuc2FjdGlvblBheW1lbnQAAAAAABAoSGlzdG9yaWNhbAAAAAAAERhDZW5uengAARkEAAAAEhxSZXdhcmRzAAEpBAAAABMMTmZ0AAEtBAAAABQoR292ZXJuYW5jZQABTQQAAAAVJEV0aEJyaWRnZQABUQQAAAAWIEVyYzIwUGVnAAFpBAAAABckRXRoV2FsbGV0AAF5BAAAABggRXRoZXJldW0AAYEEAAAAGQxFVk0AAakEAAAAGhxCYXNlRmVlAAG5BAAAABs4VG9rZW5BcHByb3ZhbHMAAb0EAAAAHOEGBBxAQ2hlY2tTcGVjVmVyc2lvbu0GGDhDaGVja1R4VmVyc2lvbvEGGDBDaGVja0dlbmVzaXP1BiA4Q2hlY2tNb3J0YWxpdHn5BiAoQ2hlY2tOb25jZQEHFCxDaGVja1dlaWdodAUHFGBDaGFyZ2VUcmFuc2FjdGlvblBheW1lbnQJBxQA"}}
