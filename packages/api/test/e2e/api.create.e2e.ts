// Copyright 2019-2020 Centrality Investments Limited
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { Api } from '../../src/Api';
import staticMetadata from '../../src/staticMetadata';
import config from '../../../../config';
import { Metadata } from '@polkadot/metadata';
import ExtrinsicPayload from "@cennznet/types/interfaces/extrinsic/v1/ExtrinsicPayload";

describe('e2e api create', () => {
let api;
  it('Should get rejected if it is not resolved in a specific period of time', async () => {
    const provider = config.wsProvider[`${process.env.TEST_TYPE}`];
    await expect(Api.create({provider, timeout: 1})).rejects.toThrow(
        'Timed out in 1 ms.');
  });

  it('For local chain - checking if static metadata is same as latest', async () => {
    const provider = config.wsProvider[`${process.env.TEST_TYPE}`];
    api = await Api.create({provider});
    const meta = staticMetadata[`${api.genesisHash.toHex()}-${api.runtimeVersion.specVersion.toNumber()}`];
    expect(meta).toBeDefined();
    expect(new Metadata(api.registry, meta).asLatest).toEqual(api.runtimeMetadata.asLatest);
  });

  it('Should create an Api instance with the timeout option', async () => {
    const provider = config.wsProvider[`${process.env.TEST_TYPE}`];
    api = await Api.create({provider, timeout: 1000000});

    const hash = await api.rpc.chain.getBlockHash();

    expect(hash).toBeDefined();
  });

  it('Creating extrinsic payload via registry with no transaction payment', async () => {
    const provider = config.wsProvider[`${process.env.TEST_TYPE}`];
    api = await Api.create({provider});
    const payload = {
      address: "5FWnYjJEKK9Kxi34XZBAT1WYNKuRw6mmwD9DsonBu3eaBUp3",
      blockHash: "0x6614a99d9046da1f9588c5766f3eb5d5bf561081cd3a7990fc1e3e269f35367e",
      blockNumber: "0x00000a3b",
      era: "0xb603",
      genesisHash: "0xb492b8652211d9982a7475d1a4dd0c4790d8ba1a55f69515e4270ed94528e5a2",
      method: "0x040105fabe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f419c",
      nonce: "0x0000000000000000",
      signedExtensions: ["CheckSpecVersion", "CheckTxVersion", "CheckGenesis", "CheckMortality", "CheckNonce", "CheckWeight", "ChargeTransactionPayment"],
      specVersion: "0x00000026",
      tip: null,
      transactionPayment: {tip: 0, feeExchange: null},
      transactionVersion: "0x00000005",
      version: 4
    };
    const extPayload = api.registry.createType('ExtrinsicPayload', payload, { version: 4 });
    expect((extPayload.toHuman() as unknown as ExtrinsicPayload).transactionPayment).toEqual({tip: '0', feeExchange: null});
  });

  it('Creating extrinsic payload via registry with transaction payment option', async () => {
    const provider = config.wsProvider[`${process.env.TEST_TYPE}`];
    api = await Api.create({provider});
    const maxPayment = 50_000_000_000;
    const assetId = api.registry.createType('AssetId', 16000);
    const feeExchange = api.registry.createType('FeeExchange', {assetId, maxPayment}, 0);
    const payload = {
      address: "5FWnYjJEKK9Kxi34XZBAT1WYNKuRw6mmwD9DsonBu3eaBUp3",
      blockHash: "0x6614a99d9046da1f9588c5766f3eb5d5bf561081cd3a7990fc1e3e269f35367e",
      blockNumber: "0x00000a3b",
      era: "0xb603",
      genesisHash: "0xb492b8652211d9982a7475d1a4dd0c4790d8ba1a55f69515e4270ed94528e5a2",
      method: "0x040105fabe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f419c",
      nonce: "0x0000000000000000",
      signedExtensions: ["CheckSpecVersion", "CheckTxVersion", "CheckGenesis", "CheckMortality", "CheckNonce", "CheckWeight", "ChargeTransactionPayment"],
      specVersion: "0x00000026",
      tip: null,
      transactionPayment: {tip: 2, feeExchange},
      transactionVersion: "0x00000005",
      version: 4
    };
    const extPayload = api.registry.createType('ExtrinsicPayload', payload, { version: 4 });
    expect((extPayload.toHuman() as unknown as ExtrinsicPayload).transactionPayment).toEqual({tip: '2.0000 pUnit', feeExchange:{ FeeExchangeV1: { assetId: '16,000', maxPayment: '50.0000 mUnit' }}});
  });


  it('Should get rejected if the connection fails', async done => {
    const incorrectEndPoint = 'wss://rimu.unfrastructure.io/private/ws';
    await expect(Api.create({ provider: incorrectEndPoint })).rejects.toThrow('Connection fail');
    done();
  });

  // TODO - enable and update this test after runtime upgrade on Azalea
  it.skip('Use custom metadata and test it is used when creating API instance', async () => {
    const provider = 'wss://cennznet.unfrastructure.io/public/ws'; // Use Azalea
    const meta = '';
    const genesisHash_runtimeVersion = '0x0d0971c150a9741b8719b3c6c9c2e96ec5b2e3fb83641af868e6650f3e263ef0-39';
    let metadata = {};
    metadata[genesisHash_runtimeVersion] = meta;
    api = await Api.create({provider, metadata});
    // expect(api.runtimeMetadata.toHex()).toEqual(new Metadata(api.registry, meta).toHex());
    console.log('API query::', api.query.genericAsset);
    console.log('API tx::', api.tx.genericAsset);
  });
});
