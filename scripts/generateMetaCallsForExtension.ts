import { Api } from '../packages/api/src/Api';
import { allExtensions as userExtensions } from '../packages/types/src/interfaces/extrinsic/signedExtensions';
import { Metadata } from '@polkadot/metadata';
import { getSpecTypes } from '@polkadot/types-known';
import * as fs from 'fs';
import process from "process";

async function getMetaCalls(apis: { [p: string]: Api}) {
  let metaMapObject = Object.keys(apis).reduce(function (accumulator, genesisHash ) {
    const currentApi = apis[genesisHash];
    const specVersion = currentApi.runtimeVersion.specVersion.toString();
    const metaFetched = new Metadata(currentApi.registry, currentApi.runtimeMetadata.toHex());
    const metaCalls = Buffer.from(metaFetched.asCallsOnly.toU8a()).toString('base64');
    accumulator[`${genesisHash}-${specVersion}`] = metaCalls;
    return accumulator;
  }, {});
  const metaDataJSON = {"metaCalls": metaMapObject};
  console.log(`Writing static metadata to extension-releases/metaCalls.json`);
  fs.writeFileSync("extension-releases/metaCalls.json", JSON.stringify(metaDataJSON) , 'utf8');
}

const CHAIN_NIKAU = "CENNZnet Nikau";
const CHAIN_AZALEA = "CENNZnet Azalea";
const CHAIN_RATA = "CENNZnet Rata";
const CHAIN_LOCAL = "Development";

const GENESIS_NIKAU = "0xc65170707265757d8a1fb8e039062286b8f0092f2984f5938588bd8e0f21ca2e";
const GENESIS_AZALEA = "0x0d0971c150a9741b8719b3c6c9c2e96ec5b2e3fb83641af868e6650f3e263ef0";
const GENESIS_RATA = "0x6f2ca0f5c770a9212d30b49604b2e45e2d3c949a3a940bfe908d68dbc4a0415e";
const GENESIS_LOCAL = "0xba29ccef64182e17dee0f9d8bbaddc69e439acdc9409149e5c409d696c14232e";

const CHAIN_MAP = {
  [CHAIN_AZALEA]: GENESIS_AZALEA,
  [CHAIN_NIKAU]: GENESIS_NIKAU,
  [CHAIN_RATA]: GENESIS_RATA,
  [CHAIN_LOCAL]: GENESIS_LOCAL,
}

async function getTypeDefinition(apis: { [p: string]: Api}) {
  let typesInChain = Object.keys(apis).reduce(function (accumulator, systemChain ) {
    const currentAPI = apis[systemChain];
    // spec types will get the types per system-chain per spec-version
    // https://github.com/polkadot-js/api/blob/a9c9fb5769dec7ada8612d6068cf69de04aa15ed/packages/types-known/src/index.ts#L43
    const specTypes = getSpecTypes(
      currentAPI.registry,
      systemChain,
      currentAPI.runtimeVersion.specName,
      currentAPI.runtimeVersion.specVersion
    );
    // remove all the classes from the spectypes
    // the metadata that gets updated on the cennznet extension requires types of type (Record<string, string|object>)
    const filteredSpecTypes = Object.keys(specTypes)
      .filter(key => {
        if (typeof specTypes[key] === 'function') {
          return false;
        }
        return true;
      })
      .reduce((obj, key) => {
        obj[key] = specTypes[key];
        return obj;
      }, {});
    accumulator[`${CHAIN_MAP[systemChain]}`] = { types: filteredSpecTypes, userExtensions};
    return accumulator;
  }, {});
  console.log(`Writing types definition to extension-releases/runtimeModuleTypes.json`);
  // console.log('typesInChain:: ',typesInChain);
  fs.writeFileSync("extension-releases/runtimeModuleTypes.json", JSON.stringify(typesInChain) , 'utf8');
}

// CENNZnet extension will listen to the metadata generated by this script to update its metadata
// Assuming docker images are running as
/*
docker run --network=host -d cennznet/cennznet:nikau-latest --dev --ws-external --ws-port=9941 --no-mdns
docker run --network=host -d cennznet/cennznet:azalea-latest --dev --ws-external --ws-port=9942 --no-mdns
docker run --network=host -d cennznet/cennznet:rata-latest --dev --ws-external --ws-port=9943 --no-mdns
docker run --network=host -d cennznet/cennznet:latest --dev --ws-external --ws-port=9944 --no-mdns
 */
async function generateMetaCallsForExtensionReleases() {
  const providerAzalea = 'wss://cennznet.unfrastructure.io/public/ws';
  // const providerAzalea = 'ws://localhost:9942';
  const apiAzalea = await Api.create({ provider: providerAzalea });
  const providerNikau = 'wss://nikau.centrality.me/public/ws';
  // const providerNikau = 'ws://localhost:9941';
  const apiNikau = await Api.create({ provider: providerNikau });
  const providerRata = 'wss://kong2.centrality.me/public/rata/ws';
  // const providerRata = 'ws://localhost:9943';
  const apiRata = await Api.create({ provider: providerRata });
  const providerLocal = 'ws://localhost:9944';
  const apiLocal = await Api.create({ provider: providerLocal });
  await getMetaCalls({ [GENESIS_LOCAL]: apiLocal, [GENESIS_AZALEA]: apiAzalea, [GENESIS_NIKAU]: apiNikau, [GENESIS_RATA]: apiRata });
  await getTypeDefinition({ [CHAIN_LOCAL]: apiLocal, [CHAIN_AZALEA]: apiAzalea, [CHAIN_NIKAU]: apiNikau, [CHAIN_RATA]: apiRata });
  process.exit();
}

generateMetaCallsForExtensionReleases();
